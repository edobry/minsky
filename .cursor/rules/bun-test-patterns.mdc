---
name: Bun Test Patterns
description: Use when implementing bun:test patterns for mocking, types, and runtime.
globs: '**/*.test.ts'
alwaysApply: false
---

# Bun Test Patterns

## Mocking Best Practices

### Function Mocking
- **CORRECT PATTERN**: Use `jest.fn()` from bun:test for mock functions:
  ```typescript
  import { jest } from "bun:test";
  const mockFunction = jest.fn();
  mockFunction.mockReturnValue("mocked value");
  mockFunction.mockImplementation(() => { /* custom logic */ });
  mockFunction.mockClear(); // For resetting between tests
  ```

- **AVOID**: Using `mock()` or `mock.fn()` directly, which may cause type inconsistencies:
  ```typescript
  // Avoid these patterns as they cause type/runtime inconsistencies
  const mockFunction = mock(() => {});
  const mockFunction = mock.fn();
  ```

### Module Mocking
- **CORRECT PATTERN**: Combine `mock.module()` with `jest.fn()` for clean module mocking:
  ```typescript
  import { mock, jest } from "bun:test";

  const mockExportedFunction = jest.fn();
  mock.module("../path/to/module", () => ({
    exportedFunction: mockExportedFunction
  }));

  // Clean up after tests
  afterEach(() => {
    mock.restore(); // NOT mock.restoreAll()
  });
  ```

### Type vs Runtime Discrepancies
- When encountering linter warnings that conflict with documented bun:test behavior:
  1. Verify the pattern against bun:test documentation
  2. If the pattern is correct according to docs but triggers linter errors:
     - Proceed with the implementation if tests run correctly
     - Document the discrepancy in code comments
     - Example comment: `// Note: test.todo() works at runtime despite linter error`

### Required Test Imports
- Always include the full set of required imports for testing:
  ```typescript
  import { describe, it, test, expect, beforeEach, afterEach, mock, jest, spyOn } from "bun:test";
  ```

## Troubleshooting Common Issues

### Mock Function Issues
- **Issue**: `TypeError: mock.fn is not a function`
  - **Solution**: Use `jest.fn()` instead of `mock.fn()`

### Test Skip/Todo Issues
- **Issue**: Linter error on `test.skip()` or `test.todo()`
  - **Solution**: Proceed with implementation; these functions work at runtime

### Mock Cleanup Issues
- **Issue**: Mocks persisting between tests
  - **Solution**: Use `mock.restore()` in `afterEach`, not `mock.restoreAll()`

### Mock Methods Missing
- **Issue**: TypeScript errors for methods like `mockClear()` or `mockReturnValue()`
  - **Solution**: Ensure you're using `jest.fn()` rather than `mock()` or `mock.fn()`
