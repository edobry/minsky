---
name: Minsky Workflow
description: Core workflow orchestration guide for Minsky
tags:
  - workflow
  - core
  - required
---
# Minsky Workflow

This rule defines the complete workflow for working with tasks and sessions in Minsky.

## Core Workflow Steps

### 1. Task Management

**List Available Tasks**
```bash
minsky tasks list [--all] [--status <value>] [--filter <value>] [--limit <value>] [--repo <value>] [--workspace <value>] [--session <value>] [--backend <value>] [--json]
```



**Get Task Details**

```bash
minsky tasks get <taskId> [--repo <value>] [--workspace <value>] [--session <value>] [--backend <value>] [--json]
```



**Check Task Status**

```bash
minsky tasks status.get <taskId> [--repo <value>] [--workspace <value>] [--session <value>] [--backend <value>] [--json]
```



### 2. Session Management

**Start New Session**

```bash
minsky session start [--name <value>] [--task <value>] [--description <value>] [--branch <value>] [--repo <value>] [--session <value>] [--json] [--quiet] [--noStatusUpdate] [--skipInstall] [--packageManager <value>]
```



**Get Session Directory**

```bash
minsky session dir [--name <value>] [--task <value>] [--repo <value>] [--json]
```



### 3. Implementation Process

1. **Create Session**: Use session.start with task ID
2. **Work in Session**: All code changes happen in the session directory
3. **Regular Commits**: Commit changes frequently
4. **Create PR**: Use session.pr.create when ready for review
5. **Update Status**: Set task status to IN-REVIEW

### 4. Review & Completion

**Create Pull Request / Changeset**

```bash
# Primary commands:
minsky session pr create [--title <value>] [--type <value>] [--body <value>] [--bodyPath <value>] [--name <value>] [--task <value>] [--repo <value>] [--noStatusUpdate] [--debug] [--skipUpdate] [--autoResolveDeleteConflicts] [--skipConflictCheck]

# Changeset aliases (same functionality):
minsky session changeset create [same parameters]
minsky session cs create [same parameters]  # short alias
```



**Update Task Status**

```bash
minsky tasks status.set <taskId> [--status <value>] [--repo <value>] [--workspace <value>] [--session <value>] [--backend <value>] [--json]
```



## Best Practices

- Always work in sessions for code isolation
- Use descriptive commit messages
- Update task status at key milestones
- Document any architectural decisions
- Test changes before creating PRs

## Command Parameters

- `all`: Include all tasks regardless of status (Optional, Default: `false`)
- `status`: Task status (Optional)
- `filter`: Filter criteria for tasks (Optional)
- `limit`: Maximum number of tasks to return (Optional)
- `repo`: Repository path (Optional)
- `workspace`: Workspace path (Optional)
- `session`: Session identifier (Optional)
- `backend`: Backend type (Optional)
- `json`: Output in JSON format (Optional, Default: `false`)

- `name`: Session name (Optional)
- `task`: Task ID (Optional)
- `description`: Task description for auto-creation (Optional)
- `branch`: Git branch to use (Optional)
- `repo`: Repository path (Optional)
- `session`: Session identifier (Optional)
- `json`: Output in JSON format (Optional, Default: `false`)
- `quiet`: Suppress output (Optional, Default: `false`)
- `noStatusUpdate`: Skip updating task status (Optional, Default: `false`)
- `skipInstall`: Skip dependency installation (Optional, Default: `false`)
- `packageManager`: Package manager to use (Optional)

- `title`: PR title (Optional)
- `body`: PR body content (Optional)
- `bodyPath`: Path to file containing PR body (Optional)
- `name`: Session name (Optional)
- `task`: Task ID (Optional)
- `repo`: Repository path (Optional)
- `noStatusUpdate`: Skip updating task status (Optional, Default: `false`)
- `debug`: Enable debug output (Optional, Default: `false`)
- `skipUpdate`: Skip session update before PR (Optional, Default: `false`)
- `autoResolveDeleteConflicts`: Automatically resolve delete conflicts (Optional, Default: `false`)
- `skipConflictCheck`: Skip conflict detection (Optional, Default: `false`)
