---
description: 
globs: 
alwaysApply: false
---
# Implementation Verification Protocol

## Core Rule

**NEVER claim "implemented", "working", or "complete" without concrete proof.**

Code that compiles ≠ Working feature. Silent execution ≠ Functional implementation.

## Required Verification

Before any completion claim, you MUST demonstrate:

```bash
# Prove it works
$ command --help          # Shows actual help output
$ command [valid usage]   # Shows actual results  
$ command [invalid usage] # Shows actual errors
$ ls -la [artifacts]     # Shows files actually created
```

## Status Language

❌ **PROHIBITED** (without proof):
- "Successfully implemented" 
- "Working correctly"
- "Feature complete"

✅ **ACCURATE** (without proof):
- "Code written, testing needed"
- "Structure in place, unverified"
- "NOT IMPLEMENTED" (when nothing works)

## Enforcement

**Violation**: False implementation claims

**Response**: Immediately acknowledge error, provide actual verification or admit "NOT IMPLEMENTED"

## Case Study

**Task 163 False Claim**: "Successfully implemented --title and --description"

**Reality**: 
```bash
$ tasks create --title "Test" --description "Test"
[no output, no files created, nothing works]
```

**Actual Status**: NOT IMPLEMENTED

**Lesson**: Compilation + commits ≠ implementation. Proof required.
