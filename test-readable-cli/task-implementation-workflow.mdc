---
name: Task Implementation Workflow
description: Comprehensive workflow for implementing tasks from creation to completion
tags:
  - task
  - implementation
  - workflow
  - status
---
# Task Implementation Workflow

This rule provides a comprehensive workflow for implementing tasks from start to completion, including all required status updates and checkpoints.

## Prerequisites

Before starting any task implementation, ensure:

1. **Task exists and is properly specified** - Use minsky tasks get <taskId> [--repo <value>] [--workspace <value>] [--session <value>] [--backend <value>] [--json] to verify
2. **Task status is appropriate** - Check with minsky tasks status.get <taskId> [--repo <value>] [--workspace <value>] [--session <value>] [--backend <value>] [--json]
3. **You understand the requirements** - Review task specification thoroughly

## Implementation Workflow

### Phase 1: Task Preparation

1. **Verify Task Status**
   - Check current status: minsky tasks status.get <taskId> [--repo <value>] [--workspace <value>] [--session <value>] [--backend <value>] [--json]
   - Ensure task is in appropriate state for implementation
   - If not in correct state, update: minsky tasks status.set <taskId> [--status <value>] [--repo <value>] [--workspace <value>] [--session <value>] [--backend <value>] [--json]

2. **Create or Resume Session**
   - Check existing sessions: minsky session list [--repo <value>] [--json]
   - Create new session: minsky session start [--name <value>] [--task <value>] [--description <value>] [--branch <value>] [--repo <value>] [--session <value>] [--json] [--quiet] [--noStatusUpdate] [--skipInstall] [--packageManager <value>]
   - Get session directory: minsky session dir [--name <value>] [--task <value>] [--repo <value>] [--json]

3. **Set Task Status to IN-PROGRESS**
   - Update status: minsky tasks status.set <taskId> [--status <value>] [--repo <value>] [--workspace <value>] [--session <value>] [--backend <value>] [--json] with status "IN-PROGRESS"
   - This signals that active work has begun

### Phase 2: Implementation

1. **Navigate to Session Workspace**
   - Use session directory from previous step
   - Verify you're in the correct workspace
   - All implementation must happen in session workspace

2. **Implement Requirements**
   - Follow task specification exactly
   - Write comprehensive tests for new functionality
   - Ensure all existing tests continue to pass
   - Document any design decisions or trade-offs

3. **Continuous Verification**
   - Run tests frequently during development
   - Check that requirements are being met
   - Address any issues immediately

### Phase 3: Completion Verification

1. **Final Testing**
   - Run complete test suite
   - Verify all new functionality works as specified
   - Ensure no regressions have been introduced

2. **Requirements Review**
   - Review original task specification
   - Confirm all requirements have been addressed
   - Check for any overlooked aspects

3. **Code Quality Check**
   - Review code for clarity and maintainability
   - Ensure proper error handling
   - Verify documentation is complete

### Phase 4: PR Preparation

1. **Update Task Status to IN-REVIEW**
   - Set status: minsky tasks status.set <taskId> [--status <value>] [--repo <value>] [--workspace <value>] [--session <value>] [--backend <value>] [--json] with status "IN-REVIEW"
   - This indicates implementation is complete and ready for review

2. **Create Pull Request**
   - Generate PR using session PR command: minsky session pr.create [--title <value>] [--body <value>] [--bodyPath <value>] [--name <value>] [--task <value>] [--repo <value>] [--noStatusUpdate] [--debug] [--skipUpdate] [--autoResolveDeleteConflicts] [--skipConflictCheck]
   - Ensure PR description follows guidelines
   - Include task ID in PR title and description

3. **Final Verification**
   - Review PR content thoroughly
   - Ensure all changes are included
   - Verify task status is correctly updated

## Status Transition Protocol

| Current Status | Action Required | Command | Next Status |
|----------------|-----------------|---------|-------------|
| TODO | Start implementation | minsky tasks status.set <taskId> [--status <value>] [--repo <value>] [--workspace <value>] [--session <value>] [--backend <value>] [--json] | IN-PROGRESS |
| IN-PROGRESS | Complete implementation | minsky tasks status.set <taskId> [--status <value>] [--repo <value>] [--workspace <value>] [--session <value>] [--backend <value>] [--json] | IN-REVIEW |
| IN-REVIEW | Merge PR | Approve PR | DONE |
| BLOCKED | Resolve blocking issue | minsky tasks status.set <taskId> [--status <value>] [--repo <value>] [--workspace <value>] [--session <value>] [--backend <value>] [--json] | IN-PROGRESS |

## Quality Gates

Before moving to the next phase, ensure:

### Before IN-PROGRESS → IN-REVIEW
- [ ] All requirements implemented
- [ ] All tests passing
- [ ] Code quality acceptable
- [ ] Documentation complete

### Before IN-REVIEW → DONE
- [ ] PR created and properly described
- [ ] All feedback addressed
- [ ] Changes approved by reviewer
- [ ] PR merged successfully

## Common Issues and Solutions

### Implementation Issues

**Problem**: Requirements unclear or ambiguous
**Solution**: Update task specification before continuing, don't guess at requirements

**Problem**: Tests failing after changes
**Solution**: Fix tests immediately, don't accumulate technical debt

**Problem**: Scope creep during implementation
**Solution**: Create separate tasks for additional work, stay focused on current task

### Status Management Issues

**Problem**: Forgot to update task status
**Solution**: Check status regularly with minsky tasks status.get <taskId> [--repo <value>] [--workspace <value>] [--session <value>] [--backend <value>] [--json], update as needed

**Problem**: Task status doesn't match actual progress
**Solution**: Align status with actual state immediately using minsky tasks status.set <taskId> [--status <value>] [--repo <value>] [--workspace <value>] [--session <value>] [--backend <value>] [--json]

### Session Management Issues

**Problem**: Working in wrong directory
**Solution**: Always verify you're in session workspace before making changes

**Problem**: Changes not appearing in session
**Solution**: Ensure you created session properly and are in correct directory

## Integration with Other Rules

This workflow integrates with:

- **task-status-protocol**: For detailed status management procedures
- **session-first-workflow**: For session creation and navigation requirements
- **pr-preparation-workflow**: For PR creation and submission details
- **minsky-workflow-orchestrator**: For overall workflow context
- **tests**: For testing requirements and procedures

## Verification Checklist

Use this checklist to ensure proper workflow adherence:

- [ ] Task status checked and appropriate for implementation
- [ ] Session created and verified
- [ ] Task status updated to IN-PROGRESS at start
- [ ] All implementation done in session workspace
- [ ] Requirements thoroughly implemented
- [ ] Tests written and passing
- [ ] Task status updated to IN-REVIEW when complete
- [ ] PR created with proper description
- [ ] Task linked to PR appropriately