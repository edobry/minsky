bun test v1.2.15 (df017990)

syntax-test.test.ts:
(pass) Session Approve > should approve

virtual-test-2-1753132670121.test.ts:

# Unhandled error between tests
-------------------------------
1 | 
2 |         const mockLog = {
3 |           info: vi.fn(),
                    ^
ReferenceError: vi is not defined
      at /Users/edobry/.local/state/minsky/sessions/task#276/virtual-test-2-1753132670121.test.ts:3:17
      at loadAndEvaluateModule (2:1)
-------------------------------


session-approve.test.ts:
(pass) Session Approve > should approve session

test.test.ts:

virtual-session-approve-1753132670130.test.ts:

# Unhandled error between tests
-------------------------------
1 | 
2 |         describe("Session Approve", () => {
3 | 
4 |               // Mock log functions used by session approve operations
5 |               const log = {
6 |                 cli: vi.fn(),
                         ^
ReferenceError: vi is not defined
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/virtual-session-approve-1753132670130.test.ts:6:22)
      at /Users/edobry/.local/state/minsky/sessions/task#276/virtual-session-approve-1753132670130.test.ts:2:9
      at loadAndEvaluateModule (2:1)
-------------------------------


virtual-syntax-test-1753132670137.test.ts:

# Unhandled error between tests
-------------------------------
1 | 
2 |         const mockLog = {
3 |           info: vi.fn(),
                    ^
ReferenceError: vi is not defined
      at /Users/edobry/.local/state/minsky/sessions/task#276/virtual-syntax-test-1753132670137.test.ts:3:17
      at loadAndEvaluateModule (2:1)
-------------------------------


test-verification/quoting.test.ts:
(pass) Rule description quoting fix > createRule should use double quotes for descriptions with special characters [1.56ms]
(pass) Rule description quoting fix > updateRule should use double quotes for descriptions with special characters [2.42ms]
(pass) Rule description quoting fix > createRule should not add quotes to simple descriptions [0.47ms]

codemods/session-approve-log-mock-fixer.test.ts:
(pass) Session Approve Log Mock Fixer > fixLogMockInFile > should skip non-test files for safety [8.42ms]
(pass) Session Approve Log Mock Fixer > fixLogMockInFile > should skip files that already have log.cli mock [1.42ms]
(pass) Session Approve Log Mock Fixer > fixLogMockInFile > should add cli method to existing log mock [8.13ms]
(pass) Session Approve Log Mock Fixer > fixLogMockInFile > should add complete log mock for session approve tests without existing mock [3.95ms]
(pass) Session Approve Log Mock Fixer > fixLogMockInFile > should not modify files that don't need log mocks [0.40ms]
(pass) Session Approve Log Mock Fixer > fixSessionApproveLogMocks > should process multiple files and return results [0.17ms]
‚ùå Error processing /nonexistent/file.test.ts: 331 | (function (errors) {
332 |     class BaseError extends Error {
333 |         constructor(message, node) {
334 |             const nodeLocation = node && getPrettyNodeLocation(node);
335 |             const messageWithLocation = nodeLocation ? `${message}\n\n${nodeLocation}` : message;
336 |             super(messageWithLocation);
                  ^
error: File not found: /nonexistent/file.test.ts
 path: "/nonexistent/file.test.ts",
 code: "ENOENT"

      at new BaseError (/Users/edobry/.local/state/minsky/sessions/task#276/node_modules/@ts-morph/common/dist/ts-morph-common.js:336:13)
      at new PathNotFoundError (/Users/edobry/.local/state/minsky/sessions/task#276/node_modules/@ts-morph/common/dist/ts-morph-common.js:368:13)
      at new FileNotFoundError (/Users/edobry/.local/state/minsky/sessions/task#276/node_modules/@ts-morph/common/dist/ts-morph-common.js:382:13)
      at addSourceFileAtPath (/Users/edobry/.local/state/minsky/sessions/task#276/node_modules/ts-morph/dist/ts-morph.js:19291:19)
      at fixSessionApproveLogMocks (/Users/edobry/.local/state/minsky/sessions/task#276/codemods/session-approve-log-mock-fixer.ts:214:34)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/codemods/session-approve-log-mock-fixer.test.ts:105:23)

(pass) Session Approve Log Mock Fixer > fixSessionApproveLogMocks > should handle file processing errors gracefully [2.19ms]
(pass) Session Approve Log Mock Fixer > boundary validation tests > should never modify production code files [0.41ms]
(pass) Session Approve Log Mock Fixer > boundary validation tests > should preserve existing complete log mocks without changes [0.42ms]
(pass) Session Approve Log Mock Fixer > boundary validation tests > should maintain valid TypeScript syntax after modifications [2.07ms]

codemods/fix-import-extensions.test.ts:
üöÄ Starting import extension fixer...
üìÅ Found 1 files to process
üíæ Saving changes...
‚úÖ Saved 1 files

üìä Import Extension Fixer Report
================================
Files processed: 1
Files modified: 1
Import statements fixed: 3
Export statements fixed: 0
Total transformations: 3
Processing time: 11ms
Success rate: 100.0%

üîß Files with changes:
  /private/var/folders/qg/bbhkjbqd5mx5ff1qhw0sctfc0000gn/T/import-fixer-test-1753133476964-a0d0qdymc/src/test.ts: 3 imports

‚úÖ Import extension fixing completed!
(pass) ImportExtensionFixer > Unit Tests - Individual Transformations > should remove .js extension from local imports [13.57ms]
üöÄ Starting import extension fixer...
üìÅ Found 1 files to process
üíæ Saving changes...
‚úÖ Saved 1 files

üìä Import Extension Fixer Report
================================
Files processed: 1
Files modified: 1
Import statements fixed: 2
Export statements fixed: 0
Total transformations: 2
Processing time: 2ms
Success rate: 100.0%

üîß Files with changes:
  /private/var/folders/qg/bbhkjbqd5mx5ff1qhw0sctfc0000gn/T/import-fixer-test-1753133476982-vthw8vw2o/src/test.ts: 2 imports

‚úÖ Import extension fixing completed!
(pass) ImportExtensionFixer > Unit Tests - Individual Transformations > should remove .ts extension from local imports [3.07ms]
üöÄ Starting import extension fixer...
üìÅ Found 1 files to process
üíæ Saving changes...
‚úÖ Saved 1 files

üìä Import Extension Fixer Report
================================
Files processed: 1
Files modified: 1
Import statements fixed: 0
Export statements fixed: 3
Total transformations: 3
Processing time: 2ms
Success rate: 100.0%

üîß Files with changes:
  /private/var/folders/qg/bbhkjbqd5mx5ff1qhw0sctfc0000gn/T/import-fixer-test-1753133476987-9thd8xg98/src/test.ts: 3 exports

‚úÖ Import extension fixing completed!
(pass) ImportExtensionFixer > Unit Tests - Individual Transformations > should remove extensions from export statements [2.72ms]
üöÄ Starting import extension fixer...
üìÅ Found 1 files to process
üíæ Saving changes...
‚úÖ Saved 1 files

üìä Import Extension Fixer Report
================================
Files processed: 1
Files modified: 0
Import statements fixed: 0
Export statements fixed: 0
Total transformations: 0
Processing time: 1ms
Success rate: 100.0%

‚úÖ Import extension fixing completed!
(pass) ImportExtensionFixer > Unit Tests - Individual Transformations > should preserve external npm package imports [1.83ms]
üöÄ Starting import extension fixer...
üìÅ Found 1 files to process
üíæ Saving changes...
‚úÖ Saved 1 files

üìä Import Extension Fixer Report
================================
Files processed: 1
Files modified: 0
Import statements fixed: 0
Export statements fixed: 0
Total transformations: 0
Processing time: 1ms
Success rate: 100.0%

‚úÖ Import extension fixing completed!
(pass) ImportExtensionFixer > Unit Tests - Individual Transformations > should preserve non-.js/.ts extensions [1.73ms]
üöÄ Starting import extension fixer...
üìÅ Found 1 files to process
üíæ Saving changes...
‚úÖ Saved 1 files

üìä Import Extension Fixer Report
================================
Files processed: 1
Files modified: 1
Import statements fixed: 2
Export statements fixed: 0
Total transformations: 2
Processing time: 4ms
Success rate: 100.0%

üîß Files with changes:
  /private/var/folders/qg/bbhkjbqd5mx5ff1qhw0sctfc0000gn/T/import-fixer-test-1753133476997-m6u4biwa4/src/test.ts: 2 imports

‚úÖ Import extension fixing completed!
(pass) ImportExtensionFixer > Unit Tests - Individual Transformations > should handle mixed import types correctly [4.15ms]
üöÄ Starting import extension fixer...
üìÅ Found 3 files to process
üíæ Saving changes...
‚úÖ Saved 3 files

üìä Import Extension Fixer Report
================================
Files processed: 3
Files modified: 3
Import statements fixed: 2
Export statements fixed: 1
Total transformations: 3
Processing time: 10ms
Success rate: 100.0%

üîß Files with changes:
  /private/var/folders/qg/bbhkjbqd5mx5ff1qhw0sctfc0000gn/T/import-fixer-test-1753133477004-alh2fkfy6/src/app.ts: 1 imports
  /private/var/folders/qg/bbhkjbqd5mx5ff1qhw0sctfc0000gn/T/import-fixer-test-1753133477004-alh2fkfy6/src/components/Button.ts: 1 exports
  /private/var/folders/qg/bbhkjbqd5mx5ff1qhw0sctfc0000gn/T/import-fixer-test-1753133477004-alh2fkfy6/src/utils/index.ts: 1 imports

‚úÖ Import extension fixing completed!
(pass) ImportExtensionFixer > Integration Tests - Full Codemod Execution > should process multiple files correctly [9.93ms]
üöÄ Starting import extension fixer...
üìÅ Found 1 files to process
üíæ Saving changes...
‚úÖ Saved 1 files

üìä Import Extension Fixer Report
================================
Files processed: 1
Files modified: 1
Import statements fixed: 2
Export statements fixed: 1
Total transformations: 3
Processing time: 2ms
Success rate: 100.0%

üîß Files with changes:
  /private/var/folders/qg/bbhkjbqd5mx5ff1qhw0sctfc0000gn/T/import-fixer-test-1753133477015-v8u7d3p0p/src/test.ts: 2 imports, 1 exports

‚úÖ Import extension fixing completed!
(pass) ImportExtensionFixer > Integration Tests - Full Codemod Execution > should generate accurate metrics [2.20ms]
üöÄ Starting import extension fixer...
üìÅ Found 1 files to process
üíæ Saving changes...
‚úÖ Saved 1 files

üìä Import Extension Fixer Report
================================
Files processed: 1
Files modified: 1
Import statements fixed: 1
Export statements fixed: 1
Total transformations: 2
Processing time: 4ms
Success rate: 100.0%

üîß Files with changes:
  /private/var/folders/qg/bbhkjbqd5mx5ff1qhw0sctfc0000gn/T/import-fixer-test-1753133477019-hex23zw6v/src/test.ts: 1 imports, 1 exports

‚úÖ Import extension fixing completed!
(pass) ImportExtensionFixer > Integration Tests - Full Codemod Execution > should provide detailed results per file [3.41ms]
üöÄ Starting import extension fixer...
üìÅ Found 1 files to process
üíæ Saving changes...
‚úÖ Saved 1 files

üìä Import Extension Fixer Report
================================
Files processed: 1
Files modified: 0
Import statements fixed: 0
Export statements fixed: 0
Total transformations: 0
Processing time: 1ms
Success rate: 100.0%

‚úÖ Import extension fixing completed!
(pass) ImportExtensionFixer > Integration Tests - Full Codemod Execution > should handle files with no changes [1.60ms]
üöÄ Starting import extension fixer...
üìÅ Found 1 files to process
üíæ Saving changes...
‚úÖ Saved 1 files

üìä Import Extension Fixer Report
================================
Files processed: 1
Files modified: 0
Import statements fixed: 0
Export statements fixed: 0
Total transformations: 0
Processing time: 1ms
Success rate: 100.0%

‚úÖ Import extension fixing completed!
(pass) ImportExtensionFixer > Edge Cases and Error Handling > should handle empty files [0.96ms]
üöÄ Starting import extension fixer...
üìÅ Found 1 files to process
üíæ Saving changes...
‚úÖ Saved 1 files

üìä Import Extension Fixer Report
================================
Files processed: 1
Files modified: 0
Import statements fixed: 0
Export statements fixed: 0
Total transformations: 0
Processing time: 2ms
Success rate: 100.0%

‚úÖ Import extension fixing completed!
(pass) ImportExtensionFixer > Edge Cases and Error Handling > should handle files with only comments [1.86ms]
üöÄ Starting import extension fixer...
üìÅ Found 1 files to process
üíæ Saving changes...
‚úÖ Saved 1 files

üìä Import Extension Fixer Report
================================
Files processed: 1
Files modified: 0
Import statements fixed: 0
Export statements fixed: 0
Total transformations: 0
Processing time: 1ms
Success rate: 100.0%

‚úÖ Import extension fixing completed!
(pass) ImportExtensionFixer > Edge Cases and Error Handling > should handle imports without extensions [1.67ms]
üöÄ Starting import extension fixer...
üìÅ Found 1 files to process
üíæ Saving changes...
‚úÖ Saved 1 files

üìä Import Extension Fixer Report
================================
Files processed: 1
Files modified: 1
Import statements fixed: 3
Export statements fixed: 3
Total transformations: 6
Processing time: 2ms
Success rate: 100.0%

üîß Files with changes:
  /private/var/folders/qg/bbhkjbqd5mx5ff1qhw0sctfc0000gn/T/import-fixer-test-1753133477036-aeq1vadby/src/complex.ts: 3 imports, 3 exports

‚úÖ Import extension fixing completed!
(pass) ImportExtensionFixer > Edge Cases and Error Handling > should handle complex import/export patterns [2.44ms]
üöÄ Starting import extension fixer...
üìÅ Found 1 files to process
üíæ Saving changes...
‚úÖ Saved 1 files

üìä Import Extension Fixer Report
================================
Files processed: 1
Files modified: 0
Import statements fixed: 0
Export statements fixed: 0
Total transformations: 0
Processing time: 3ms
Success rate: 100.0%

‚úÖ Import extension fixing completed!
(pass) ImportExtensionFixer > Edge Cases and Error Handling > should handle exports without module specifiers [3.87ms]
üöÄ Starting import extension fixer...
üìÅ Found 0 files to process
üíæ Saving changes...
‚úÖ Saved 0 files

üìä Import Extension Fixer Report
================================
Files processed: 0
Files modified: 0
Import statements fixed: 0
Export statements fixed: 0
Total transformations: 0
Processing time: 1ms
Success rate: 100.0%

‚úÖ Import extension fixing completed!
(pass) ImportExtensionFixer > Edge Cases and Error Handling > should exclude test files from processing [1.09ms]
üöÄ Starting import extension fixer...
üìÅ Found 0 files to process
üíæ Saving changes...
‚úÖ Saved 0 files

üìä Import Extension Fixer Report
================================
Files processed: 0
Files modified: 0
Import statements fixed: 0
Export statements fixed: 0
Total transformations: 0
Processing time: 1ms
Success rate: 100.0%

‚úÖ Import extension fixing completed!
(pass) ImportExtensionFixer > Edge Cases and Error Handling > should exclude spec files from processing [0.90ms]
üöÄ Starting import extension fixer...
üìÅ Found 10 files to process
üíæ Saving changes...
‚úÖ Saved 10 files

üìä Import Extension Fixer Report
================================
Files processed: 10
Files modified: 10
Import statements fixed: 10
Export statements fixed: 10
Total transformations: 20
Processing time: 6ms
Success rate: 100.0%

üîß Files with changes:
  /private/var/folders/qg/bbhkjbqd5mx5ff1qhw0sctfc0000gn/T/import-fixer-test-1753133477050-7s6dwu2h2/src/file0.ts: 1 imports, 1 exports
  /private/var/folders/qg/bbhkjbqd5mx5ff1qhw0sctfc0000gn/T/import-fixer-test-1753133477050-7s6dwu2h2/src/file1.ts: 1 imports, 1 exports
  /private/var/folders/qg/bbhkjbqd5mx5ff1qhw0sctfc0000gn/T/import-fixer-test-1753133477050-7s6dwu2h2/src/file2.ts: 1 imports, 1 exports
  /private/var/folders/qg/bbhkjbqd5mx5ff1qhw0sctfc0000gn/T/import-fixer-test-1753133477050-7s6dwu2h2/src/file3.ts: 1 imports, 1 exports
  /private/var/folders/qg/bbhkjbqd5mx5ff1qhw0sctfc0000gn/T/import-fixer-test-1753133477050-7s6dwu2h2/src/file4.ts: 1 imports, 1 exports
  /private/var/folders/qg/bbhkjbqd5mx5ff1qhw0sctfc0000gn/T/import-fixer-test-1753133477050-7s6dwu2h2/src/file5.ts: 1 imports, 1 exports
  /private/var/folders/qg/bbhkjbqd5mx5ff1qhw0sctfc0000gn/T/import-fixer-test-1753133477050-7s6dwu2h2/src/file6.ts: 1 imports, 1 exports
  /private/var/folders/qg/bbhkjbqd5mx5ff1qhw0sctfc0000gn/T/import-fixer-test-1753133477050-7s6dwu2h2/src/file7.ts: 1 imports, 1 exports
  /private/var/folders/qg/bbhkjbqd5mx5ff1qhw0sctfc0000gn/T/import-fixer-test-1753133477050-7s6dwu2h2/src/file8.ts: 1 imports, 1 exports
  /private/var/folders/qg/bbhkjbqd5mx5ff1qhw0sctfc0000gn/T/import-fixer-test-1753133477050-7s6dwu2h2/src/file9.ts: 1 imports, 1 exports

‚úÖ Import extension fixing completed!
(pass) ImportExtensionFixer > Performance Benchmarks > should process files efficiently [7.08ms]
üöÄ Starting import extension fixer...
üìÅ Found 1 files to process
üíæ Saving changes...
‚úÖ Saved 1 files

üìä Import Extension Fixer Report
================================
Files processed: 1
Files modified: 1
Import statements fixed: 2
Export statements fixed: 0
Total transformations: 2
Processing time: 3ms
Success rate: 100.0%

üîß Files with changes:
  /private/var/folders/qg/bbhkjbqd5mx5ff1qhw0sctfc0000gn/T/import-fixer-test-1753133477059-g1jc68g3u/src/test.ts: 2 imports

‚úÖ Import extension fixing completed!
(pass) ImportExtensionFixer > Performance Benchmarks > should maintain high success rate [3.67ms]
üöÄ Starting import extension fixer...
üìÅ Found 1 files to process
üíæ Saving changes...
‚úÖ Saved 1 files

üìä Import Extension Fixer Report
================================
Files processed: 1
Files modified: 1
Import statements fixed: 3
Export statements fixed: 0
Total transformations: 3
Processing time: 2ms
Success rate: 100.0%

üîß Files with changes:
  /private/var/folders/qg/bbhkjbqd5mx5ff1qhw0sctfc0000gn/T/import-fixer-test-1753133477064-4sciu6bur/src/typescript.ts: 3 imports

‚úÖ Import extension fixing completed!
(pass) ImportExtensionFixer > TypeScript Support > should handle TypeScript-specific imports [2.91ms]
üöÄ Starting import extension fixer...
üìÅ Found 1 files to process
üíæ Saving changes...
‚úÖ Saved 1 files

üìä Import Extension Fixer Report
================================
Files processed: 1
Files modified: 1
Import statements fixed: 2
Export statements fixed: 0
Total transformations: 2
Processing time: 2ms
Success rate: 100.0%

üîß Files with changes:
  /private/var/folders/qg/bbhkjbqd5mx5ff1qhw0sctfc0000gn/T/import-fixer-test-1753133477069-lnw4risxb/src/component.tsx: 2 imports

‚úÖ Import extension fixing completed!
(pass) ImportExtensionFixer > TypeScript Support > should handle JSX/TSX files [1.61ms]
üöÄ Starting import extension fixer...
üìÅ Found 1 files to process
üíæ Saving changes...
‚úÖ Saved 1 files

üìä Import Extension Fixer Report
================================
Files processed: 1
Files modified: 1
Import statements fixed: 2
Export statements fixed: 0
Total transformations: 2
Processing time: 1ms
Success rate: 100.0%

üîß Files with changes:
  /private/var/folders/qg/bbhkjbqd5mx5ff1qhw0sctfc0000gn/T/import-fixer-test-1753133477072-13e8037ua/src/bun-example.ts: 2 imports

‚úÖ Import extension fixing completed!
(pass) ImportExtensionFixer > Real-world Scenarios > should handle Bun-style imports correctly [1.45ms]
üöÄ Starting import extension fixer...
üìÅ Found 1 files to process
üíæ Saving changes...
‚úÖ Saved 1 files

üìä Import Extension Fixer Report
================================
Files processed: 1
Files modified: 1
Import statements fixed: 3
Export statements fixed: 0
Total transformations: 3
Processing time: 1ms
Success rate: 100.0%

üîß Files with changes:
  /private/var/folders/qg/bbhkjbqd5mx5ff1qhw0sctfc0000gn/T/import-fixer-test-1753133477075-kaosf348d/src/nested/deep/component.ts: 3 imports

‚úÖ Import extension fixing completed!
(pass) ImportExtensionFixer > Real-world Scenarios > should handle nested directory imports [1.73ms]

codemods/bun-test-mocking-consistency-fixer.test.ts:

# Unhandled error between tests
-------------------------------
1 | (function (entry, fetcher)
              ^
SyntaxError: Export named 'fixBunTestMockingInFiles' not found in module '/Users/edobry/.local/state/minsky/sessions/task#276/codemods/bun-test-mocking-consistency-fixer.ts'.
      at loadAndEvaluateModule (1:11)
-------------------------------


codemods/fix-indentation.test.ts:
(pass) ESLint auto-fix codemod runs ONLY the correct ESLint command [0.37ms]
(pass) ESLint auto-fix uses only safe ESLint flags [0.02ms]
(pass) ESLint auto-fix handles error cases properly [0.02ms]
(pass) ESLint auto-fix uses project configuration
(pass) ESLint auto-fix does NOT modify files directly [0.02ms]
(pass) ESLint auto-fix provides appropriate logging [0.02ms]
(pass) ESLint auto-fix has proper imports and dependencies [0.09ms]

codemods/comprehensive-as-unknown-fixer.test.ts:
(pass) ComprehensiveAsUnknownFixer > Session Object Property Access Patterns > should remove sessionProvider cast with non-null assertion [4.12ms]
(pass) ComprehensiveAsUnknownFixer > Session Object Property Access Patterns > should remove sessionRecord cast with non-null assertion [1.37ms]
(pass) ComprehensiveAsUnknownFixer > Session Object Property Access Patterns > should remove sessionInfo cast with non-null assertion [1.08ms]
(pass) ComprehensiveAsUnknownFixer > Dynamic Import Patterns > should fix relative import patterns [0.41ms]
(pass) ComprehensiveAsUnknownFixer > Dynamic Import Patterns > should NOT fix absolute import patterns (keep them safe) [0.01ms]
(pass) ComprehensiveAsUnknownFixer > Config Object Patterns > should remove config object casts [0.77ms]
(pass) ComprehensiveAsUnknownFixer > Config Object Patterns > should remove options object casts [0.66ms]
(pass) ComprehensiveAsUnknownFixer > Error Handling Patterns > should remove error object casts [0.92ms]
(pass) ComprehensiveAsUnknownFixer > Provider/Service Patterns > should remove provider/service/backend casts [1.06ms]
(pass) ComprehensiveAsUnknownFixer > Redundant Cast Patterns > should remove redundant double casts [0.24ms]
(pass) ComprehensiveAsUnknownFixer > Promise Return Patterns > should remove unnecessary Promise casts [1.24ms]
(pass) ComprehensiveAsUnknownFixer > Simple Variable Patterns > should remove simple variable casts [1.14ms]
(pass) ComprehensiveAsUnknownFixer > Edge Cases and Safety > should NOT transform complex expressions [0.73ms]
(pass) ComprehensiveAsUnknownFixer > Edge Cases and Safety > should handle mixed patterns in single file [1.36ms]
(pass) ComprehensiveAsUnknownFixer > Real Codebase Scenarios > should handle actual workspace.ts patterns [1.55ms]
(pass) ComprehensiveAsUnknownFixer > Real Codebase Scenarios > should handle actual repository.ts dynamic import patterns [0.90ms]

tests/verification-protocol.test.ts:
(pass) Verification Protocol > should prevent claiming resources don't exist without verification [0.02ms]
(pass) Verification Protocol > should document the self-improvement rule verification failure [2.01ms]
(pass) Verification Protocol > should enforce verification checklist for all negative existence claims [0.09ms]

src/types/project.test.ts:
(pass) ProjectContext > validateRepositoryPath > returns false for clearly invalid paths [0.01ms]
(pass) ProjectContext > validateRepositoryPath > returns true for current working directory [0.02ms]
(pass) ProjectContext > createProjectContext > creates a ProjectContext for current working directory [0.05ms]
{"level":"error","message":"Invalid repository path: /definitely/does/not/exist/path/12345","timestamp":"2025-07-21T21:31:17.112Z"}
(pass) ProjectContext > createProjectContext > throws an error for clearly invalid path [0.33ms]
(pass) ProjectContext > createProjectContextFromCwd > creates a ProjectContext from current working directory [0.02ms]

src/utils/package-manager.test.ts:
(pass) Package Manager Utilities > detectPackageManager > detects bun from bun.lock
(pass) Package Manager Utilities > detectPackageManager > detects yarn from yarn.lock [0.03ms]
(pass) Package Manager Utilities > detectPackageManager > detects pnpm from pnpm-lock.yaml [0.03ms]
(pass) Package Manager Utilities > detectPackageManager > detects npm from package-lock.json [0.01ms]
(pass) Package Manager Utilities > detectPackageManager > defaults to npm if only package.json exists [0.01ms]
(pass) Package Manager Utilities > detectPackageManager > returns undefined if no package files exist [0.02ms]
(pass) Package Manager Utilities > getInstallCommand > returns correct command for bun [0.01ms]
(pass) Package Manager Utilities > getInstallCommand > returns correct command for npm
(pass) Package Manager Utilities > getInstallCommand > returns correct command for yarn
(pass) Package Manager Utilities > getInstallCommand > returns correct command for pnpm
(pass) Package Manager Utilities > getInstallCommand > returns undefined for unknown package manager
(pass) Package Manager Utilities > installDependencies > successfully installs dependencies [0.35ms]
(pass) Package Manager Utilities > installDependencies > uses provided package manager if specified [0.09ms]
(pass) Package Manager Utilities > installDependencies > handles no package manager detected [0.03ms]
(pass) Package Manager Utilities > installDependencies > handles unsupported package manager [0.03ms]
{"level":"error","message":"Failed to install dependencies: Installation failed","timestamp":"2025-07-21T21:31:17.115Z"}
(pass) Package Manager Utilities > installDependencies > handles installation errors [0.21ms]
(pass) Package Manager Utilities > installDependencies > respects quiet option for stdio [0.04ms]

src/utils/param-schemas.test.ts:
(pass) Parameter Schemas > Schema Helpers > optionalString should create an optional string schema with description
(pass) Parameter Schemas > Schema Helpers > requiredString should create a required string schema with description [0.04ms]
(pass) Parameter Schemas > Schema Helpers > optionalBoolean should create an optional boolean schema with description [0.07ms]
(pass) Parameter Schemas > Common Parameters > all common parameter schemas should have descriptions [0.08ms]

src/utils/filter-messages.test.ts:
(pass) Filter Messages Utility > getStatusFilterMessage > returns correct message for a given status [0.51ms]
(pass) Filter Messages Utility > getStatusFilterMessage > includes the status in single quotes [0.02ms]
(pass) Filter Messages Utility > getActiveTasksMessage > returns message about active tasks [0.01ms]
(pass) Filter Messages Utility > getActiveTasksMessage > includes instruction about --all flag
(pass) Filter Messages Utility > generateFilterMessages > returns status filter message when status is provided [0.04ms]
(pass) Filter Messages Utility > generateFilterMessages > returns active tasks message when not showing all tasks
(pass) Filter Messages Utility > generateFilterMessages > returns no messages when all is true
(pass) Filter Messages Utility > generateFilterMessages > prioritizes status filter over active tasks message
(pass) Filter Messages Utility > generateFilterMessages > returns empty array when no filter options provided

src/utils/option-descriptions.test.ts:
(pass) Option Descriptions > all exported descriptions should be non-empty strings [0.39ms]
(pass) Option Descriptions > all descriptions should follow consistent naming pattern (UPPERCASE_WITH_DESCRIPTION suffix)
(pass) Option Descriptions > all descriptions should end with proper punctuation [0.01ms]
(pass) Option Descriptions > repository resolution descriptions should be consistent [0.01ms]
(pass) Option Descriptions > output format descriptions should be consistent [0.01ms]
(pass) Option Descriptions > task descriptions should be consistent
(pass) Option Descriptions > backend descriptions should be consistent
(pass) Option Descriptions > force option descriptions should be consistent
(pass) Option Descriptions > git option descriptions should be consistent
(pass) Option Descriptions > rules option descriptions should be consistent

src/utils/logger.test.ts:
(pass) Logger > getLogMode > should return HUMAN when configuration mode is set to HUMAN [0.07ms]
(pass) Logger > getLogMode > should return STRUCTURED when configuration mode is set to STRUCTURED [0.02ms]
(pass) Logger > getLogMode > should default to HUMAN when mode is auto and TTY is available [0.02ms]
(pass) Logger > getLogMode > should default to STRUCTURED when mode is auto and TTY is not available
(pass) Logger > createConfigurableLogger > should create logger with configuration [0.48ms]
(pass) Logger > createConfigurableLogger > should create logger with STRUCTURED mode [0.27ms]
(pass) Logger > createConfigurableLogger > should expose logger methods [0.14ms]
(pass) Logger > createConfigurableLogger > should support dependency injection for testing [0.07ms]
(pass) Logger > createConfigurableLogger > should handle different log levels [0.28ms]
(pass) Logger > createConfigurableLogger > should isolate logger instances [0.21ms]
(pass) Logger > configuration integration > should maintain backward compatibility [0.09ms]
(pass) Logger > configuration integration > should support enableAgentLogs configuration [0.09ms]

src/mcp/command-mapper.test.ts:
(pass) CommandMapper > Schema Conversion > should convert simple object schema to flat JSON schema without $ref [1.43ms]
(pass) CommandMapper > Schema Conversion > should handle empty object schema [0.04ms]
(pass) CommandMapper > Schema Conversion > should handle complex nested schemas [0.47ms]
(pass) CommandMapper > Schema Conversion > should handle schema with validation rules [0.22ms]
(pass) CommandMapper > Schema Conversion > should ensure schema is MCP-compatible [0.04ms]
(pass) CommandMapper > Schema Conversion > should produce schema that passes MCP server validation
(pass) CommandMapper > should initialize with server and project context
(pass) CommandMapper > should add tool to server when addCommand is called [0.10ms]

src/mcp/server.test.ts:
(pass) MCP Server > should import official MCP SDK module successfully [25.76ms]
(pass) MCP Server > should import stdio transport successfully [1.90ms]
(pass) MCP Server > should be able to import our server modules [10.60ms]
(pass) MCP Server > should create MinskyMCPServer instance [0.39ms]

src/errors/network-errors.test.ts:
(pass) Network Error handling > NetworkError class > should create a NetworkError with the correct properties [0.42ms]
(pass) Network Error handling > PortInUseError class > should create a PortInUseError with the correct message [0.04ms]
(pass) Network Error handling > PortInUseError class > should provide helpful suggestions [0.04ms]
(pass) Network Error handling > NetworkPermissionError class > should create a NetworkPermissionError with the correct message [0.01ms]
(pass) Network Error handling > NetworkPermissionError class > should provide helpful suggestions [0.02ms]
(pass) Network Error handling > isNetworkError function > should identify common network errors [0.04ms]
(pass) Network Error handling > createNetworkError function > should create a PortInUseError for EADDRINUSE errors [0.04ms]
(pass) Network Error handling > createNetworkError function > should create a NetworkPermissionError for EACCES errors [0.02ms]
(pass) Network Error handling > createNetworkError function > should create a generic NetworkError for other errors
(pass) Network Error handling > formatNetworkErrorMessage function > should format a PortInUseError with suggestions [0.04ms]
(pass) Network Error handling > formatNetworkErrorMessage function > should not include the debug hint when debug is true [0.02ms]

src/errors/enhanced-error-templates.test.ts:
(pass) Task 223 Enhanced Error Messages > createSessionPrBranchErrorMessage > should create helpful error message for PR branch restriction [0.12ms]
(pass) Task 223 Enhanced Error Messages > createSessionPrBranchErrorMessage > should handle undefined session name gracefully [0.02ms]
(pass) Task 223 Enhanced Error Messages > createSessionPrBranchErrorMessage > should include context information when provided [0.02ms]
(pass) Task 223 Enhanced Error Messages > createTaskIdParsingErrorMessage > should show supported task ID formats [0.06ms]
(pass) Task 223 Enhanced Error Messages > createTaskIdParsingErrorMessage > should include operation context [0.02ms]
(pass) Task 223 Enhanced Error Messages > createVariableNamingErrorMessage > should identify underscore prefix mismatch (declaration has underscore, usage doesn't) [0.04ms]
(pass) Task 223 Enhanced Error Messages > createVariableNamingErrorMessage > should identify reverse underscore mismatch (declaration without underscore, usage has underscore) [0.02ms]
(pass) Task 223 Enhanced Error Messages > createVariableNamingErrorMessage > should include file path and line numbers when provided [0.02ms]
(pass) Task 223 Enhanced Error Messages > createGitTimeoutErrorMessage > should provide troubleshooting steps for git timeouts [0.03ms]
(pass) Task 223 Enhanced Error Messages > createGitTimeoutErrorMessage > should include timeout duration in context [0.02ms]
(pass) Task 223 Enhanced Error Messages > createMergeConflictErrorMessage > should identify conflicting files with conflict types [0.10ms]
(pass) Task 223 Enhanced Error Messages > createMergeConflictErrorMessage > should provide resolution strategies [0.02ms]
(pass) Task 223 Enhanced Error Messages > createBackendDetectionErrorMessage > should show available backends and their requirements [0.08ms]
(pass) Task 223 Enhanced Error Messages > createBackendDetectionErrorMessage > should provide default backend list when no backends provided [0.02ms]
(pass) Task 223 Enhanced Error Messages > createBackendDetectionErrorMessage > should include workspace path in context [0.02ms]
(pass) Task 223 Enhanced Error Messages > Error Message Quality > should use consistent emoji patterns across all error types [0.04ms]
(pass) Task 223 Enhanced Error Messages > Error Message Quality > should provide actionable command suggestions [0.04ms]
(pass) Task 223 Enhanced Error Messages > Error Message Quality > should include context information when provided [0.02ms]

src/errors/message-templates.test.ts:
(pass) Error Message Templates > getErrorMessage > extracts message from Error object [0.56ms]
(pass) Error Message Templates > getErrorMessage > converts non-Error to string
(pass) Error Message Templates > formatCommandSuggestions > formats single suggestion [0.03ms]
(pass) Error Message Templates > formatCommandSuggestions > formats multiple suggestions
(pass) Error Message Templates > formatContextInfo > returns empty string for no context
(pass) Error Message Templates > formatContextInfo > formats single context info
(pass) Error Message Templates > formatContextInfo > formats multiple context info [0.01ms]
(pass) Error Message Templates > buildErrorMessage > builds basic error message
(pass) Error Message Templates > buildErrorMessage > builds error message with description [0.01ms]
(pass) Error Message Templates > buildErrorMessage > builds error message with sections and emojis
(pass) Error Message Templates > buildErrorMessage > includes context information
(pass) Error Message Templates > createResourceNotFoundMessage > creates session not found message [0.03ms]
(pass) Error Message Templates > createMissingInfoMessage > creates missing information message [0.02ms]
(pass) Error Message Templates > createValidationErrorMessage > creates validation error message [0.04ms]
(pass) Error Message Templates > createCommandFailureMessage > creates command failure message [0.03ms]
(pass) Error Message Templates > createSessionErrorMessage > creates not found session error [0.04ms]
(pass) Error Message Templates > createSessionErrorMessage > creates session exists error [0.01ms]
(pass) Error Message Templates > createSessionErrorMessage > creates invalid session error [0.01ms]
(pass) Error Message Templates > createGitErrorMessage > creates git conflict error [0.07ms]
(pass) Error Message Templates > createGitErrorMessage > creates general git error [0.03ms]
(pass) Error Message Templates > createConfigErrorMessage > creates configuration error message [0.03ms]
(pass) Error Message Templates > ErrorContextBuilder > builds empty context [0.03ms]
(pass) Error Message Templates > ErrorContextBuilder > adds current directory [0.02ms]
(pass) Error Message Templates > ErrorContextBuilder > adds session information [0.02ms]
(pass) Error Message Templates > ErrorContextBuilder > adds repository information [0.02ms]
(pass) Error Message Templates > ErrorContextBuilder > adds task information [0.02ms]
(pass) Error Message Templates > ErrorContextBuilder > adds command information [0.01ms]
(pass) Error Message Templates > ErrorContextBuilder > adds custom information
(pass) Error Message Templates > ErrorContextBuilder > chains multiple context additions
(pass) Error Message Templates > Error message consistency > all templates use consistent emoji patterns [0.04ms]
(pass) Error Message Templates > Error message consistency > all templates have consistent structure [0.03ms]

src/domain/session-lookup-bug-integration.test.ts:
{"error":"The \"path\" property must be of type string, got undefined","level":"error","message":"Error during git clone","repoUrl":"https://github.com/nonexistent/invalid-repo-12345.git","stack":"TypeError: The \"path\" property must be of type string, got undefined\n    at dirname (unknown)\n    at cloneImpl (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/git/clone-operations.ts:61:22)\n    at cloneImpl (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/git/clone-operations.ts:39:33)\n    at processTicksAndRejections (native:7:39)","timestamp":"2025-07-21T21:31:17.278Z"}
(pass) Session Lookup Bug Integration Test > should NOT create session directories when git clone fails [0.71ms]
(pass) Session Lookup Bug Integration Test > should create session directories when git clone succeeds [0.01ms]

src/domain/rules.test.ts:
(pass) RuleService > listRules > lists rules from both formats when no format specified [1.48ms]
(pass) RuleService > listRules > filters rules by format [0.86ms]
(pass) RuleService > listRules > filters rules by tag [0.91ms]
(pass) RuleService > getRule > gets a rule by ID [0.50ms]
(pass) RuleService > getRule > throws error for non-existent rule [0.28ms]
(pass) RuleService > getRule > finds rule in specified format [0.67ms]
(pass) RuleService > createRule > creates a new rule with metadata [0.34ms]
(pass) RuleService > createRule > handles undefined metadata fields correctly [0.36ms]
(pass) RuleService > createRule > throws error if rule exists and overwrite is false [0.28ms]
(pass) RuleService > createRule > overwrites existing rule when overwrite is true [0.38ms]
(pass) RuleService > updateRule > updates metadata only [0.70ms]
(pass) RuleService > updateRule > updates content only [0.63ms]
(pass) RuleService > updateRule > updates both metadata and content [0.51ms]
(pass) RuleService > searchRules > searches for rules by content [0.64ms]
(pass) RuleService > searchRules > searches for rules by metadata [1.30ms]
(pass) RuleService > searchRules > filters search results by format and tag [1.30ms]

src/domain/git-pr-workflow.test.ts:
üîÑ Starting session approval...
üîÑ Switching to base branch...
üì° Fetching latest changes...
üîÄ Merging PR branch pr/test-session...
(pass) Session Approve Workflow > successfully approves and merges a PR branch with task ID [4.29ms]
üîÑ Starting session approval...
(pass) Session Approve Workflow > throws ValidationError when session parameter is missing [0.15ms]
üîÑ Starting session approval...
üîÑ Switching to base branch...
(pass) Session Approve Workflow > handles git command failures gracefully [0.16ms]

src/domain/session-lookup-bug-reproduction.test.ts:
BUG CONFIRMED: Orphaned session directory exists at /Users/edobry/.local/state/minsky/sessions/task#276/test-tmp/session-lookup-bug-test/local-minsky/sessions/test-orphan-session
(pass) Session Lookup Bug Reproduction (Task #168) > Scenario 1: Git clone creates directory but fails before completion > should not leave orphaned session directories when git clone fails after mkdir [1.00ms]
BUG CONFIRMED: Orphaned session after branch failure at /Users/edobry/.local/state/minsky/sessions/task#276/test-tmp/session-lookup-bug-test/local-minsky/sessions/test-branch-failure
(pass) Session Lookup Bug Reproduction (Task #168) > Scenario 2: Git branch creation fails after clone succeeds > should not leave orphaned sessions when branch creation fails [0.17ms]
BUG CONFIRMED: Orphaned session directory at /Users/edobry/.local/state/minsky/sessions/task#276/test-tmp/session-lookup-bug-test/local-minsky/sessions/existing-orphan-session not in database
(pass) Session Lookup Bug Reproduction (Task #168) > Scenario 3: Partial cleanup leaves inconsistent state > should handle the case where session directories exist but sessions are not in database [0.08ms]
(pass) Session Lookup Bug Reproduction (Task #168) > Expected behavior after fix > should either succeed completely or fail cleanly with no orphaned directories [0.04ms]

src/domain/session-pr-body-path.test.ts:
(pass) sessionPrFromParams bodyPath file reading functionality > should read body content from bodyPath when provided [0.13ms]
(pass) sessionPrFromParams bodyPath file reading functionality > should handle non-existent files correctly [0.07ms]
(pass) sessionPrFromParams bodyPath file reading functionality > should detect empty files correctly [0.16ms]
(pass) sessionPrFromParams bodyPath file reading functionality > should work with relative paths correctly [0.25ms]
(pass) sessionPrFromParams bodyPath file reading functionality > should validate bodyPath parameter priority logic [0.01ms]

src/domain/session-review.test.ts:
(pass) sessionReviewFromParams > reviews session by name [0.72ms]
24 | export class ZodError extends Error {
25 |     get errors() {
26 |         return this.issues;
27 |     }
28 |     constructor(issues) {
29 |         super();
             ^
ZodError: [
  {
    "code": "custom",
    "message": "Task ID must be a valid number (with or without # prefix, e.g., '283', '#283', 'task#283')",
    "path": []
  }
]
    issues: [
  [Object ...]
],
  addIssue: [Function],
 addIssues: [Function],

      at new ZodError (/Users/edobry/.local/state/minsky/sessions/task#276/node_modules/zod/dist/esm/v3/ZodError.js:29:9)
      at error (/Users/edobry/.local/state/minsky/sessions/task#276/node_modules/zod/dist/esm/v3/types.js:51:31)
      at parse (/Users/edobry/.local/state/minsky/sessions/task#276/node_modules/zod/dist/esm/v3/types.js:126:15)
      at sessionReviewFromParams (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/session.ts:1923:38)
      at sessionReviewFromParams (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/session.ts:1893:3)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/session-review.test.ts:179:26)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/session-review.test.ts:98:38)
(fail) sessionReviewFromParams > reviews session by task ID [0.72ms]
(pass) sessionReviewFromParams > throws ValidationError when no session detected [0.11ms]
(pass) sessionReviewFromParams > throws ResourceNotFoundError when session not found [0.04ms]

src/domain/session-git-clone-bug-regression.test.ts:
(pass) Session Git Clone Bug Regression Test > should not leave orphaned session records when git clone fails [0.28ms]
151 |       workspaceUtils: mockWorkspaceUtils,
152 |       resolveRepoPath: mockResolveRepoPath,
153 |     });
154 | 
155 |     // Assert - Session should be created successfully
156 |     expect(result).toMatchObject({
                         ^
error: expect(received).toMatchObject(expected)

  {
+   branch: "task160",
+   repoName: "local-minsky",
    repoUrl: "local/minsky",
+   session: "task160",
+   taskId: "160",
-   session: "task#160",
-   taskId: "#160",
  }

- Expected  - 2
+ Received  + 4

      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/session-git-clone-bug-regression.test.ts:156:20)
(fail) Session Git Clone Bug Regression Test > should successfully create session after fixing git directory issues [0.27ms]

src/domain/git-default-branch.test.ts:
(pass) GitService Default Branch Detection > should detect default branch from origin HEAD ref
(pass) GitService Default Branch Detection > should properly remove origin prefix from branch name
{"error":"Git command failed","level":"error","message":"Could not determine default branch, falling back to 'main'","repoPath":"/test/repo","timestamp":"2025-07-21T21:31:17.328Z"}
(pass) GitService Default Branch Detection > should fall back to 'main' when command fails [0.11ms]

src/domain/gitServiceTaskStatusUpdate.test.ts:
(pass) GitService Task Status Update > should be able to update task status after PR creation

src/domain/rules-format.test.ts:
(pass) RuleService Format Compatibility > should get a rule in its original format when requested [0.47ms]
(pass) RuleService Format Compatibility > should get a rule in any format if no format specified [0.29ms]
(pass) RuleService Format Compatibility > should return rule with format note when requested in different format [0.28ms]
(pass) RuleService Format Compatibility > should prioritize the requested format for dual-format rules [0.44ms]
(pass) RuleService Format Compatibility > should throw specific error messages for non-existent rules [0.88ms]

src/domain/session-approve.test.ts:
583 |       // BUG: These branch cleanup commands should be called but currently aren't
584 |       // Should delete the local PR branch after successful merge
585 |       expect(gitCommands).toContain("git branch -d pr/task#265");
586 | 
587 |       // Should delete the local task branch if it exists
588 |       expect(gitCommands).toContain("git branch -d task#265");
                                ^
error: expect(received).toContain(expected)

Expected to contain: "git branch -d task#265"
Received: [
  "git checkout main", "git fetch origin", "git show-ref --verify --quiet refs/heads/pr/task#265",
  "git rev-parse pr/task#265", "git merge --ff-only pr/task#265", "git rev-parse HEAD",
  "git config user.name", "git push origin main", "git branch -d pr/task#265", "git branch --format=\"%(refname:short)\"",
  "git status --porcelain"
]

      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/session-approve.test.ts:588:27)
(fail) Session Approve > branch cleanup after successful merge > should delete local PR branch and task branch after successful merge [0.59ms]
676 |       expect(result.session).toBe("task#265");
677 |       expect(result.isNewlyApproved).toBe(true);
678 | 
679 |       // Verify cleanup was attempted
680 |       expect(gitCommands).toContain("git branch -d pr/task#265");
681 |       expect(gitCommands).toContain("git branch -d task#265");
                                ^
error: expect(received).toContain(expected)

Expected to contain: "git branch -d task#265"
Received: [
  "git checkout main", "git fetch origin", "git show-ref --verify --quiet refs/heads/pr/task#265",
  "git rev-parse pr/task#265", "git merge --ff-only pr/task#265", "git rev-parse HEAD",
  "git config user.name", "git push origin main", "git branch -d pr/task#265", "git branch --format=\"%(refname:short)\"",
  "git status --porcelain"
]

      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/session-approve.test.ts:681:27)
(fail) Session Approve > branch cleanup after successful merge > should handle branch cleanup failures gracefully without failing the operation [0.39ms]
(pass) Session Approve > branch cleanup after successful merge > should not attempt branch cleanup for already approved sessions [0.12ms]
865 |       expect(result.session).toBe("task#265");
866 |       expect(result.isNewlyApproved).toBe(true);
867 | 
868 |       // Should attempt to clean up both branches, even if one fails
869 |       expect(gitCommands).toContain("git branch -d pr/task#265");
870 |       expect(gitCommands).toContain("git branch -d task#265");
                                ^
error: expect(received).toContain(expected)

Expected to contain: "git branch -d task#265"
Received: [
  "git checkout main", "git fetch origin", "git show-ref --verify --quiet refs/heads/pr/task#265",
  "git rev-parse pr/task#265", "git merge --ff-only pr/task#265", "git rev-parse HEAD",
  "git config user.name", "git push origin main", "git branch -d pr/task#265", "git branch --format=\"%(refname:short)\"",
  "git status --porcelain"
]

      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/session-approve.test.ts:870:27)
(fail) Session Approve > branch cleanup after successful merge > should handle case where task branch doesn't exist but PR branch does [0.41ms]
24 | export class ZodError extends Error {
25 |     get errors() {
26 |         return this.issues;
27 |     }
28 |     constructor(issues) {
29 |         super();
             ^
ZodError: [
  {
    "code": "custom",
    "message": "Task ID must be a valid number (with or without # prefix, e.g., '283', '#283', 'task#283')",
    "path": []
  }
]
    issues: [
  [Object ...]
],
  addIssue: [Function],
 addIssues: [Function],

      at new ZodError (/Users/edobry/.local/state/minsky/sessions/task#276/node_modules/zod/dist/esm/v3/ZodError.js:29:9)
      at error (/Users/edobry/.local/state/minsky/sessions/task#276/node_modules/zod/dist/esm/v3/types.js:51:31)
      at parse (/Users/edobry/.local/state/minsky/sessions/task#276/node_modules/zod/dist/esm/v3/types.js:126:15)
      at approveSessionImpl (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/session/session-approve-operations.ts:78:38)
      at approveSessionImpl (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/session/session-approve-operations.ts:33:3)
      at approveSessionFromParams (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/session.ts:1414:16)
      at approveSessionFromParams (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/session.ts:1385:3)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/session-approve.test.ts:129:32)
(fail) Session Approve > successfully approves and merges a PR branch [0.44ms]
(pass) Session Approve > detects current session when repo path is provided [0.26ms]
(pass) Session Approve > throws error when session is not found [0.08ms]
(pass) Session Approve > throws error when no session or task is provided [0.29ms]
(pass) Session Approve > handles errors during task metadata update [0.20ms]
(pass) Session Approve > merges from local PR branch and handles missing remote branch gracefully [0.20ms]

src/domain/session-approve-branch-cleanup.test.ts:
(pass) Session Approve Branch Cleanup > should delete local PR branch and task branch after successful merge [0.31ms]
(pass) Session Approve Branch Cleanup > should handle branch cleanup failures gracefully without failing the operation [0.22ms]
(pass) Session Approve Branch Cleanup > should not attempt branch cleanup for already approved sessions [0.05ms]

src/domain/session-update.test.ts:
(pass) updateSessionFromParams > throws ValidationError when name is not provided [23.32ms]
(pass) updateSessionFromParams > throws ResourceNotFoundError when session does not exist [0.04ms]
894 |       name: sessionName,
895 |     });
896 |     if (error instanceof MinskyError) {
897 |       throw error;
898 |     } else {
899 |       throw new MinskyError(
                  ^
MinskyError: Failed to update session: Command failed: git -C /mock/session/workdir rev-list --left-right --count origin/main...main
fatal: cannot change to '/mock/session/workdir': No such file or directory

      at updateSessionFromParams (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/session.ts:899:13)

941 |   if (!isURLInstance(fileURLOrPath))
942 |     return fileURLOrPath;
943 |   return Bun.fileURLToPath(fileURLOrPath);
944 | }
945 | var { Error, TypeError } = globalThis;
946 |   let err = new Error(message);
                  ^
error: Command failed: git -C /mock/session/workdir rev-list --left-right --count origin/main...main
fatal: cannot change to '/mock/session/workdir': No such file or directory

   code: 128,
 killed: false,
 signal: null,
    cmd: "git -C /mock/session/workdir rev-list --left-right --count origin/main...main",
 stdout: "",
 stderr: "fatal: cannot change to '/mock/session/workdir': No such file or directory\n",

      at genericNodeError (node:child_process:946:13)
      at exitHandler (node:child_process:102:28)
      at emit (node:events:96:22)
      at #maybeClose (node:child_process:737:16)
      at #handleOnExit (node:child_process:511:72)
(fail) updateSessionFromParams > returns session information when update is successful [8.51ms]
(pass) updateSessionFromParams > throws error when workspace is dirty and force is not set [7.81ms]
140 |         gitService: mockGitService,
141 |         getCurrentSession: mockGetCurrentSession,
142 |       }
143 |     );
144 | 
145 |     expect(_result).toEqual({
                          ^
error: expect(received).toEqual(expected)

  {
+   branch: "main",
-   _branch: "test-branch",
-   _session: "test-session",
    createdAt: "2023-01-01",
    repoName: "test-repo",
-   repoPath: "/mock/session/workdir",
    repoUrl: "https://example.com/test-repo",
+   session: "test-session",
    taskId: "TEST_VALUE",
  }

- Expected  - 3
+ Received  + 2

      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/session-update.test.ts:145:21)
(fail) updateSessionFromParams > updates session when workspace is dirty and force is set [0.22ms]
894 |       name: sessionName,
895 |     });
896 |     if (error instanceof MinskyError) {
897 |       throw error;
898 |     } else {
899 |       throw new MinskyError(
                  ^
MinskyError: Failed to update session: Command failed: git -C /mock/session/workdir rev-list --left-right --count origin/main...main
fatal: cannot change to '/mock/session/workdir': No such file or directory

      at updateSessionFromParams (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/session.ts:899:13)

941 |   if (!isURLInstance(fileURLOrPath))
942 |     return fileURLOrPath;
943 |   return Bun.fileURLToPath(fileURLOrPath);
944 | }
945 | var { Error, TypeError } = globalThis;
946 |   let err = new Error(message);
                  ^
error: Command failed: git -C /mock/session/workdir rev-list --left-right --count origin/main...main
fatal: cannot change to '/mock/session/workdir': No such file or directory

   code: 128,
 killed: false,
 signal: null,
    cmd: "git -C /mock/session/workdir rev-list --left-right --count origin/main...main",
 stdout: "",
 stderr: "fatal: cannot change to '/mock/session/workdir': No such file or directory\n",

      at genericNodeError (node:child_process:946:13)
      at exitHandler (node:child_process:102:28)
      at emit (node:events:96:22)
      at #maybeClose (node:child_process:737:16)
      at #handleOnExit (node:child_process:511:72)
(fail) updateSessionFromParams > skips stashing when noStash is true [6.56ms]
894 |       name: sessionName,
895 |     });
896 |     if (error instanceof MinskyError) {
897 |       throw error;
898 |     } else {
899 |       throw new MinskyError(
                  ^
MinskyError: Failed to update session: Command failed: git -C /mock/session/workdir rev-list --left-right --count origin/main...main
fatal: cannot change to '/mock/session/workdir': No such file or directory

      at updateSessionFromParams (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/session.ts:899:13)

941 |   if (!isURLInstance(fileURLOrPath))
942 |     return fileURLOrPath;
943 |   return Bun.fileURLToPath(fileURLOrPath);
944 | }
945 | var { Error, TypeError } = globalThis;
946 |   let err = new Error(message);
                  ^
error: Command failed: git -C /mock/session/workdir rev-list --left-right --count origin/main...main
fatal: cannot change to '/mock/session/workdir': No such file or directory

   code: 128,
 killed: false,
 signal: null,
    cmd: "git -C /mock/session/workdir rev-list --left-right --count origin/main...main",
 stdout: "",
 stderr: "fatal: cannot change to '/mock/session/workdir': No such file or directory\n",

      at genericNodeError (node:child_process:946:13)
      at exitHandler (node:child_process:102:28)
      at emit (node:events:96:22)
      at #maybeClose (node:child_process:737:16)
      at #handleOnExit (node:child_process:511:72)
(fail) updateSessionFromParams > skips pushing when noPush is true [6.51ms]
(pass) updateSessionFromParams > throws error when merge conflicts are detected [8.17ms]

src/domain/session-pr-no-branch-switch.test.ts:
87 |     if (!result.success || !result.data) {
88 |       return null;
89 |     }
90 | 
91 |     return (
92 |       result.data!.sessions.find((session) => session.session === id) ||
                                 ^
TypeError: result.data.sessions.find is not a function. (In 'result.data.sessions.find((session) => session.session === id)', 'result.data.sessions.find' is undefined)
      at getEntity (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/storage/backends/json-file-storage.ts:92:29)
(fail) Session PR Command Branch Behavior > should never switch user to PR branch during session pr creation [1.30ms]
161 |         session: "task#228",
162 |         title: "Test PR",
163 |         body: "Test body",
164 |         baseBranch: "main",
165 |       });
166 |     }).toThrow(/Failed to switch back to session branch/);
             ^
error: expect(received).toThrow(expected)

Expected pattern: /Failed to switch back to session branch/
Received message: "result.data.sessions.find is not a function. (In 'result.data.sessions.find((session) => session.session === id)', 'result.data.sessions.find' is undefined)"

      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/session-pr-no-branch-switch.test.ts:166:8)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/session-pr-no-branch-switch.test.ts:123:70)
(fail) Session PR Command Branch Behavior > should handle branch switch-back failure as critical error [0.09ms]
(pass) Session PR Command Branch Behavior > should document the behavioral change from switch -C to branch + switch pattern [0.17ms]

src/domain/session-auto-task-creation.test.ts:
108 |       "Fix the authentication bug",
109 |       "Auto-created task for session: Fix the authentication bug"
110 |     );
111 | 
112 |     // Verify session was created with task ID
113 |     expect(result.taskId).toBe("#001");
                                ^
error: expect(received).toBe(expected)

Expected: "#001"
Received: "001"

      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/session-auto-task-creation.test.ts:113:27)
(fail) Session Auto-Task Creation > should auto-create task when description is provided [0.63ms]
(pass) Session Auto-Task Creation > should not auto-create task when task ID is provided [0.09ms]
(pass) Session Auto-Task Creation > should use session name when provided with description [0.05ms]

src/domain/repository-uri.test.ts:

# Unhandled error between tests
-------------------------------
1 | (function (entry, fetcher)
              ^
SyntaxError: Export named 'expandGitHubShorthand' not found in module '/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/repository-uri.ts'.
      at loadAndEvaluateModule (1:11)
-------------------------------


src/domain/uri-utils.test.ts:
(pass) URI Utilities > normalizeRepositoryUri > normalizes HTTPS URLs [0.56ms]
(pass) URI Utilities > normalizeRepositoryUri > normalizes SSH URLs [0.02ms]
(pass) URI Utilities > normalizeRepositoryUri > normalizes GitHub shorthand
(pass) URI Utilities > convertRepositoryUri > converts HTTPS to SSH [0.07ms]
(pass) URI Utilities > convertRepositoryUri > converts SSH to HTTPS [0.01ms]
(pass) URI Utilities > convertRepositoryUri > converts shorthand to HTTPS
(pass) URI Utilities > convertRepositoryUri > returns same URI if already in target format
(pass) URI Utilities > extractRepositoryInfo > extracts info from HTTPS URL [0.03ms]
(pass) URI Utilities > extractRepositoryInfo > extracts info from SSH URL
(pass) URI Utilities > extractRepositoryInfo > extracts info from shorthand

src/domain/workspace.test.ts:
(pass) resolveWorkspacePath > uses explicitly provided workspace path [0.18ms]
(pass) resolveWorkspacePath > returns current directory when no workspace option is provided [0.05ms]
(pass) resolveWorkspacePath > returns sessionRepo when provided [0.02ms]
(pass) resolveWorkspacePath > validates that explicitly provided workspace exists [0.06ms]

src/domain/session-lookup-bug-simple.test.ts:
102 |     expect(sessionStartFailed)!.toBe(true); // Session creation should fail
103 | 
104 |     // CRITICAL: This assertion should PASS after fix but FAILS before fix
105 |     // Currently fails because git.clone creates directories before failing
106 |     const sessionDirPath = join(tempDir, "local-minsky", "sessions", "test-session");
107 |     expect(existsSync(sessionDirPath))!.toBe(false); // No orphaned directories should exist
                                              ^
error: expect(received).toBe(expected)

Expected: false
Received: true

      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/session-lookup-bug-simple.test.ts:107:41)
(fail) Session Creation Bug Fix (TDD) > should NOT create session directory if git operations fail [0.31ms]

src/domain/repo-utils.test.ts:
(pass) Repo Utils > normalizeRepoName extracts repo name from URL
(pass) Repo Utils > resolveRepoPath uses provided repo path [0.43ms]
(pass) Repo Utils > resolveRepoPath resolves from session [0.05ms]
(pass) Repo Utils > resolveRepoPath falls back to git directory [0.04ms]
(pass) Repo Utils > resolveRepoPath falls back to current directory when git fails [0.04ms]

src/domain/github-backend.test.ts:
(pass) GitHub Repository Backend > constructor creates repository backend with correct settings
(pass) GitHub Repository Backend > getPath returns session workdir path [0.07ms]
(pass) GitHub Repository Backend > validate succeeds for a valid GitHub repository
(pass) GitHub Repository Backend > getConfig returns correct configuration [0.03ms]

src/domain/tasks.specpath.test.ts:

src/domain/task-status-variables.test.ts:
(pass) Task Status Variables Regression Tests > TASK_PARSING_UTILS.getCheckboxFromStatus > should return correct checkbox for TODO status
(pass) Task Status Variables Regression Tests > TASK_PARSING_UTILS.getCheckboxFromStatus > should return correct checkbox for IN-PROGRESS status [0.06ms]
(pass) Task Status Variables Regression Tests > TASK_PARSING_UTILS.getCheckboxFromStatus > should return correct checkbox for DONE status
(pass) Task Status Variables Regression Tests > TASK_PARSING_UTILS.getCheckboxFromStatus > should not throw 'status is not defined' error [0.02ms]

src/domain/session-pr-title-duplication.test.ts:
(pass) Session PR Title Duplication Bug Tests > should reproduce title duplication in commit message parsing [0.09ms]
(pass) Session PR Title Duplication Bug Tests > should reproduce title duplication when body accidentally contains title [0.05ms]
(pass) Session PR Title Duplication Bug Tests > should fix title duplication with improved parsing [0.07ms]
(pass) Session PR Title Duplication Bug Tests > should handle empty body without duplication
(pass) Session PR Title Duplication Bug Tests > should handle multiline body with potential title duplication [0.07ms]

src/domain/repository.test.ts:
(pass) Repository backends > placeholder test to make CI pass - RepositoryBackend
(pass) Repository backends > placeholder test for LocalGitBackend
(pass) Repository backends > placeholder test for RemoteGitBackend
(pass) Repository backends > placeholder test for GitHubBackend

src/domain/tasks.test.ts:
84 |       expect(result).toEqual([mockTask]);
85 |       // Mock call expectation updated - function may not call resolveRepoPath in all scenarios
86 |       // expect(mockResolveRepoPath.mock.calls.length > 0).toBe(true);
87 |       // Mock call expectation updated - function may not call resolveWorkspacePath in all scenarios
88 |       // expect(mockResolveWorkspacePath.mock.calls.length > 0).toBe(true);
89 |       expect(mockCreateTaskService).toHaveBeenCalledWith({
                                         ^
error: expect(received).toHaveBeenCalledWith(expected)

Number of calls: 1

      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks.test.ts:89:37)
(fail) interface-agnostic task functions > listTasksFromParams > should list tasks with valid parameters [0.47ms]
(pass) interface-agnostic task functions > listTasksFromParams > should filter out DONE tasks when all is false [0.10ms]
172 |     }
173 | 
174 |     return task;
175 |   } catch (error) {
176 |     if (error instanceof z.ZodError) {
177 |       throw new ValidationError("Invalid parameters for getting task", (error as any).format(), error as any);
                  ^
ValidationError: Invalid parameters for getting task
 errors: {
  _errors: [],
  taskId: [Object ...],
},

      at getTaskFromParams (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks/taskCommands.ts:177:13)
      at getTaskFromParams (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks/taskCommands.ts:116:3)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks.test.ts:122:28)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks.test.ts:116:53)

24 | export class ZodError extends Error {
25 |     get errors() {
26 |         return this.issues;
27 |     }
28 |     constructor(issues) {
29 |         super();
             ^
ZodError: [
  {
    "code": "custom",
    "message": "Task ID must be a valid number (with or without # prefix, e.g., '283', '#283', 'task#283')",
    "path": [
      "taskId"
    ]
  }
]
    issues: [
  [Object ...]
],
  addIssue: [Function],
 addIssues: [Function],

      at new ZodError (/Users/edobry/.local/state/minsky/sessions/task#276/node_modules/zod/dist/esm/v3/ZodError.js:29:9)
      at error (/Users/edobry/.local/state/minsky/sessions/task#276/node_modules/zod/dist/esm/v3/types.js:51:31)
      at parse (/Users/edobry/.local/state/minsky/sessions/task#276/node_modules/zod/dist/esm/v3/types.js:126:15)
      at getTaskFromParams (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks/taskCommands.ts:143:45)
      at getTaskFromParams (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks/taskCommands.ts:116:3)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks.test.ts:122:28)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks.test.ts:116:53)
(fail) interface-agnostic task functions > getTaskFromParams > should get a task with valid parameters [0.60ms]
(pass) interface-agnostic task functions > getTaskFromParams > should throw ResourceNotFoundError when task is not found [0.08ms]
172 |     }
173 | 
174 |     return task;
175 |   } catch (error) {
176 |     if (error instanceof z.ZodError) {
177 |       throw new ValidationError("Invalid parameters for getting task", (error as any).format(), error as any);
                  ^
ValidationError: Invalid parameters for getting task
 errors: {
  _errors: [],
  taskId: [Object ...],
},

      at getTaskFromParams (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks/taskCommands.ts:177:13)
      at getTaskFromParams (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks/taskCommands.ts:116:3)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks.test.ts:148:28)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks.test.ts:142:91)

24 | export class ZodError extends Error {
25 |     get errors() {
26 |         return this.issues;
27 |     }
28 |     constructor(issues) {
29 |         super();
             ^
ZodError: [
  {
    "code": "custom",
    "message": "Task ID must be a valid number (with or without # prefix, e.g., '283', '#283', 'task#283')",
    "path": [
      "taskId"
    ]
  }
]
    issues: [
  [Object ...]
],
  addIssue: [Function],
 addIssues: [Function],

      at new ZodError (/Users/edobry/.local/state/minsky/sessions/task#276/node_modules/zod/dist/esm/v3/ZodError.js:29:9)
      at error (/Users/edobry/.local/state/minsky/sessions/task#276/node_modules/zod/dist/esm/v3/types.js:51:31)
      at parse (/Users/edobry/.local/state/minsky/sessions/task#276/node_modules/zod/dist/esm/v3/types.js:126:15)
      at getTaskFromParams (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks/taskCommands.ts:143:45)
      at getTaskFromParams (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks/taskCommands.ts:116:3)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks.test.ts:148:28)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks.test.ts:142:91)
(fail) interface-agnostic task functions > getTaskFromParams > should normalize non-canonical task IDs (e.g., 'TEST_VALUE' -> '#TEST_VALUE') [0.11ms]
162 | 
163 |     // Get the task
164 |     const task = await taskService.getTask(validParams.taskId);
165 | 
166 |     if (!task) {
167 |       throw new ResourceNotFoundError(
                  ^
ResourceNotFoundError: Task 23 not found
      cause: undefined,
 resourceType: "task",
 resourceId: "23",

      at getTaskFromParams (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks/taskCommands.ts:167:13)
(fail) interface-agnostic task functions > getTaskFromParams > should handle task IDs without leading zeros [0.22ms]
246 |     }
247 | 
248 |     return task.status;
249 |   } catch (error) {
250 |     if (error instanceof z.ZodError) {
251 |       throw new ValidationError(
                  ^
ValidationError: Invalid parameters for getting task status
 errors: {
  _errors: [],
  taskId: [Object ...],
},

      at getTaskStatusFromParams (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks/taskCommands.ts:251:13)
      at getTaskStatusFromParams (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks/taskCommands.ts:190:3)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks.test.ts:184:28)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks.test.ts:178:58)

24 | export class ZodError extends Error {
25 |     get errors() {
26 |         return this.issues;
27 |     }
28 |     constructor(issues) {
29 |         super();
             ^
ZodError: [
  {
    "code": "custom",
    "message": "Task ID must be a valid number (with or without # prefix, e.g., '283', '#283', 'task#283')",
    "path": [
      "taskId"
    ]
  }
]
    issues: [
  [Object ...]
],
  addIssue: [Function],
 addIssues: [Function],

      at new ZodError (/Users/edobry/.local/state/minsky/sessions/task#276/node_modules/zod/dist/esm/v3/ZodError.js:29:9)
      at error (/Users/edobry/.local/state/minsky/sessions/task#276/node_modules/zod/dist/esm/v3/types.js:51:31)
      at parse (/Users/edobry/.local/state/minsky/sessions/task#276/node_modules/zod/dist/esm/v3/types.js:126:15)
      at getTaskStatusFromParams (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks/taskCommands.ts:217:51)
      at getTaskStatusFromParams (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks/taskCommands.ts:190:3)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks.test.ts:184:28)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks.test.ts:178:58)
(fail) interface-agnostic task functions > getTaskStatusFromParams > should get task status with valid parameters [0.29ms]
(pass) interface-agnostic task functions > getTaskStatusFromParams > should throw ResourceNotFoundError when task status is not found [0.08ms]
330 |       const commitMessage = `chore(${validParams.taskId}): update task status ${oldStatus} ‚Üí ${validParams.status}`;
331 |       await autoCommitTaskChanges(workspacePath, commitMessage);
332 |     }
333 |   } catch (error) {
334 |     if (error instanceof z.ZodError) {
335 |       throw new ValidationError(
                  ^
ValidationError: Invalid parameters for setting task status
 errors: {
  _errors: [],
  taskId: [Object ...],
},

      at setTaskStatusFromParams (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks/taskCommands.ts:335:13)
      at setTaskStatusFromParams (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks/taskCommands.ts:267:3)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks.test.ts:216:13)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks.test.ts:206:58)

24 | export class ZodError extends Error {
25 |     get errors() {
26 |         return this.issues;
27 |     }
28 |     constructor(issues) {
29 |         super();
             ^
ZodError: [
  {
    "code": "custom",
    "message": "Task ID must be a valid number (with or without # prefix, e.g., '283', '#283', 'task#283')",
    "path": [
      "taskId"
    ]
  }
]
    issues: [
  [Object ...]
],
  addIssue: [Function],
 addIssues: [Function],

      at new ZodError (/Users/edobry/.local/state/minsky/sessions/task#276/node_modules/zod/dist/esm/v3/ZodError.js:29:9)
      at error (/Users/edobry/.local/state/minsky/sessions/task#276/node_modules/zod/dist/esm/v3/types.js:51:31)
      at parse (/Users/edobry/.local/state/minsky/sessions/task#276/node_modules/zod/dist/esm/v3/types.js:126:15)
      at setTaskStatusFromParams (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks/taskCommands.ts:294:51)
      at setTaskStatusFromParams (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks/taskCommands.ts:267:3)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks.test.ts:216:13)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks.test.ts:206:58)
(fail) interface-agnostic task functions > setTaskStatusFromParams > should set task status with valid parameters [0.35ms]
(pass) interface-agnostic task functions > setTaskStatusFromParams > should throw ValidationError when status is invalid [0.08ms]

src/domain/prepared-merge-commit-workflow.test.ts:
(pass) Prepared Merge Commit Workflow (Task #144) > Current Broken Behavior - preparePr method > SHOULD FAIL: preparePr creates PR branch from feature branch instead of base branch
158 | 
159 |       // 2. Should create PR branch FROM base branch (not feature branch)
160 |       expect(gitCommands).toContain("git -C /test/repo switch -C pr/feature-branch origin/main");
161 | 
162 |       // 3. Should create PR title/body file
163 |       expect(gitCommands).toContain("echo \"Test PR\" > /test/repo/.pr_title");
                                ^
error: expect(received).toContain(expected)

Expected to contain: "echo \"Test PR\" > /test/repo/.pr_title"
Received: [ "git -C /test/repo fetch origin main", "git -C /test/repo switch -C pr/feature-branch origin/main",
  "echo \"undefined\" > /test/repo/.pr_title", "echo \"Test PR body\" >> /test/repo/.pr_title",
  "git -C /test/repo merge --no-ff feature-branch -F .pr_title", "git -C /test/repo push origin pr/feature-branch"
]

      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/prepared-merge-commit-workflow.test.ts:163:27)
(fail) Prepared Merge Commit Workflow (Task #144) > Expected Correct Behavior - What SHOULD happen per Task #025 > preparePr SHOULD create PR branch from base branch and merge feature branch with --no-ff [0.29ms]
207 |           body: params.body,
208 |         };
209 |       });
210 | 
211 |       // Replace the preparePrFromParams function
212 |       const originalPreparePr = require("./git").preparePrFromParams;
                                                       ^
TypeError: Attempted to assign to readonly property.
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/prepared-merge-commit-workflow.test.ts:212:50)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/prepared-merge-commit-workflow.test.ts:181:79)
(fail) Prepared Merge Commit Workflow (Task #144) > Expected Correct Behavior - What SHOULD happen per Task #025 > sessionPrFromParams SHOULD call preparePr with correct parameters
(pass) Prepared Merge Commit Workflow (Task #144) > Fast-Forward Merge Verification > Prepared merge commit SHOULD be fast-forward mergeable [0.10ms]
(pass) Prepared Merge Commit Workflow (Task #144) > Error Handling > SHOULD handle merge conflicts during prepared merge commit creation [0.12ms]

src/domain/session-pr-refresh.test.ts:

src/domain/git.test.ts:
(pass) GitService > should be able to create an instance
(pass) GitService > should get repository status [0.06ms]
(pass) GitService > getSessionWorkdir should return the correct path [0.01ms]
(pass) GitService > execInRepository should execute git commands in the specified repository
(pass) GitService > execInRepository should propagate errors [0.08ms]
(pass) GitService > should use session-ID-based storage in getSessionWorkdir [0.01ms]
(pass) GitService - Core Methods with Dependency Injection > PR Workflow with Dependencies > should generate PR markdown with proper dependency injection [0.45ms]
(pass) GitService - Core Methods with Dependency Injection > PR Workflow with Dependencies > should handle missing session in PR workflow [0.05ms]
(pass) GitService - Core Methods with Dependency Injection > PR Workflow with Dependencies > should resolve taskId to session in PR workflow [0.06ms]
(pass) GitService - Core Methods with Dependency Injection > PR Workflow with Dependencies > should throw error when taskId has no associated session [0.04ms]
(pass) GitService - Core Methods with Dependency Injection > PR Workflow with Dependencies > should throw error when getSessionByTaskId dependency is not available [0.04ms]
(pass) GitService - Core Methods with Dependency Injection > PR Workflow with Dependencies > should prioritize session over taskId when both are provided [0.09ms]
(pass) GitService - Core Methods with Dependency Injection > PR Workflow with Dependencies > should handle git command failures gracefully in PR workflow [0.21ms]
(pass) GitService - Core Methods with Dependency Injection > Repository Operations with Dependency Injection > should handle commit operations with proper hash extraction
(pass) GitService - Core Methods with Dependency Injection > Repository Operations with Dependency Injection > should extract commit hash from various git output formats [0.01ms]
(pass) GitService - Core Methods with Dependency Injection > Repository Operations with Dependency Injection > should handle missing commit hash in git output [0.01ms]
(pass) GitService - Core Methods with Dependency Injection > Repository Operations with Dependency Injection > should handle commit with amend flag [0.01ms]
(pass) GitService - Core Methods with Dependency Injection > Repository Operations with Dependency Injection > should handle stash operations with state management [0.09ms]
(pass) GitService - Core Methods with Dependency Injection > Repository Operations with Dependency Injection > should handle no changes to stash scenario [0.02ms]
(pass) GitService - Core Methods with Dependency Injection > Repository Operations with Dependency Injection > should handle popStash with existing stash [0.01ms]
(pass) GitService - Core Methods with Dependency Injection > Repository Operations with Dependency Injection > should handle popStash with no stash available [0.01ms]
(pass) GitService - Core Methods with Dependency Injection > Repository Operations with Dependency Injection > should handle merge conflicts with proper detection [0.01ms]
(pass) GitService - Core Methods with Dependency Injection > Repository Operations with Dependency Injection > should handle successful merge without conflicts [0.01ms]
(pass) GitService - Core Methods with Dependency Injection > Repository Operations with Dependency Injection > should handle staging operations with proper command execution [0.01ms]
(pass) GitService - Core Methods with Dependency Injection > Repository Operations with Dependency Injection > should verify staging commands are correct [0.01ms]
(pass) GitService - Core Methods with Dependency Injection > Repository Operations with Dependency Injection > should handle pullLatest with updates detected [0.11ms]
(pass) GitService - Core Methods with Dependency Injection > Repository Operations with Dependency Injection > should handle pullLatest with no updates [0.04ms]
(pass) GitService - Core Methods with Dependency Injection > Repository Operations with Dependency Injection > should handle pullLatest with custom remote [0.04ms]
719 |           throw new Error("ENOENT: no such file or directory"); // Directory doesn't exist
720 |         }) as unknown,
721 |         access: createMock(async () => {}) as unknown, // .git directory exists
722 |       };
723 | 
724 |       const result = await gitService.cloneWithDependencies(
                                            ^
TypeError: gitService.cloneWithDependencies is not a function. (In 'gitService.cloneWithDependencies({
        repoUrl: "https://github.com/user/repo.git",
        session: "test-session"
      }, mockDeps)', 'gitService.cloneWithDependencies' is undefined)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/git.test.ts:724:39)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/git.test.ts:709:71)
(fail) GitService - Core Methods with Dependency Injection > Repository Operations with Dependency Injection > should handle clone operations with filesystem validation [0.13ms]
742 |         readdir: createMock() as unknown,
743 |         access: createMock() as unknown,
744 |       };
745 | 
746 |       await expect(
747 |         gitService.cloneWithDependencies(
                         ^
TypeError: gitService.cloneWithDependencies is not a function. (In 'gitService.cloneWithDependencies({
        repoUrl: "",
        session: "test-session"
      }, mockDeps)', 'gitService.cloneWithDependencies' is undefined)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/git.test.ts:747:20)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/git.test.ts:738:70)
(fail) GitService - Core Methods with Dependency Injection > Repository Operations with Dependency Injection > should handle clone with empty repository URL validation [0.02ms]
766 |         readdir: createMock(async () => ["existing-file.txt"]) as unknown, // Directory exists and not empty
767 |         access: createMock() as unknown,
768 |       };
769 | 
770 |       // Should still proceed with clone despite warning about non-empty directory
771 |       const result = await gitService.cloneWithDependencies(
                                            ^
TypeError: gitService.cloneWithDependencies is not a function. (In 'gitService.cloneWithDependencies({
        repoUrl: "https://github.com/user/repo.git",
        session: "test-session"
      }, mockDeps)', 'gitService.cloneWithDependencies' is undefined)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/git.test.ts:771:39)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/git.test.ts:757:67)
(fail) GitService - Core Methods with Dependency Injection > Repository Operations with Dependency Injection > should handle clone with existing non-empty directory [0.08ms]
796 |         }) as unknown,
797 |         access: createMock() as unknown,
798 |       };
799 | 
800 |       await expect(
801 |         gitService.cloneWithDependencies(
                         ^
TypeError: gitService.cloneWithDependencies is not a function. (In 'gitService.cloneWithDependencies({
        repoUrl: "https://github.com/user/nonexistent.git",
        session: "test-session"
      }, mockDeps)', 'gitService.cloneWithDependencies' is undefined)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/git.test.ts:801:20)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/git.test.ts:783:70)
(fail) GitService - Core Methods with Dependency Injection > Repository Operations with Dependency Injection > should handle clone failure during git command execution [0.04ms]
824 |           throw new Error("ENOENT: .git directory not found"); // Clone verification fails
825 |         }) as unknown,
826 |       };
827 | 
828 |       await expect(
829 |         gitService.cloneWithDependencies(
                         ^
TypeError: gitService.cloneWithDependencies is not a function. (In 'gitService.cloneWithDependencies({
        repoUrl: "https://github.com/user/repo.git",
        session: "test-session"
      }, mockDeps)', 'gitService.cloneWithDependencies' is undefined)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/git.test.ts:829:20)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/git.test.ts:811:62)
(fail) GitService - Core Methods with Dependency Injection > Repository Operations with Dependency Injection > should handle clone success verification failure [0.02ms]
844 |           throw new Error("ENOENT");
845 |         }) as unknown,
846 |         access: createMock() as unknown,
847 |       };
848 | 
849 |       const result = await gitService.cloneWithDependencies(
                                            ^
TypeError: gitService.cloneWithDependencies is not a function. (In 'gitService.cloneWithDependencies({
        repoUrl: "local/path/to/repo",
        session: "test-session"
      }, mockDeps)', 'gitService.cloneWithDependencies' is undefined)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/git.test.ts:849:39)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/git.test.ts:839:69)
(fail) GitService - Core Methods with Dependency Injection > Repository Operations with Dependency Injection > should handle clone with local repository normalization [0.01ms]
(pass) GitService - Core Methods with Dependency Injection > Repository Operations with Dependency Injection > should handle error scenarios with proper error propagation [0.02ms]
(pass) GitService - Core Methods with Dependency Injection > Architecture Analysis - Testing Limitations > should demonstrate the core testing challenge [0.01ms]
(pass) createGitService Factory Function > should handle undefined options parameter without throwing runtime error [0.01ms]
(pass) createGitService Factory Function > should handle null options parameter without throwing runtime error [0.01ms]
(pass) createGitService Factory Function > should handle options with undefined baseDir property [0.01ms]
(pass) createGitService Factory Function > should create GitService with custom baseDir when provided [0.01ms]
(pass) createGitService Factory Function > should create GitService with default baseDir when no options provided
error: Command failed: git -C /test/repo add -A
fatal: cannot change to '/test/repo': No such file or directory

   code: 128,
 killed: false,
 signal: null,
    cmd: "git -C /test/repo add -A",
 stdout: "",
 stderr: "fatal: cannot change to '/test/repo': No such file or directory\n",

      at genericNodeError (node:child_process:946:22)
(fail) Parameter-Based Git Functions > commitChangesFromParams > should commit changes with all parameters [8.11ms]
error: Command failed: git -C /Users/edobry/.local/state/minsky/sessions/task#276 commit  -m "minimal commit"
husky - DEPRECATED

Please remove the following two lines from .husky/pre-commit:

#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

They WILL FAIL in v10.0.0

üîç Checking for variable naming issues...
Checking 377 TypeScript files for variable naming issues...

‚úÖ No variable naming issues found!
‚úÖ No variable naming issues found.
üîç Running ESLint...

> lint
> eslint . --quiet


/Users/edobry/.local/state/minsky/sessions/task#276/virtual-session-approve-1753132670130.test.ts
   2:1  error  Expected indentation of 0 spaces but found 8   indent
   4:1  error  Expected indentation of 2 spaces but found 14  indent
   5:1  error  Expected indentation of 2 spaces but found 14  indent
   6:1  error  Expected indentation of 4 spaces but found 16  indent
   7:1  error  Expected indentation of 4 spaces but found 16  indent
   8:1  error  Expected indentation of 4 spaces but found 16  indent
   9:1  error  Expected indentation of 4 spaces but found 16  indent
  10:1  error  Expected indentation of 4 spaces but found 16  indent
  11:1  error  Expected indentation of 2 spaces but found 14  indent
  13:1  error  Expected indentation of 2 spaces but found 14  indent
  14:1  error  Expected indentation of 4 spaces but found 16  indent
  15:1  error  Expected indentation of 2 spaces but found 14  indent
  17:1  error  Expected indentation of 2 spaces but found 10  indent
  18:1  error  Expected indentation of 4 spaces but found 12  indent
  19:1  error  Expected indentation of 2 spaces but found 10  indent
  20:1  error  Expected indentation of 0 spaces but found 8   indent

/Users/edobry/.local/state/minsky/sessions/task#276/virtual-session-approve-1753133476940.test.ts
   2:1  error  Expected indentation of 0 spaces but found 8   indent
   4:1  error  Expected indentation of 2 spaces but found 14  indent
   5:1  error  Expected indentation of 2 spaces but found 14  indent
   6:1  error  Expected indentation of 4 spaces but found 16  indent
   7:1  error  Expected indentation of 4 spaces but found 16  indent
   8:1  error  Expected indentation of 4 spaces but found 16  indent
   9:1  error  Expected indentation of 4 spaces but found 16  indent
  10:1  error  Expected indentation of 4 spaces but found 16  indent
  11:1  error  Expected indentation of 2 spaces but found 14  indent
  13:1  error  Expected indentation of 2 spaces but found 14  indent
  14:1  error  Expected indentation of 4 spaces but found 16  indent
  15:1  error  Expected indentation of 2 spaces but found 14  indent
  17:1  error  Expected indentation of 2 spaces but found 10  indent
  18:1  error  Expected indentation of 4 spaces but found 12  indent
  19:1  error  Expected indentation of 2 spaces but found 10  indent
  20:1  error  Expected indentation of 0 spaces but found 8   indent

/Users/edobry/.local/state/minsky/sessions/task#276/virtual-syntax-test-1753132670137.test.ts
   2:1   error  Expected indentation of 0 spaces but found 8   indent
   3:1   error  Expected indentation of 2 spaces but found 10  indent
   4:1   error  Expected indentation of 2 spaces but found 10  indent
   5:1   error  Expected indentation of 2 spaces but found 12  indent
   6:1   error  Expected indentation of 0 spaces but found 8   indent
   8:1   error  Expected indentation of 0 spaces but found 8   indent
   9:1   error  Expected indentation of 2 spaces but found 10  indent
  10:1   error  Expected indentation of 4 spaces but found 12  indent
  10:26  error  Strings must use doublequote                   quotes
  11:1   error  Expected indentation of 2 spaces but found 10  indent
  12:1   error  Expected indentation of 0 spaces but found 8   indent

/Users/edobry/.local/state/minsky/sessions/task#276/virtual-syntax-test-1753133476948.test.ts
   2:1   error  Expected indentation of 0 spaces but found 8   indent
   3:1   error  Expected indentation of 2 spaces but found 10  indent
   4:1   error  Expected indentation of 2 spaces but found 10  indent
   5:1   error  Expected indentation of 2 spaces but found 12  indent
   6:1   error  Expected indentation of 0 spaces but found 8   indent
   8:1   error  Expected indentation of 0 spaces but found 8   indent
   9:1   error  Expected indentation of 2 spaces but found 10  indent
  10:1   error  Expected indentation of 4 spaces but found 12  indent
  10:26  error  Strings must use doublequote                   quotes
  11:1   error  Expected indentation of 2 spaces but found 10  indent
  12:1   error  Expected indentation of 0 spaces but found 8   indent

/Users/edobry/.local/state/minsky/sessions/task#276/virtual-test-2-1753132670121.test.ts
  2:1  error  Expected indentation of 0 spaces but found 8   indent
  3:1  error  Expected indentation of 2 spaces but found 10  indent
  4:1  error  Expected indentation of 2 spaces but found 10  indent
  5:1  error  Expected indentation of 2 spaces but found 10  indent
  6:1  error  Expected indentation of 2 spaces but found 10  indent
  7:1  error  Expected indentation of 2 spaces but found 12  indent
  8:1  error  Expected indentation of 0 spaces but found 8   indent

/Users/edobry/.local/state/minsky/sessions/task#276/virtual-test-2-1753133476932.test.ts
  2:1  error  Expected indentation of 0 spaces but found 8   indent
  3:1  error  Expected indentation of 2 spaces but found 10  indent
  4:1  error  Expected indentation of 2 spaces but found 10  indent
  5:1  error  Expected indentation of 2 spaces but found 10  indent
  6:1  error  Expected indentation of 2 spaces but found 10  indent
  7:1  error  Expected indentation of 2 spaces but found 12  indent
  8:1  error  Expected indentation of 0 spaces but found 8   indent

‚úñ 68 problems (68 errors, 0 warnings)
  68 errors and 0 warnings potentially fixable with the `--fix` option.

‚ùå Linting failed! Please fix the issues before committing.
husky - pre-commit script failed (code 1)

   code: 1,
 killed: false,
 signal: null,
    cmd: "git -C /Users/edobry/.local/state/minsky/sessions/task#276 commit  -m \"minimal commit\"",
 stdout: "",
 stderr: "husky - DEPRECATED\n\nPlease remove the following two lines from .husky/pre-commit:\n\n#!/usr/bin/env sh\n. \"$(dirname -- \"$0\")/_/husky.sh\"\n\nThey WILL FAIL in v10.0.0\n\nüîç Checking for variable naming issues...\nChecking 377 TypeScript files for variable naming issues...\n\n‚úÖ No variable naming issues found!\n‚úÖ No variable naming issues found.\nüîç Running ESLint...\n\n> lint\n> eslint . --quiet\n\n\n/Users/edobry/.local/state/minsky/sessions/task#276/virtual-session-approve-1753132670130.test.ts\n   2:1  error  Expected indentation of 0 spaces but found 8   indent\n   4:1  error  Expected indentation of 2 spaces but found 14  indent\n   5:1  error  Expected indentation of 2 spaces but found 14  indent\n   6:1  error  Expected indentation of 4 spaces but found 16  indent\n   7:1  error  Expected indentation of 4 spaces but found 16  indent\n   8:1  error  Expected indentation of 4 spaces but found 16  indent\n   9:1  error  Expected indentation of 4 spaces but found 16  indent\n  10:1  error  Expected indentation of 4 spaces but found 16  indent\n  11:1  error  Expected indentation of 2 spaces but found 14  indent\n  13:1  error  Expected indentation of 2 spaces but found 14  indent\n  14:1  error  Expected indentation of 4 spaces but found 16  indent\n  15:1  error  Expected indentation of 2 spaces but found 14  indent\n  17:1  error  Expected indentation of 2 spaces but found 10  indent\n  18:1  error  Expected indentation of 4 spaces but found 12  indent\n  19:1  error  Expected indentation of 2 spaces but found 10  indent\n  20:1  error  Expected indentation of 0 spaces but found 8   indent\n\n/Users/edobry/.local/state/minsky/sessions/task#276/virtual-session-approve-1753133476940.test.ts\n   2:1  error  Expected indentation of 0 spaces but found 8   indent\n   4:1  error  Expected indentation of 2 spaces but found 14  indent\n   5:1  error  Expected indentation of 2 spaces but found 14  indent\n   6:1  error  Expected indentation of 4 spaces but found 16  indent\n   7:1  error  Expected indentation of 4 spaces but found 16  indent\n   8:1  error  Expected indentation of 4 spaces but found 16  indent\n   9:1  error  Expected indentation of 4 spaces but found 16  indent\n  10:1  error  Expected indentation of 4 spaces but found 16  indent\n  11:1  error  Expected indentation of 2 spaces but found 14  indent\n  13:1  error  Expected indentation of 2 spaces but found 14  indent\n  14:1  error  Expected indentation of 4 spaces but found 16  indent\n  15:1  error  Expected indentation of 2 spaces but found 14  indent\n  17:1  error  Expected indentation of 2 spaces but found 10  indent\n  18:1  error  Expected indentation of 4 spaces but found 12  indent\n  19:1  error  Expected indentation of 2 spaces but found 10  indent\n  20:1  error  Expected indentation of 0 spaces but found 8   indent\n\n/Users/edobry/.local/state/minsky/sessions/task#276/virtual-syntax-test-1753132670137.test.ts\n   2:1   error  Expected indentation of 0 spaces but found 8   indent\n   3:1   error  Expected indentation of 2 spaces but found 10  indent\n   4:1   error  Expected indentation of 2 spaces but found 10  indent\n   5:1   error  Expected indentation of 2 spaces but found 12  indent\n   6:1   error  Expected indentation of 0 spaces but found 8   indent\n   8:1   error  Expected indentation of 0 spaces but found 8   indent\n   9:1   error  Expected indentation of 2 spaces but found 10  indent\n  10:1   error  Expected indentation of 4 spaces but found 12  indent\n  10:26  error  Strings must use doublequote                   quotes\n  11:1   error  Expected indentation of 2 spaces but found 10  indent\n  12:1   error  Expected indentation of 0 spaces but found 8   indent\n\n/Users/edobry/.local/state/minsky/sessions/task#276/virtual-syntax-test-1753133476948.test.ts\n   2:1   error  Expected indentation of 0 spaces but found 8   indent\n   3:1   error  Expected indentation of 2 spaces but found 10  indent\n   4:1   error  Expected indentation of 2 spaces but found 10  indent\n   5:1   error  Expected indentation of 2 spaces but found 12  indent\n   6:1   error  Expected indentation of 0 spaces but found 8   indent\n   8:1   error  Expected indentation of 0 spaces but found 8   indent\n   9:1   error  Expected indentation of 2 spaces but found 10  indent\n  10:1   error  Expected indentation of 4 spaces but found 12  indent\n  10:26  error  Strings must use doublequote                   quotes\n  11:1   error  Expected indentation of 2 spaces but found 10  indent\n  12:1   error  Expected indentation of 0 spaces but found 8   indent\n\n/Users/edobry/.local/state/minsky/sessions/task#276/virtual-test-2-1753132670121.test.ts\n  2:1  error  Expected indentation of 0 spaces but found 8   indent\n  3:1  error  Expected indentation of 2 spaces but found 10  indent\n  4:1  error  Expected indentation of 2 spaces but found 10  indent\n  5:1  error  Expected indentation of 2 spaces but found 10  indent\n  6:1  error  Expected indentation of 2 spaces but found 10  indent\n  7:1  error  Expected indentation of 2 spaces but found 12  indent\n  8:1  error  Expected indentation of 0 spaces but found 8   indent\n\n/Users/edobry/.local/state/minsky/sessions/task#276/virtual-test-2-1753133476932.test.ts\n  2:1  error  Expected indentation of 0 spaces but found 8   indent\n  3:1  error  Expected indentation of 2 spaces but found 10  indent\n  4:1  error  Expected indentation of 2 spaces but found 10  indent\n  5:1  error  Expected indentation of 2 spaces but found 10  indent\n  6:1  error  Expected indentation of 2 spaces but found 10  indent\n  7:1  error  Expected indentation of 2 spaces but found 12  indent\n  8:1  error  Expected indentation of 0 spaces but found 8   indent\n\n‚úñ 68 problems (68 errors, 0 warnings)\n  68 errors and 0 warnings potentially fixable with the `--fix` option.\n\n‚ùå Linting failed! Please fix the issues before committing.\nhusky - pre-commit script failed (code 1)\n",

      at genericNodeError (node:child_process:946:22)
(fail) Parameter-Based Git Functions > commitChangesFromParams > should handle commit with minimal parameters [3942.11ms]
error: Command failed: git -C /Users/edobry/.local/state/minsky/sessions/task#276 commit --amend -m "amended commit"
husky - DEPRECATED

Please remove the following two lines from .husky/pre-commit:

#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

They WILL FAIL in v10.0.0

üîç Checking for variable naming issues...
Checking 377 TypeScript files for variable naming issues...

‚úÖ No variable naming issues found!
‚úÖ No variable naming issues found.
üîç Running ESLint...

> lint
> eslint . --quiet


/Users/edobry/.local/state/minsky/sessions/task#276/virtual-session-approve-1753132670130.test.ts
   2:1  error  Expected indentation of 0 spaces but found 8   indent
   4:1  error  Expected indentation of 2 spaces but found 14  indent
   5:1  error  Expected indentation of 2 spaces but found 14  indent
   6:1  error  Expected indentation of 4 spaces but found 16  indent
   7:1  error  Expected indentation of 4 spaces but found 16  indent
   8:1  error  Expected indentation of 4 spaces but found 16  indent
   9:1  error  Expected indentation of 4 spaces but found 16  indent
  10:1  error  Expected indentation of 4 spaces but found 16  indent
  11:1  error  Expected indentation of 2 spaces but found 14  indent
  13:1  error  Expected indentation of 2 spaces but found 14  indent
  14:1  error  Expected indentation of 4 spaces but found 16  indent
  15:1  error  Expected indentation of 2 spaces but found 14  indent
  17:1  error  Expected indentation of 2 spaces but found 10  indent
  18:1  error  Expected indentation of 4 spaces but found 12  indent
  19:1  error  Expected indentation of 2 spaces but found 10  indent
  20:1  error  Expected indentation of 0 spaces but found 8   indent

/Users/edobry/.local/state/minsky/sessions/task#276/virtual-session-approve-1753133476940.test.ts
   2:1  error  Expected indentation of 0 spaces but found 8   indent
   4:1  error  Expected indentation of 2 spaces but found 14  indent
   5:1  error  Expected indentation of 2 spaces but found 14  indent
   6:1  error  Expected indentation of 4 spaces but found 16  indent
   7:1  error  Expected indentation of 4 spaces but found 16  indent
   8:1  error  Expected indentation of 4 spaces but found 16  indent
   9:1  error  Expected indentation of 4 spaces but found 16  indent
  10:1  error  Expected indentation of 4 spaces but found 16  indent
  11:1  error  Expected indentation of 2 spaces but found 14  indent
  13:1  error  Expected indentation of 2 spaces but found 14  indent
  14:1  error  Expected indentation of 4 spaces but found 16  indent
  15:1  error  Expected indentation of 2 spaces but found 14  indent
  17:1  error  Expected indentation of 2 spaces but found 10  indent
  18:1  error  Expected indentation of 4 spaces but found 12  indent
  19:1  error  Expected indentation of 2 spaces but found 10  indent
  20:1  error  Expected indentation of 0 spaces but found 8   indent

/Users/edobry/.local/state/minsky/sessions/task#276/virtual-syntax-test-1753132670137.test.ts
   2:1   error  Expected indentation of 0 spaces but found 8   indent
   3:1   error  Expected indentation of 2 spaces but found 10  indent
   4:1   error  Expected indentation of 2 spaces but found 10  indent
   5:1   error  Expected indentation of 2 spaces but found 12  indent
   6:1   error  Expected indentation of 0 spaces but found 8   indent
   8:1   error  Expected indentation of 0 spaces but found 8   indent
   9:1   error  Expected indentation of 2 spaces but found 10  indent
  10:1   error  Expected indentation of 4 spaces but found 12  indent
  10:26  error  Strings must use doublequote                   quotes
  11:1   error  Expected indentation of 2 spaces but found 10  indent
  12:1   error  Expected indentation of 0 spaces but found 8   indent

/Users/edobry/.local/state/minsky/sessions/task#276/virtual-syntax-test-1753133476948.test.ts
   2:1   error  Expected indentation of 0 spaces but found 8   indent
   3:1   error  Expected indentation of 2 spaces but found 10  indent
   4:1   error  Expected indentation of 2 spaces but found 10  indent
   5:1   error  Expected indentation of 2 spaces but found 12  indent
   6:1   error  Expected indentation of 0 spaces but found 8   indent
   8:1   error  Expected indentation of 0 spaces but found 8   indent
   9:1   error  Expected indentation of 2 spaces but found 10  indent
  10:1   error  Expected indentation of 4 spaces but found 12  indent
  10:26  error  Strings must use doublequote                   quotes
  11:1   error  Expected indentation of 2 spaces but found 10  indent
  12:1   error  Expected indentation of 0 spaces but found 8   indent

/Users/edobry/.local/state/minsky/sessions/task#276/virtual-test-2-1753132670121.test.ts
  2:1  error  Expected indentation of 0 spaces but found 8   indent
  3:1  error  Expected indentation of 2 spaces but found 10  indent
  4:1  error  Expected indentation of 2 spaces but found 10  indent
  5:1  error  Expected indentation of 2 spaces but found 10  indent
  6:1  error  Expected indentation of 2 spaces but found 10  indent
  7:1  error  Expected indentation of 2 spaces but found 12  indent
  8:1  error  Expected indentation of 0 spaces but found 8   indent

/Users/edobry/.local/state/minsky/sessions/task#276/virtual-test-2-1753133476932.test.ts
  2:1  error  Expected indentation of 0 spaces but found 8   indent
  3:1  error  Expected indentation of 2 spaces but found 10  indent
  4:1  error  Expected indentation of 2 spaces but found 10  indent
  5:1  error  Expected indentation of 2 spaces but found 10  indent
  6:1  error  Expected indentation of 2 spaces but found 10  indent
  7:1  error  Expected indentation of 2 spaces but found 12  indent
  8:1  error  Expected indentation of 0 spaces but found 8   indent

‚úñ 68 problems (68 errors, 0 warnings)
  68 errors and 0 warnings potentially fixable with the `--fix` option.

‚ùå Linting failed! Please fix the issues before committing.
husky - pre-commit script failed (code 1)

   code: 1,
 killed: false,
 signal: null,
    cmd: "git -C /Users/edobry/.local/state/minsky/sessions/task#276 commit --amend -m \"amended commit\"",
 stdout: "",
 stderr: "husky - DEPRECATED\n\nPlease remove the following two lines from .husky/pre-commit:\n\n#!/usr/bin/env sh\n. \"$(dirname -- \"$0\")/_/husky.sh\"\n\nThey WILL FAIL in v10.0.0\n\nüîç Checking for variable naming issues...\nChecking 377 TypeScript files for variable naming issues...\n\n‚úÖ No variable naming issues found!\n‚úÖ No variable naming issues found.\nüîç Running ESLint...\n\n> lint\n> eslint . --quiet\n\n\n/Users/edobry/.local/state/minsky/sessions/task#276/virtual-session-approve-1753132670130.test.ts\n   2:1  error  Expected indentation of 0 spaces but found 8   indent\n   4:1  error  Expected indentation of 2 spaces but found 14  indent\n   5:1  error  Expected indentation of 2 spaces but found 14  indent\n   6:1  error  Expected indentation of 4 spaces but found 16  indent\n   7:1  error  Expected indentation of 4 spaces but found 16  indent\n   8:1  error  Expected indentation of 4 spaces but found 16  indent\n   9:1  error  Expected indentation of 4 spaces but found 16  indent\n  10:1  error  Expected indentation of 4 spaces but found 16  indent\n  11:1  error  Expected indentation of 2 spaces but found 14  indent\n  13:1  error  Expected indentation of 2 spaces but found 14  indent\n  14:1  error  Expected indentation of 4 spaces but found 16  indent\n  15:1  error  Expected indentation of 2 spaces but found 14  indent\n  17:1  error  Expected indentation of 2 spaces but found 10  indent\n  18:1  error  Expected indentation of 4 spaces but found 12  indent\n  19:1  error  Expected indentation of 2 spaces but found 10  indent\n  20:1  error  Expected indentation of 0 spaces but found 8   indent\n\n/Users/edobry/.local/state/minsky/sessions/task#276/virtual-session-approve-1753133476940.test.ts\n   2:1  error  Expected indentation of 0 spaces but found 8   indent\n   4:1  error  Expected indentation of 2 spaces but found 14  indent\n   5:1  error  Expected indentation of 2 spaces but found 14  indent\n   6:1  error  Expected indentation of 4 spaces but found 16  indent\n   7:1  error  Expected indentation of 4 spaces but found 16  indent\n   8:1  error  Expected indentation of 4 spaces but found 16  indent\n   9:1  error  Expected indentation of 4 spaces but found 16  indent\n  10:1  error  Expected indentation of 4 spaces but found 16  indent\n  11:1  error  Expected indentation of 2 spaces but found 14  indent\n  13:1  error  Expected indentation of 2 spaces but found 14  indent\n  14:1  error  Expected indentation of 4 spaces but found 16  indent\n  15:1  error  Expected indentation of 2 spaces but found 14  indent\n  17:1  error  Expected indentation of 2 spaces but found 10  indent\n  18:1  error  Expected indentation of 4 spaces but found 12  indent\n  19:1  error  Expected indentation of 2 spaces but found 10  indent\n  20:1  error  Expected indentation of 0 spaces but found 8   indent\n\n/Users/edobry/.local/state/minsky/sessions/task#276/virtual-syntax-test-1753132670137.test.ts\n   2:1   error  Expected indentation of 0 spaces but found 8   indent\n   3:1   error  Expected indentation of 2 spaces but found 10  indent\n   4:1   error  Expected indentation of 2 spaces but found 10  indent\n   5:1   error  Expected indentation of 2 spaces but found 12  indent\n   6:1   error  Expected indentation of 0 spaces but found 8   indent\n   8:1   error  Expected indentation of 0 spaces but found 8   indent\n   9:1   error  Expected indentation of 2 spaces but found 10  indent\n  10:1   error  Expected indentation of 4 spaces but found 12  indent\n  10:26  error  Strings must use doublequote                   quotes\n  11:1   error  Expected indentation of 2 spaces but found 10  indent\n  12:1   error  Expected indentation of 0 spaces but found 8   indent\n\n/Users/edobry/.local/state/minsky/sessions/task#276/virtual-syntax-test-1753133476948.test.ts\n   2:1   error  Expected indentation of 0 spaces but found 8   indent\n   3:1   error  Expected indentation of 2 spaces but found 10  indent\n   4:1   error  Expected indentation of 2 spaces but found 10  indent\n   5:1   error  Expected indentation of 2 spaces but found 12  indent\n   6:1   error  Expected indentation of 0 spaces but found 8   indent\n   8:1   error  Expected indentation of 0 spaces but found 8   indent\n   9:1   error  Expected indentation of 2 spaces but found 10  indent\n  10:1   error  Expected indentation of 4 spaces but found 12  indent\n  10:26  error  Strings must use doublequote                   quotes\n  11:1   error  Expected indentation of 2 spaces but found 10  indent\n  12:1   error  Expected indentation of 0 spaces but found 8   indent\n\n/Users/edobry/.local/state/minsky/sessions/task#276/virtual-test-2-1753132670121.test.ts\n  2:1  error  Expected indentation of 0 spaces but found 8   indent\n  3:1  error  Expected indentation of 2 spaces but found 10  indent\n  4:1  error  Expected indentation of 2 spaces but found 10  indent\n  5:1  error  Expected indentation of 2 spaces but found 10  indent\n  6:1  error  Expected indentation of 2 spaces but found 10  indent\n  7:1  error  Expected indentation of 2 spaces but found 12  indent\n  8:1  error  Expected indentation of 0 spaces but found 8   indent\n\n/Users/edobry/.local/state/minsky/sessions/task#276/virtual-test-2-1753133476932.test.ts\n  2:1  error  Expected indentation of 0 spaces but found 8   indent\n  3:1  error  Expected indentation of 2 spaces but found 10  indent\n  4:1  error  Expected indentation of 2 spaces but found 10  indent\n  5:1  error  Expected indentation of 2 spaces but found 10  indent\n  6:1  error  Expected indentation of 2 spaces but found 10  indent\n  7:1  error  Expected indentation of 2 spaces but found 12  indent\n  8:1  error  Expected indentation of 0 spaces but found 8   indent\n\n‚úñ 68 problems (68 errors, 0 warnings)\n  68 errors and 0 warnings potentially fixable with the `--fix` option.\n\n‚ùå Linting failed! Please fix the issues before committing.\nhusky - pre-commit script failed (code 1)\n",

      at genericNodeError (node:child_process:946:22)
(fail) Parameter-Based Git Functions > commitChangesFromParams > should handle commit with amend option [3198.56ms]
error: Command failed: git -C /Users/edobry/.local/state/minsky/sessions/task#276 commit  -m "no stage commit"
husky - DEPRECATED

Please remove the following two lines from .husky/pre-commit:

#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

They WILL FAIL in v10.0.0

üîç Checking for variable naming issues...
Checking 377 TypeScript files for variable naming issues...

‚úÖ No variable naming issues found!
‚úÖ No variable naming issues found.
üîç Running ESLint...

> lint
> eslint . --quiet


/Users/edobry/.local/state/minsky/sessions/task#276/virtual-session-approve-1753132670130.test.ts
   2:1  error  Expected indentation of 0 spaces but found 8   indent
   4:1  error  Expected indentation of 2 spaces but found 14  indent
   5:1  error  Expected indentation of 2 spaces but found 14  indent
   6:1  error  Expected indentation of 4 spaces but found 16  indent
   7:1  error  Expected indentation of 4 spaces but found 16  indent
   8:1  error  Expected indentation of 4 spaces but found 16  indent
   9:1  error  Expected indentation of 4 spaces but found 16  indent
  10:1  error  Expected indentation of 4 spaces but found 16  indent
  11:1  error  Expected indentation of 2 spaces but found 14  indent
  13:1  error  Expected indentation of 2 spaces but found 14  indent
  14:1  error  Expected indentation of 4 spaces but found 16  indent
  15:1  error  Expected indentation of 2 spaces but found 14  indent
  17:1  error  Expected indentation of 2 spaces but found 10  indent
  18:1  error  Expected indentation of 4 spaces but found 12  indent
  19:1  error  Expected indentation of 2 spaces but found 10  indent
  20:1  error  Expected indentation of 0 spaces but found 8   indent

/Users/edobry/.local/state/minsky/sessions/task#276/virtual-session-approve-1753133476940.test.ts
   2:1  error  Expected indentation of 0 spaces but found 8   indent
   4:1  error  Expected indentation of 2 spaces but found 14  indent
   5:1  error  Expected indentation of 2 spaces but found 14  indent
   6:1  error  Expected indentation of 4 spaces but found 16  indent
   7:1  error  Expected indentation of 4 spaces but found 16  indent
   8:1  error  Expected indentation of 4 spaces but found 16  indent
   9:1  error  Expected indentation of 4 spaces but found 16  indent
  10:1  error  Expected indentation of 4 spaces but found 16  indent
  11:1  error  Expected indentation of 2 spaces but found 14  indent
  13:1  error  Expected indentation of 2 spaces but found 14  indent
  14:1  error  Expected indentation of 4 spaces but found 16  indent
  15:1  error  Expected indentation of 2 spaces but found 14  indent
  17:1  error  Expected indentation of 2 spaces but found 10  indent
  18:1  error  Expected indentation of 4 spaces but found 12  indent
  19:1  error  Expected indentation of 2 spaces but found 10  indent
  20:1  error  Expected indentation of 0 spaces but found 8   indent

/Users/edobry/.local/state/minsky/sessions/task#276/virtual-syntax-test-1753132670137.test.ts
   2:1   error  Expected indentation of 0 spaces but found 8   indent
   3:1   error  Expected indentation of 2 spaces but found 10  indent
   4:1   error  Expected indentation of 2 spaces but found 10  indent
   5:1   error  Expected indentation of 2 spaces but found 12  indent
   6:1   error  Expected indentation of 0 spaces but found 8   indent
   8:1   error  Expected indentation of 0 spaces but found 8   indent
   9:1   error  Expected indentation of 2 spaces but found 10  indent
  10:1   error  Expected indentation of 4 spaces but found 12  indent
  10:26  error  Strings must use doublequote                   quotes
  11:1   error  Expected indentation of 2 spaces but found 10  indent
  12:1   error  Expected indentation of 0 spaces but found 8   indent

/Users/edobry/.local/state/minsky/sessions/task#276/virtual-syntax-test-1753133476948.test.ts
   2:1   error  Expected indentation of 0 spaces but found 8   indent
   3:1   error  Expected indentation of 2 spaces but found 10  indent
   4:1   error  Expected indentation of 2 spaces but found 10  indent
   5:1   error  Expected indentation of 2 spaces but found 12  indent
   6:1   error  Expected indentation of 0 spaces but found 8   indent
   8:1   error  Expected indentation of 0 spaces but found 8   indent
   9:1   error  Expected indentation of 2 spaces but found 10  indent
  10:1   error  Expected indentation of 4 spaces but found 12  indent
  10:26  error  Strings must use doublequote                   quotes
  11:1   error  Expected indentation of 2 spaces but found 10  indent
  12:1   error  Expected indentation of 0 spaces but found 8   indent

/Users/edobry/.local/state/minsky/sessions/task#276/virtual-test-2-1753132670121.test.ts
  2:1  error  Expected indentation of 0 spaces but found 8   indent
  3:1  error  Expected indentation of 2 spaces but found 10  indent
  4:1  error  Expected indentation of 2 spaces but found 10  indent
  5:1  error  Expected indentation of 2 spaces but found 10  indent
  6:1  error  Expected indentation of 2 spaces but found 10  indent
  7:1  error  Expected indentation of 2 spaces but found 12  indent
  8:1  error  Expected indentation of 0 spaces but found 8   indent

/Users/edobry/.local/state/minsky/sessions/task#276/virtual-test-2-1753133476932.test.ts
  2:1  error  Expected indentation of 0 spaces but found 8   indent
  3:1  error  Expected indentation of 2 spaces but found 10  indent
  4:1  error  Expected indentation of 2 spaces but found 10  indent
  5:1  error  Expected indentation of 2 spaces but found 10  indent
  6:1  error  Expected indentation of 2 spaces but found 10  indent
  7:1  error  Expected indentation of 2 spaces but found 12  indent
  8:1  error  Expected indentation of 0 spaces but found 8   indent

‚úñ 68 problems (68 errors, 0 warnings)
  68 errors and 0 warnings potentially fixable with the `--fix` option.

‚ùå Linting failed! Please fix the issues before committing.
husky - pre-commit script failed (code 1)

   code: 1,
 killed: false,
 signal: null,
    cmd: "git -C /Users/edobry/.local/state/minsky/sessions/task#276 commit  -m \"no stage commit\"",
 stdout: "",
 stderr: "husky - DEPRECATED\n\nPlease remove the following two lines from .husky/pre-commit:\n\n#!/usr/bin/env sh\n. \"$(dirname -- \"$0\")/_/husky.sh\"\n\nThey WILL FAIL in v10.0.0\n\nüîç Checking for variable naming issues...\nChecking 377 TypeScript files for variable naming issues...\n\n‚úÖ No variable naming issues found!\n‚úÖ No variable naming issues found.\nüîç Running ESLint...\n\n> lint\n> eslint . --quiet\n\n\n/Users/edobry/.local/state/minsky/sessions/task#276/virtual-session-approve-1753132670130.test.ts\n   2:1  error  Expected indentation of 0 spaces but found 8   indent\n   4:1  error  Expected indentation of 2 spaces but found 14  indent\n   5:1  error  Expected indentation of 2 spaces but found 14  indent\n   6:1  error  Expected indentation of 4 spaces but found 16  indent\n   7:1  error  Expected indentation of 4 spaces but found 16  indent\n   8:1  error  Expected indentation of 4 spaces but found 16  indent\n   9:1  error  Expected indentation of 4 spaces but found 16  indent\n  10:1  error  Expected indentation of 4 spaces but found 16  indent\n  11:1  error  Expected indentation of 2 spaces but found 14  indent\n  13:1  error  Expected indentation of 2 spaces but found 14  indent\n  14:1  error  Expected indentation of 4 spaces but found 16  indent\n  15:1  error  Expected indentation of 2 spaces but found 14  indent\n  17:1  error  Expected indentation of 2 spaces but found 10  indent\n  18:1  error  Expected indentation of 4 spaces but found 12  indent\n  19:1  error  Expected indentation of 2 spaces but found 10  indent\n  20:1  error  Expected indentation of 0 spaces but found 8   indent\n\n/Users/edobry/.local/state/minsky/sessions/task#276/virtual-session-approve-1753133476940.test.ts\n   2:1  error  Expected indentation of 0 spaces but found 8   indent\n   4:1  error  Expected indentation of 2 spaces but found 14  indent\n   5:1  error  Expected indentation of 2 spaces but found 14  indent\n   6:1  error  Expected indentation of 4 spaces but found 16  indent\n   7:1  error  Expected indentation of 4 spaces but found 16  indent\n   8:1  error  Expected indentation of 4 spaces but found 16  indent\n   9:1  error  Expected indentation of 4 spaces but found 16  indent\n  10:1  error  Expected indentation of 4 spaces but found 16  indent\n  11:1  error  Expected indentation of 2 spaces but found 14  indent\n  13:1  error  Expected indentation of 2 spaces but found 14  indent\n  14:1  error  Expected indentation of 4 spaces but found 16  indent\n  15:1  error  Expected indentation of 2 spaces but found 14  indent\n  17:1  error  Expected indentation of 2 spaces but found 10  indent\n  18:1  error  Expected indentation of 4 spaces but found 12  indent\n  19:1  error  Expected indentation of 2 spaces but found 10  indent\n  20:1  error  Expected indentation of 0 spaces but found 8   indent\n\n/Users/edobry/.local/state/minsky/sessions/task#276/virtual-syntax-test-1753132670137.test.ts\n   2:1   error  Expected indentation of 0 spaces but found 8   indent\n   3:1   error  Expected indentation of 2 spaces but found 10  indent\n   4:1   error  Expected indentation of 2 spaces but found 10  indent\n   5:1   error  Expected indentation of 2 spaces but found 12  indent\n   6:1   error  Expected indentation of 0 spaces but found 8   indent\n   8:1   error  Expected indentation of 0 spaces but found 8   indent\n   9:1   error  Expected indentation of 2 spaces but found 10  indent\n  10:1   error  Expected indentation of 4 spaces but found 12  indent\n  10:26  error  Strings must use doublequote                   quotes\n  11:1   error  Expected indentation of 2 spaces but found 10  indent\n  12:1   error  Expected indentation of 0 spaces but found 8   indent\n\n/Users/edobry/.local/state/minsky/sessions/task#276/virtual-syntax-test-1753133476948.test.ts\n   2:1   error  Expected indentation of 0 spaces but found 8   indent\n   3:1   error  Expected indentation of 2 spaces but found 10  indent\n   4:1   error  Expected indentation of 2 spaces but found 10  indent\n   5:1   error  Expected indentation of 2 spaces but found 12  indent\n   6:1   error  Expected indentation of 0 spaces but found 8   indent\n   8:1   error  Expected indentation of 0 spaces but found 8   indent\n   9:1   error  Expected indentation of 2 spaces but found 10  indent\n  10:1   error  Expected indentation of 4 spaces but found 12  indent\n  10:26  error  Strings must use doublequote                   quotes\n  11:1   error  Expected indentation of 2 spaces but found 10  indent\n  12:1   error  Expected indentation of 0 spaces but found 8   indent\n\n/Users/edobry/.local/state/minsky/sessions/task#276/virtual-test-2-1753132670121.test.ts\n  2:1  error  Expected indentation of 0 spaces but found 8   indent\n  3:1  error  Expected indentation of 2 spaces but found 10  indent\n  4:1  error  Expected indentation of 2 spaces but found 10  indent\n  5:1  error  Expected indentation of 2 spaces but found 10  indent\n  6:1  error  Expected indentation of 2 spaces but found 10  indent\n  7:1  error  Expected indentation of 2 spaces but found 12  indent\n  8:1  error  Expected indentation of 0 spaces but found 8   indent\n\n/Users/edobry/.local/state/minsky/sessions/task#276/virtual-test-2-1753133476932.test.ts\n  2:1  error  Expected indentation of 0 spaces but found 8   indent\n  3:1  error  Expected indentation of 2 spaces but found 10  indent\n  4:1  error  Expected indentation of 2 spaces but found 10  indent\n  5:1  error  Expected indentation of 2 spaces but found 10  indent\n  6:1  error  Expected indentation of 2 spaces but found 10  indent\n  7:1  error  Expected indentation of 2 spaces but found 12  indent\n  8:1  error  Expected indentation of 0 spaces but found 8   indent\n\n‚úñ 68 problems (68 errors, 0 warnings)\n  68 errors and 0 warnings potentially fixable with the `--fix` option.\n\n‚ùå Linting failed! Please fix the issues before committing.\nhusky - pre-commit script failed (code 1)\n",

      at genericNodeError (node:child_process:946:22)
(fail) Parameter-Based Git Functions > commitChangesFromParams > should handle commit with noStage option [3177.74ms]
87 |     if (!result.success || !result.data) {
88 |       return null;
89 |     }
90 | 
91 |     return (
92 |       result.data!.sessions.find((session) => session.session === id) ||
                                 ^
TypeError: result.data.sessions.find is not a function. (In 'result.data.sessions.find((session) => session.session === id)', 'result.data.sessions.find' is undefined)
      at getEntity (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/storage/backends/json-file-storage.ts:92:29)
(fail) Parameter-Based Git Functions > pushFromParams > should push changes with all parameters [0.81ms]
(pass) Parameter-Based Git Functions > pushFromParams > should handle push with minimal parameters [61.16ms]
(pass) Parameter-Based Git Functions > pushFromParams > should handle push with force option [42.47ms]
65 | 
66 |   // 2. Validate remote exists
67 |   const { stdout: remotesOut } = await deps.execAsync(`git -C ${workdir} remote`);
68 |   const remotes = remotesOut.split("\n").map((r) => r.trim()).filter(Boolean);
69 |   if (!remotes.includes(remote)) {
70 |     throw new Error(`Remote '${remote}' does not exist in repository at ${workdir}`);
                   ^
error: Remote 'upstream' does not exist in repository at /Users/edobry/.local/state/minsky/sessions/task#276
      at pushImpl (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/git/push-operations.ts:70:15)
(fail) Parameter-Based Git Functions > pushFromParams > should handle push with custom remote [12.73ms]
error: Command failed: git -C /test/repo add -A
fatal: cannot change to '/test/repo': No such file or directory

   code: 128,
 killed: false,
 signal: null,
    cmd: "git -C /test/repo add -A",
 stdout: "",
 stderr: "fatal: cannot change to '/test/repo': No such file or directory\n",

      at genericNodeError (node:child_process:946:22)
(fail) commitChangesFromParams > should commit changes with message and all flag [5.48ms]
error: Command failed: git -C /test/repo add .
fatal: cannot change to '/test/repo': No such file or directory

   code: 128,
 killed: false,
 signal: null,
    cmd: "git -C /test/repo add .",
 stdout: "",
 stderr: "fatal: cannot change to '/test/repo': No such file or directory\n",

      at genericNodeError (node:child_process:946:22)
(fail) commitChangesFromParams > should commit changes with just message [8.43ms]
error: Command failed: git -C /custom/repo/path add .
fatal: cannot change to '/custom/repo/path': No such file or directory

   code: 128,
 killed: false,
 signal: null,
    cmd: "git -C /custom/repo/path add .",
 stdout: "",
 stderr: "fatal: cannot change to '/custom/repo/path': No such file or directory\n",

      at genericNodeError (node:child_process:946:22)
(fail) commitChangesFromParams > should handle commit with custom repo path [7.07ms]
1111 |     expect(result.commitHash).toBe("ghi789");
1112 |   });
1113 | 
1114 |   test("should handle commit errors gracefully", async () => {
1115 |     // Mock git commit command failure
1116 |     mockExecAsync.mockRejectedValueOnce(new Error("Git command failed"));
                                               ^
error: Git command failed
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/git.test.ts:1116:41)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/git.test.ts:1114:50)
(fail) commitChangesFromParams > should handle commit errors gracefully [0.61ms]

# Unhandled error between tests
-------------------------------
1119 |       message: "failing commit",
1120 |       repo: "/nonexistent/repo",
1121 |     };
1122 | 
1123 |     // Should not throw, should handle error gracefully
1124 |     await expect(commitChangesFromParams(params)).rejects.toThrow("Git command failed");
                                                                 ^
error: expect(received).toThrow(expected)

Expected substring: "Git command failed"
Received message: "Command failed: git -C /nonexistent/repo add .\nfatal: cannot change to '/nonexistent/repo': No such file or directory\n"

      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/git.test.ts:1124:59)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/git.test.ts:1114:50)
-------------------------------

error: Command failed: git -C /test/repo rev-parse --abbrev-ref HEAD
fatal: cannot change to '/test/repo': No such file or directory

   code: 128,
 killed: false,
 signal: null,
    cmd: "git -C /test/repo rev-parse --abbrev-ref HEAD",
 stdout: "",
 stderr: "fatal: cannot change to '/test/repo': No such file or directory\n",

      at genericNodeError (node:child_process:946:22)
(fail) pushFromParams > should push changes successfully [5.89ms]
error: Command failed: git -C /test/repo rev-parse --abbrev-ref HEAD
fatal: cannot change to '/test/repo': No such file or directory

   code: 128,
 killed: false,
 signal: null,
    cmd: "git -C /test/repo rev-parse --abbrev-ref HEAD",
 stdout: "",
 stderr: "fatal: cannot change to '/test/repo': No such file or directory\n",

      at genericNodeError (node:child_process:946:22)
(fail) pushFromParams > should handle push with custom remote [6.17ms]
error: Command failed: git -C /test/repo rev-parse --abbrev-ref HEAD
fatal: cannot change to '/test/repo': No such file or directory

   code: 128,
 killed: false,
 signal: null,
    cmd: "git -C /test/repo rev-parse --abbrev-ref HEAD",
 stdout: "",
 stderr: "fatal: cannot change to '/test/repo': No such file or directory\n",

      at genericNodeError (node:child_process:946:22)
(fail) pushFromParams > should handle push with branch specification [6.17ms]
1181 |     expect(result.pushed).toBe(true);
1182 |   });
1183 | 
1184 |   test("should handle push errors gracefully", async () => {
1185 |     // Mock git push command failure
1186 |     mockExecAsync.mockRejectedValueOnce(new Error("Git push failed"));
                                               ^
error: Git push failed
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/git.test.ts:1186:41)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/git.test.ts:1184:48)
(fail) pushFromParams > should handle push errors gracefully [0.21ms]

# Unhandled error between tests
-------------------------------
1188 |     const params = {
1189 |       repo: "/nonexistent/repo",
1190 |     };
1191 | 
1192 |     // Should not throw, should handle error gracefully
1193 |     await expect(pushFromParams(params)).rejects.toThrow("Git push failed");
                                                        ^
error: expect(received).toThrow(expected)

Expected substring: "Git push failed"
Received message: "Command failed: git -C /nonexistent/repo rev-parse --abbrev-ref HEAD\nfatal: cannot change to '/nonexistent/repo': No such file or directory\n"

      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/git.test.ts:1193:50)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/git.test.ts:1184:48)
-------------------------------


src/domain/session-pr-state-optimization.test.ts:
(pass) PR State Optimization (Task #275) > checkPrBranchExistsOptimized > should use cached PR state when available and not stale [0.22ms]
(pass) PR State Optimization (Task #275) > checkPrBranchExistsOptimized > should refresh stale PR state [0.14ms]
(pass) PR State Optimization (Task #275) > checkPrBranchExistsOptimized > should fall back to git operations when no session record exists [0.03ms]
(pass) PR State Optimization (Task #275) > checkPrBranchExistsOptimized > should provide significant performance improvement [0.09ms]
(pass) PR State Optimization (Task #275) > updatePrStateOnCreation > should create PR state when PR branch is created [0.09ms]
(pass) PR State Optimization (Task #275) > updatePrStateOnMerge > should update PR state when PR is merged [0.09ms]
(pass) PR State Optimization (Task #275) > updatePrStateOnMerge > should handle missing PR state gracefully [0.03ms]
(pass) PR State Optimization (Task #275) > Integration with existing workflow > should maintain backward compatibility [0.02ms]

src/domain/session-pr-branch-reference-bug.test.ts:
(pass) Session PR Branch Reference Bug Regression > should normalize branch references to prevent origin/origin/main [0.07ms]
(pass) Session PR Branch Reference Bug Regression > should detect origin/origin/main patterns in git commands [0.03ms]
(pass) Session PR Branch Reference Bug Regression > should validate git command construction prevents double-prefixing [0.04ms]
(pass) Session PR Branch Reference Bug Regression > should document the specific bug that was fixed [0.02ms]

src/domain/github-basic.test.ts:
(pass) GitHub Basic Functionality > initializes with correct repository URL [0.04ms]
(pass) GitHub Basic Functionality > properly uses provided owner and repo values [0.02ms]
(pass) GitHub Basic Functionality > correctly identifies backend type [0.01ms]

src/domain/git.pr.test.ts:
(pass) GitService PR Functionality > isGitHubRepo should identify GitHub URLs correctly [0.03ms]
(pass) GitService PR Functionality > should create a PR description [0.05ms]

src/domain/session-start-consistency.test.ts:
(pass) Session Start Consistency Tests > Successful session creation > should only add session to database after git operations succeed [0.29ms]
(pass) Session Start Consistency Tests > Git clone failure scenarios > should not add session to database when git clone fails [0.14ms]
(pass) Session Start Consistency Tests > Git clone failure scenarios > should not add session to database when git branch creation fails [0.06ms]
(pass) Session Start Consistency Tests > Git clone failure scenarios > should propagate git errors without modification [0.07ms]
216 |           gitService: mockGitService,
217 |           taskService: mockTaskService,
218 |           workspaceUtils: mockWorkspaceUtils,
219 |           resolveRepoPath: mockResolveRepoPath,
220 |         })
221 |       ).rejects.toThrow("Session 'task#160' already exists");
                      ^
error: expect(received).toThrow(expected)

Expected substring: "Session 'task#160' already exists"
Received message: "Session 'task160' already exists"

      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/session-start-consistency.test.ts:221:17)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/session-start-consistency.test.ts:192:71)
(fail) Session Start Consistency Tests > Error handling edge cases > should prevent session creation when session already exists [0.15ms]
254 |           gitService: mockGitService,
255 |           taskService: mockTaskService,
256 |           workspaceUtils: mockWorkspaceUtils,
257 |           resolveRepoPath: mockResolveRepoPath,
258 |         })
259 |       ).rejects.toThrow("A session for task #160 already exists");
                      ^
error: expect(received).toThrow(expected)

Expected substring: "A session for task #160 already exists"
Received message: "A session for task 160 already exists: 'different-session'"

      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/session-start-consistency.test.ts:259:17)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/session-start-consistency.test.ts:228:85)
(fail) Session Start Consistency Tests > Error handling edge cases > should prevent session creation when another session exists for same task [0.07ms]
(pass) Session Start Consistency Tests > Error handling edge cases > should prevent session creation when task does not exist [0.08ms]
(pass) Session Start Consistency Tests > Critical consistency verification > should never add session record before all git operations complete successfully [0.09ms]
351 | 
352 |       // Assert - verify session was properly added to database
353 |       expect(addSessionSpy).toHaveBeenCalledTimes(1);
354 | 
355 |       // Verify return value includes session information
356 |       expect(result).toMatchObject({
                           ^
error: expect(received).toMatchObject(expected)

  {
+   branch: "task160",
+   repoName: "local-minsky",
+   repoUrl: "local/minsky",
+   session: "task160",
+   taskId: "160",
-   session: "task#160",
-   taskId: "#160",
  }

- Expected  - 2
+ Received  + 5

      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/session-start-consistency.test.ts:356:22)
(fail) Session Start Consistency Tests > Critical consistency verification > should successfully add session record only after all operations complete [0.15ms]

src/domain/task-status-bug-regression.test.ts:
(pass) Task Status Bug Regression Tests > TASK_PARSING_UTILS.getCheckboxFromStatus > should return correct checkbox for TODO status
(pass) Task Status Bug Regression Tests > TASK_PARSING_UTILS.getCheckboxFromStatus > should return correct checkbox for IN-PROGRESS status [0.09ms]
(pass) Task Status Bug Regression Tests > TASK_PARSING_UTILS.getCheckboxFromStatus > should return correct checkbox for IN-REVIEW status
(pass) Task Status Bug Regression Tests > TASK_PARSING_UTILS.getCheckboxFromStatus > should return correct checkbox for DONE status
(pass) Task Status Bug Regression Tests > TASK_PARSING_UTILS.getCheckboxFromStatus > should return correct checkbox for BLOCKED status
(pass) Task Status Bug Regression Tests > TASK_PARSING_UTILS.getCheckboxFromStatus > should not throw 'status is not defined' error [0.04ms]
(pass) Task Status Bug Regression Tests > Integration test with task status functionality > should handle all status transitions without variable naming errors [0.01ms]

tests/consolidated-utilities/variable-naming-fixer.test.ts:
üè∑Ô∏è  Processing 1 TypeScript files for variable naming fixes...
‚úÖ Fixed 1 naming issues in /var/folders/qg/bbhkjbqd5mx5ff1qhw0sctfc0000gn/T/variable-naming-test-tlvWly/test.ts

üéØ Variable Naming Fix Results:
   Files processed: 1/1
   Total fixes applied: 1
   Success rate: 100.0%

üìä Fix type breakdown:
   underscore-prefix-mismatch: 1 fixes
(pass) Variable Naming Fixer Consolidated > Underscore Prefix Mismatches > should fix parameter definitions with underscores when usage has no underscore [4.35ms]
üè∑Ô∏è  Processing 1 TypeScript files for variable naming fixes...
‚úÖ Fixed 1 naming issues in /var/folders/qg/bbhkjbqd5mx5ff1qhw0sctfc0000gn/T/variable-naming-test-FbVwib/test.ts

üéØ Variable Naming Fix Results:
   Files processed: 1/1
   Total fixes applied: 1
   Success rate: 100.0%

üìä Fix type breakdown:
   underscore-prefix-mismatch: 1 fixes
(pass) Variable Naming Fixer Consolidated > Underscore Prefix Mismatches > should fix variable declarations with underscores when usage has no underscore [2.19ms]
üè∑Ô∏è  Processing 1 TypeScript files for variable naming fixes...
‚úÖ Fixed 2 naming issues in /var/folders/qg/bbhkjbqd5mx5ff1qhw0sctfc0000gn/T/variable-naming-test-IoHlDi/test.ts

üéØ Variable Naming Fix Results:
   Files processed: 1/1
   Total fixes applied: 2
   Success rate: 100.0%

üìä Fix type breakdown:
   underscore-prefix-mismatch: 2 fixes
(pass) Variable Naming Fixer Consolidated > Underscore Prefix Mismatches > should handle destructuring with underscore mismatches [3.50ms]
üè∑Ô∏è  Processing 1 TypeScript files for variable naming fixes...

üéØ Variable Naming Fix Results:
   Files processed: 0/1
   Total fixes applied: 0
   Success rate: 0.0%
(pass) Variable Naming Fixer Consolidated > Boundary Validation - Should NOT Change > should NOT change intentionally unused parameters with underscores [1.48ms]
üè∑Ô∏è  Processing 1 TypeScript files for variable naming fixes...

üéØ Variable Naming Fix Results:
   Files processed: 0/1
   Total fixes applied: 0
   Success rate: 0.0%
(pass) Variable Naming Fixer Consolidated > Boundary Validation - Should NOT Change > should NOT change variables that are used with underscores consistently [1.02ms]
üè∑Ô∏è  Processing 1 TypeScript files for variable naming fixes...

üéØ Variable Naming Fix Results:
   Files processed: 0/1
   Total fixes applied: 0
   Success rate: 0.0%
(pass) Variable Naming Fixer Consolidated > Boundary Validation - Should NOT Change > should NOT change underscore patterns in strings or comments [1.13ms]
üè∑Ô∏è  Processing 1 TypeScript files for variable naming fixes...
(pass) Variable Naming Fixer Consolidated > Boundary Validation - Should NOT Change > should handle scope correctly - same variable names in different scopes [1.38ms]
üè∑Ô∏è  Processing 1 TypeScript files for variable naming fixes...
(pass) Variable Naming Fixer Consolidated > Error Handling > should handle files with syntax errors gracefully [1.52ms]
Error saving /var/folders/qg/bbhkjbqd5mx5ff1qhw0sctfc0000gn/T/variable-naming-test-sI7MsS/test.ts: ENOENT: no such file or directory, open '/var/folders/qg/bbhkjbqd5mx5ff1qhw0sctfc0000gn/T/variable-naming-test-sI7MsS/test.ts'
    path: "/var/folders/qg/bbhkjbqd5mx5ff1qhw0sctfc0000gn/T/variable-naming-test-sI7MsS/test.ts",
 syscall: "open",
   errno: -2,
    code: "ENOENT"



üéØ Variable Naming Fix Results:
   Files processed: 0/1
   Total fixes applied: 0
   Success rate: 0.0%

üìä Fix type breakdown:
   underscore-prefix-mismatch: 1 fixes
üè∑Ô∏è  Processing 1 TypeScript files for variable naming fixes...

üéØ Variable Naming Fix Results:
   Files processed: 0/1
   Total fixes applied: 0
   Success rate: 0.0%
(pass) Variable Naming Fixer Consolidated > Error Handling > should handle non-existent patterns gracefully [0.93ms]
Error saving /var/folders/qg/bbhkjbqd5mx5ff1qhw0sctfc0000gn/T/variable-naming-test-0sxplG/broken.ts: ENOENT: no such file or directory, open '/var/folders/qg/bbhkjbqd5mx5ff1qhw0sctfc0000gn/T/variable-naming-test-0sxplG/broken.ts'
    path: "/var/folders/qg/bbhkjbqd5mx5ff1qhw0sctfc0000gn/T/variable-naming-test-0sxplG/broken.ts",
 syscall: "open",
   errno: -2,
    code: "ENOENT"



üéØ Variable Naming Fix Results:
   Files processed: 0/1
   Total fixes applied: 0
   Success rate: 0.0%

üìä Fix type breakdown:
   underscore-prefix-mismatch: 1 fixes
üè∑Ô∏è  Processing 1 TypeScript files for variable naming fixes...
‚úÖ Fixed 2 naming issues in /var/folders/qg/bbhkjbqd5mx5ff1qhw0sctfc0000gn/T/variable-naming-test-ga5uO6/mixed.ts

üéØ Variable Naming Fix Results:
   Files processed: 1/1
   Total fixes applied: 2
   Success rate: 100.0%

üìä Fix type breakdown:
   underscore-prefix-mismatch: 2 fixes
(pass) Variable Naming Fixer Consolidated > Complex Scenarios > should handle mixed scenarios correctly [6.02ms]
(pass) Variable Naming Fixer Consolidated > Performance and Metrics > should provide accurate metrics [2.36ms]
üè∑Ô∏è  Processing 1 TypeScript files for variable naming fixes...
‚úÖ Fixed 1 naming issues in /var/folders/qg/bbhkjbqd5mx5ff1qhw0sctfc0000gn/T/variable-naming-test-OAY0me/complex-syntax.ts

üéØ Variable Naming Fix Results:
   Files processed: 1/1
   Total fixes applied: 1
   Success rate: 100.0%

üìä Fix type breakdown:
   underscore-prefix-mismatch: 1 fixes
(pass) Variable Naming Fixer Consolidated > Integration with AST Analysis > should properly parse TypeScript files with complex syntax [2.49ms]

src/utils/test-utils/assertions.test.ts:
(pass) Custom Assertion Helpers > expectToMatch > should match a string against a regex pattern [0.13ms]
(pass) Custom Assertion Helpers > expectToHaveLength > should verify array length [0.02ms]
(pass) Custom Assertion Helpers > expectToHaveLength > should verify string length
(pass) Custom Assertion Helpers > expectToBeInstanceOf > should verify object instanceof [0.02ms]
(pass) Custom Assertion Helpers > expectToHaveProperty > should verify object has property [0.10ms]
(pass) Custom Assertion Helpers > expectToBeCloseTo > should compare floating point numbers with precision [0.03ms]
(pass) Custom Assertion Helpers > expectToContainEqual > should check if array contains an item with deep equality [0.06ms]

src/utils/test-utils/enhanced-utils.test.ts:
(pass) Enhanced Test Utilities > mockFunction > should create a type-safe mock function [0.06ms]
(pass) Enhanced Test Utilities > mockFunction > should allow changing implementation
(pass) Enhanced Test Utilities > createPartialMock > should create a mock with provided implementations [0.06ms]
(pass) Enhanced Test Utilities > mockReadonlyProperty > should mock readonly properties [0.04ms]
(pass) Enhanced Test Utilities > createTestDeps > should create default test dependencies [0.08ms]
(pass) Enhanced Test Utilities > createTestDeps > should allow overriding specific methods [0.04ms]
(pass) Enhanced Test Utilities > withMockedDeps > should temporarily override dependencies [0.11ms]
(pass) Enhanced Test Utilities > Factory Functions > should create task data with defaults [0.04ms]
(pass) Enhanced Test Utilities > Factory Functions > should create task data with overrides [0.01ms]
(pass) Enhanced Test Utilities > Factory Functions > should create an array of task data [0.04ms]
(pass) Enhanced Test Utilities > Factory Functions > should create session data [0.03ms]
(pass) Enhanced Test Utilities > Integration Example > should demonstrate a complex test scenario [0.04ms]

src/utils/test-utils/centralized-service-mocks.test.ts:
(pass) Centralized Service Mock Factories > createMockSessionProvider > should create a mock SessionProvider with all required methods
(pass) Centralized Service Mock Factories > createMockSessionProvider > should return default mock values [0.07ms]
(pass) Centralized Service Mock Factories > createMockSessionProvider > should allow method overrides [0.12ms]
(pass) Centralized Service Mock Factories > createMockGitService > should create a mock GitService with all required methods [0.05ms]
121 | 
122 |       const status = await mockGitService.getStatus();
123 |       expect(status).toEqual({ modified: [], untracked: [], deleted: [] });
124 | 
125 |       const currentBranch = await mockGitService.getCurrentBranch("/test");
126 |       expect(currentBranch).toBe("main");
                                  ^
error: expect(received).toBe(expected)

Expected: "main"
Received: undefined

      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/utils/test-utils/centralized-service-mocks.test.ts:126:29)
(fail) Centralized Service Mock Factories > createMockGitService > should return default mock values [0.16ms]
(pass) Centralized Service Mock Factories > createMockGitService > should allow method overrides [0.08ms]
(pass) Centralized Service Mock Factories > createMockTaskService > should create a mock TaskService with all required methods [0.04ms]
187 | 
188 |       const createdTaskFromTitle = await mockTaskService.createTaskFromTitleAndDescription("Test Title", "Test Description");
189 |       expect(createdTaskFromTitle.title).toBe("Test Task");
190 | 
191 |       const deleted = await mockTaskService.deleteTask("test");
192 |       expect(deleted).toBe(true);
                            ^
error: expect(received).toBe(expected)

Expected: true
Received: false

      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/utils/test-utils/centralized-service-mocks.test.ts:192:23)
(fail) Centralized Service Mock Factories > createMockTaskService > should return default mock values [0.12ms]
221 |       expect(tasks).toHaveLength(1);
222 |       expect(tasks[0].title).toBe("Custom Task");
223 |       expect(tasks[0].status).toBe("IN-PROGRESS");
224 | 
225 |       const task = await mockTaskService.getTask("test");
226 |       expect(task?.title).toBe("Custom Task");
                                ^
error: expect(received).toBe(expected)

Expected: "Custom Task"
Received: undefined

      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/utils/test-utils/centralized-service-mocks.test.ts:226:27)
(fail) Centralized Service Mock Factories > createMockTaskService > should allow method overrides [0.07ms]

src/utils/test-utils/compatibility.test.ts:

# Unhandled error between tests
-------------------------------
1 | (function (entry, fetcher)
              ^
SyntaxError: export 'compat' not found in './test-utils/index'
      at loadAndEvaluateModule (1:11)
-------------------------------


src/utils/test-utils/mocking.test.ts:
(pass) Mocking Utilities > createMock creates a proper mock function
(pass) Mocking Utilities > createMock without implementation returns a mock that returns undefined [0.06ms]
(pass) Mocking Utilities > createSpyOn spies on object methods [0.06ms]
(pass) Mocking Utilities > createSpyOn throws error when trying to spy on non-function property [0.04ms]

src/utils/test-utils/individual-service-factories.test.ts:
(pass) Individual Service Mock Factories > createMockSessionProvider > creates a mock with default behavior [0.10ms]
(pass) Individual Service Mock Factories > createMockSessionProvider > uses provided sessions array [0.07ms]
(pass) Individual Service Mock Factories > createMockSessionProvider > accepts method overrides [0.05ms]
(pass) Individual Service Mock Factories > createMockSessionProvider > supports empty options [0.02ms]
(pass) Individual Service Mock Factories > createMockGitService > creates a mock with default behavior [0.14ms]
(pass) Individual Service Mock Factories > createMockGitService > supports branch existence configuration [0.06ms]
(pass) Individual Service Mock Factories > createMockGitService > tracks git call count [0.05ms]
(pass) Individual Service Mock Factories > createMockGitService > accepts method overrides [0.06ms]
(pass) Individual Service Mock Factories > createMockGitService > handles non-PR git commands [0.03ms]
(pass) Individual Service Mock Factories > createMockTaskService > creates a mock with default behavior [0.04ms]
(pass) Individual Service Mock Factories > createMockTaskService > creates tasks with proper structure [0.03ms]
(pass) Individual Service Mock Factories > createMockTaskService > supports additional properties [0.03ms]
(pass) Individual Service Mock Factories > createMockTaskService > accepts method overrides [0.04ms]
(pass) Individual Service Mock Factories > createMockTaskService > supports custom task creation [0.03ms]
(pass) Individual Service Mock Factories > createMockTaskService > handles empty options [0.03ms]
(pass) Individual Service Mock Factories > Factory Integration > all factories work together in a test scenario [0.04ms]
(pass) Individual Service Mock Factories > Factory Integration > factories can be used independently [0.04ms]

src/utils/__tests__/auto-commit.test.ts:
(pass) autoCommitTaskChanges > should be a function [0.72ms]
(pass) autoCommitTaskChanges > should accept workspacePath and message parameters [0.02ms]
(pass) autoCommitTaskChanges > should return a Promise<boolean> [1.04ms]

src/adapters/__tests__/session-context-resolver.test.ts:
(pass) Interface-Layer Session Context Resolution > CLI Session Context Resolver > should use explicit name when provided
(pass) Interface-Layer Session Context Resolution > CLI Session Context Resolver > should auto-detect session from session workspace path [0.03ms]
(pass) Interface-Layer Session Context Resolution > CLI Session Context Resolver > should return params unchanged if no session can be detected [0.01ms]
(pass) Interface-Layer Session Context Resolution > CLI Session Context Resolver > should prefer explicit name over auto-detection
(pass) Interface-Layer Session Context Resolution > CLI Session Context Resolver > should use explicit task parameter for session identification
(pass) Interface-Layer Session Context Resolution > CLI Session Context Resolver > should prefer name over task when both are provided
(pass) Interface-Layer Session Context Resolution > MCP Session Context Resolver > should use explicit session when provided [0.02ms]
(pass) Interface-Layer Session Context Resolution > MCP Session Context Resolver > should throw ValidationError when no session provided [0.04ms]
(pass) Interface-Layer Session Context Resolution > MCP Session Context Resolver > should not auto-detect even in session workspace
(pass) Interface-Layer Session Context Resolution > MCP Session Context Resolver > should use explicit task parameter for session identification
(pass) Interface-Layer Session Context Resolution > MCP Session Context Resolver > should prefer name over task when both are provided
(pass) Interface-Layer Session Context Resolution > Session Context Resolver Factory > should return CLI resolver for 'cli' interface
(pass) Interface-Layer Session Context Resolution > Session Context Resolver Factory > should return MCP resolver for 'mcp' interface
(pass) Interface-Layer Session Context Resolution > Session Context Resolver Factory > should default to MCP resolver for unknown interfaces
(pass) Interface-Layer Session Context Resolution > Session Context Resolver Factory > should resolve session context based on interface type [0.03ms]
(pass) Interface-Layer Session Context Resolution > resolveSessionForInterface helper > should resolve CLI session context successfully [0.11ms]
(pass) Interface-Layer Session Context Resolution > resolveSessionForInterface helper > should resolve MCP session context with explicit session [0.03ms]
(pass) Interface-Layer Session Context Resolution > resolveSessionForInterface helper > should throw ValidationError when MCP has no session [0.05ms]
(pass) Interface-Layer Session Context Resolution > resolveSessionForInterface helper > should throw ValidationError when CLI can't detect session [0.03ms]

src/domain/configuration/index.test.ts:
(pass) Custom Configuration System > CustomConfigurationProvider > should implement getConfig() method [0.04ms]
(pass) Custom Configuration System > CustomConfigurationProvider > should implement get() method with path access
(pass) Custom Configuration System > CustomConfigurationProvider > should implement has() method for path checking
(pass) Custom Configuration System > CustomConfigurationProvider > should implement reload() method [0.33ms]
(pass) Custom Configuration System > CustomConfigurationProvider > should implement getMetadata() method [0.07ms]
(pass) Custom Configuration System > CustomConfigurationProvider > should implement validate() method
(pass) Custom Configuration System > CustomConfigurationProvider > should provide consistent configuration structure [0.03ms]
77 |       expect(config.ai).toBeDefined();
78 |     });
79 | 
80 |     test("should handle configuration overrides consistently", () => {
81 |       const config = provider.getConfig();
82 |       expect(config.backend).toBe("json-file"); // From overrides
                                  ^
error: expect(received).toBe(expected)

Expected: "json-file"
Received: "markdown"

      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/configuration/index.test.ts:82:30)
(fail) Custom Configuration System > CustomConfigurationProvider > should handle configuration overrides consistently [0.02ms]
(pass) Custom Configuration System > Configuration Initialization > should initialize with custom factory [0.21ms]
102 |       await initializeConfiguration(factory, {
103 |         overrides: { backend: "custom-override" }
104 |       });
105 | 
106 |       const config = getConfiguration();
107 |       expect(config.backend).toBe("custom-override");
                                   ^
error: expect(received).toBe(expected)

Expected: "custom-override"
Received: "markdown"

      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/configuration/index.test.ts:107:30)
(fail) Custom Configuration System > Configuration Initialization > should support configuration overrides [0.25ms]
Custom config load time: 0ms
(pass) Custom Configuration System > Performance > should load configuration within acceptable time limits [0.21ms]
Average access time: 0.001ms per operation
(pass) Custom Configuration System > Performance > should access configuration values efficiently [0.36ms]
(pass) Custom Configuration System > Error Handling > should handle missing configuration paths gracefully
(pass) Custom Configuration System > Error Handling > should validate configuration structure
(pass) Custom Configuration System > Configuration Factory > should create provider with default options [0.31ms]
171 |         overrides: { backend: "test-backend" },
172 |         enableCache: false
173 |       });
174 | 
175 |       const config = provider.getConfig();
176 |       expect(config.backend).toBe("test-backend");
                                   ^
error: expect(received).toBe(expected)

Expected: "test-backend"
Received: "markdown"

      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/configuration/index.test.ts:176:30)
(fail) Custom Configuration System > Configuration Factory > should create provider with custom options [0.18ms]

src/domain/tasks/task-service-interface.test.ts:
(pass) TaskService Interface Compatibility > should provide setTaskStatus method [1.50ms]
(pass) TaskService Interface Compatibility > should have getTaskStatus method (ensures interface completeness) [0.10ms]
(pass) TaskService Interface Compatibility > should validate task status in setTaskStatus method [0.31ms]
(pass) TaskService Interface Compatibility > should maintain interface compatibility with existing commands [0.14ms]

src/domain/tasks/utils.test.ts:
(pass) normalizeTaskId > should normalize "#064" to "#064" (with # and leading zero) [0.98ms]
(pass) normalizeTaskId > should normalize "#64" to "#64" (with #, no leading zero) [0.06ms]
(pass) normalizeTaskId > should normalize "064" to "#064" (no #, with leading zero)
(pass) normalizeTaskId > should normalize "64" to "#64" (no #, no leading zero)
(pass) normalizeTaskId > should normalize "task#064" to "#064" (with task# and leading zero)
(pass) normalizeTaskId > should normalize "task#64" to "#64" (with task#, no leading zero)
(pass) normalizeTaskId > should normalize "TASK#64" to "#64" (with TASK# (uppercase), no leading zero)
(pass) normalizeTaskId > should normalize "  #64  " to "#64" (with whitespace)
(pass) normalizeTaskId > should normalize "task#0" to "#0" (task ID zero)
(pass) normalizeTaskId > should normalize "0" to "#0" (task ID zero numeric)
(pass) normalizeTaskId > should return null for invalid input "abc" (non-numeric) [0.04ms]
(pass) normalizeTaskId > should return null for invalid input "#abc" (# with non-numeric)
(pass) normalizeTaskId > should return null for invalid input "task#abc" (task# with non-numeric)
(pass) normalizeTaskId > should return null for invalid input "64a" (numeric followed by alpha)
(pass) normalizeTaskId > should return null for invalid input "a64" (alpha followed by numeric)
(pass) normalizeTaskId > should return null for invalid input "#" (only #)
(pass) normalizeTaskId > should return null for invalid input "task#" (only task#)
(pass) normalizeTaskId > should return null for invalid input "" (empty string)
(pass) normalizeTaskId > should return null for invalid input "   " (whitespace only)
(pass) normalizeTaskId > should return null for invalid input "null" (null input)
(pass) normalizeTaskId > should return null for invalid input "undefined" (undefined input)
(pass) normalizeTaskId > should return null for invalid input "123" (number input type)

src/domain/tasks/taskService-jsonFile-integration.test.ts:
(pass) TaskService JsonFile Integration (Enhanced) > Basic Task Operations > should create and retrieve tasks [1.23ms]
(pass) TaskService JsonFile Integration (Enhanced) > Basic Task Operations > should handle multiple tasks [0.58ms]
(pass) TaskService JsonFile Integration (Enhanced) > Basic Task Operations > should update task status [0.29ms]
154 | 
155 |       const task = await taskServiceInstance.getTask(invalidId);
156 |       expect(task).toBe(null);
157 | 
158 |       const status = await taskServiceInstance.getTaskStatus(invalidId);
159 |       expect(status).toBeUndefined();
                           ^
error: expect(received).toBeUndefined()

Received: null

      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks/taskService-jsonFile-integration.test.ts:159:22)
(fail) TaskService JsonFile Integration (Enhanced) > Error Handling > should handle invalid task IDs gracefully [0.23ms]
(pass) TaskService JsonFile Integration (Enhanced) > Error Handling > should validate task status values [0.21ms]
(pass) TaskService JsonFile Integration (Enhanced) > Data Persistence > should persist changes across service instances [0.24ms]
(pass) TaskService JsonFile Integration (Enhanced) > Test Isolation Validation > should maintain proper test isolation
(pass) TaskService JsonFile Integration (Enhanced) > Test Isolation Validation > should cleanup properly after each test

src/domain/tasks/jsonFileTaskBackend.test.ts:
(pass) JsonFileTaskBackend > storage operations > should initialize storage correctly
(pass) JsonFileTaskBackend > storage operations > should store and retrieve tasks [0.41ms]
(pass) JsonFileTaskBackend > storage operations > should update tasks [0.37ms]
(pass) JsonFileTaskBackend > storage operations > should delete tasks [0.44ms]
(pass) JsonFileTaskBackend > TaskBackend interface compliance > should implement getTasksData [0.14ms]
(pass) JsonFileTaskBackend > TaskBackend interface compliance > should implement saveTasksData
(pass) JsonFileTaskBackend > TaskBackend interface compliance > should implement parseTasks [0.16ms]
(pass) JsonFileTaskBackend > TaskBackend interface compliance > should implement formatTasks [0.16ms]
(pass) JsonFileTaskBackend > TaskBackend interface compliance > should handle task spec operations [0.28ms]
(pass) JsonFileTaskBackend > markdown compatibility > should parse markdown task format [0.23ms]
(pass) JsonFileTaskBackend > helper methods > should generate correct task spec paths [0.04ms]
(pass) JsonFileTaskBackend > helper methods > should return correct workspace path

src/domain/tasks/special-workspace-integration.test.ts:
(pass) Enhanced Workspace Integration > Enhanced TaskService Integration > should create TaskService with workspace resolution [1.20ms]
287 |         error: getErrorMessage(error as any),
288 |         repoUrl: this!.repoUrl,
289 |         workspacePath: this!.workspacePath,
290 |       });
291 | 
292 |       throw new Error(`Failed to create special workspace: ${getErrorMessage(error as any)}`);
                  ^
error: Failed to create special workspace: Command failed: git clone --depth=1 --filter=blob:none --no-checkout "https://github.com/test/repo.git" "/Users/edobry/.local/state/minsky/task-operations"
fatal: destination path '/Users/edobry/.local/state/minsky/task-operations' already exists and is not an empty directory.

      at createOptimizedWorkspace (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/workspace/special-workspace-manager.ts:292:13)
(fail) Enhanced Workspace Integration > Enhanced TaskService Integration > should handle repository-based workspace creation [10.75ms]
(pass) Enhanced Workspace Integration > Enhanced TaskService Integration > should support traditional TaskService creation [0.09ms]
(pass) Enhanced Workspace Integration > Architectural Benefits > should validate elimination of complex routing patterns
(pass) Enhanced Workspace Integration > Architectural Benefits > should demonstrate simplified workspace resolution [0.10ms]

src/domain/tasks/task-id-utils.test.ts:
(pass) Task ID Utilities for Task 283 > normalizeTaskIdForStorage > should convert display format to storage format [0.03ms]
(pass) Task ID Utilities for Task 283 > normalizeTaskIdForStorage > should keep storage format as-is
(pass) Task ID Utilities for Task 283 > normalizeTaskIdForStorage > should handle task# prefix format [0.02ms]
(pass) Task ID Utilities for Task 283 > normalizeTaskIdForStorage > should strip multiple # prefixes [0.02ms]
(pass) Task ID Utilities for Task 283 > normalizeTaskIdForStorage > should handle whitespace [0.02ms]
(pass) Task ID Utilities for Task 283 > normalizeTaskIdForStorage > should return null for invalid input [0.03ms]
(pass) Task ID Utilities for Task 283 > normalizeTaskIdForStorage > should handle edge cases [0.02ms]
(pass) Task ID Utilities for Task 283 > formatTaskIdForDisplay > should add # prefix to storage format [0.03ms]
(pass) Task ID Utilities for Task 283 > formatTaskIdForDisplay > should keep display format as-is [0.01ms]
(pass) Task ID Utilities for Task 283 > formatTaskIdForDisplay > should handle invalid input
(pass) Task ID Utilities for Task 283 > formatTaskIdForDisplay > should handle edge cases
(pass) Task ID Utilities for Task 283 > isStorageFormat > should identify storage format correctly [0.02ms]
(pass) Task ID Utilities for Task 283 > isStorageFormat > should reject display format [0.02ms]
(pass) Task ID Utilities for Task 283 > isStorageFormat > should reject invalid formats [0.01ms]
(pass) Task ID Utilities for Task 283 > isStorageFormat > should handle whitespace [0.01ms]
(pass) Task ID Utilities for Task 283 > isDisplayFormat > should identify display format correctly [0.02ms]
(pass) Task ID Utilities for Task 283 > isDisplayFormat > should reject storage format
(pass) Task ID Utilities for Task 283 > isDisplayFormat > should reject invalid formats [0.01ms]
(pass) Task ID Utilities for Task 283 > isDisplayFormat > should handle whitespace [0.01ms]
(pass) Task ID Utilities for Task 283 > convertTaskIdFormat > should convert to storage format [0.04ms]
(pass) Task ID Utilities for Task 283 > convertTaskIdFormat > should convert to display format [0.01ms]
(pass) Task ID Utilities for Task 283 > convertTaskIdFormat > should return null for invalid input
(pass) Task ID Utilities for Task 283 > isValidTaskIdInput > should accept valid formats [0.02ms]
(pass) Task ID Utilities for Task 283 > isValidTaskIdInput > should reject invalid formats [0.01ms]
(pass) Task ID Utilities for Task 283 > getTaskIdNumber > should extract numbers from valid formats [0.04ms]
(pass) Task ID Utilities for Task 283 > getTaskIdNumber > should return null for invalid formats
(pass) Task ID Utilities for Task 283 > getTaskIdNumber > should handle leading zeros correctly [0.01ms]
(pass) Task ID Utilities for Task 283 > integration scenarios > should handle full workflow: input -> storage -> display [0.04ms]
(pass) Task ID Utilities for Task 283 > integration scenarios > should maintain data consistency [0.04ms]

src/domain/tasks/real-world-workflow.test.ts:
(pass) Real-World Workflow Testing > JSON Backend Real Storage > should actually create and store data in the correct location [0.25ms]
(pass) Real-World Workflow Testing > JSON Backend Real Storage > should default to process/tasks.json when no explicit path provided [0.10ms]
(pass) Real-World Workflow Testing > TaskService Integration > should work with JSON backend for complete task operations [0.23ms]
(pass) Real-World Workflow Testing > Error Handling > should handle missing process directory gracefully [0.06ms]

src/domain/tasks/taskService.test.ts:
(pass) TaskService > listTasks > should get tasks data and parse it [0.30ms]
(pass) TaskService > listTasks > should filter tasks by status if provided [0.06ms]
(pass) TaskService > listTasks > should return empty array if data retrieval fails [0.05ms]
(pass) TaskService > getTask > should find a task by ID [0.06ms]
(pass) TaskService > getTask > should find a task by ID without # prefix [0.06ms]
(pass) TaskService > getTask > should return null if task not found [0.03ms]
(pass) TaskService > getTaskStatus > should get a task's status [0.02ms]
(pass) TaskService > getTaskStatus > should return null if task not found [0.04ms]
(pass) TaskService > setTaskStatus > should update a task's status [0.06ms]
(pass) TaskService > setTaskStatus > should throw error for invalid status [0.04ms]
(pass) TaskService > setTaskStatus > should throw error if task not found [0.04ms]
(pass) TaskService > createTask > should create a new task from spec file [0.07ms]
(pass) TaskService > createTask > should throw error if spec file read fails [0.09ms]
267 |       const task = await taskService.createTaskFromTitleAndDescription(title, description);
268 | 
269 |       // This should pass now that the bug is fixed
270 |       // The specPath should be a proper relative path, not a temporary OS path
271 |       expect(task.specPath).not.toMatch(/\/tmp\//);
272 |       expect(task.specPath).not.toMatch(/\/var\/folders\//);
                                      ^
error: expect(received).not.toMatch(expected)

Expected substring or pattern: not /\/var\/folders\//
Received: "/var/folders/qg/bbhkjbqd5mx5ff1qhw0sctfc0000gn/T/temp-task-fix-session-pr-title-duplication-bug-1753133488286.md"

      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks/taskService.test.ts:272:33)
(fail) TaskService > createTaskFromTitleAndDescription > should store proper spec path instead of temporary path [0.39ms]
280 |    */
281 |   async createTask(specPath: string, options?: CreateTaskOptions): Promise<TaskData> {
282 |     // Read and parse the task specification
283 |     const specResult = await this.currentBackend.getTaskSpecData(specPath);
284 |     if (!specResult.success) {
285 |       throw new Error(`Failed to read spec file: ${specResult.error?.message}`);
                  ^
error: Failed to read spec file: ENOENT: no such file or directory, open '/var/folders/qg/bbhkjbqd5mx5ff1qhw0sctfc0000gn/T/temp-task-integration-test-task-1753133488287.md'
      at createTask (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks/taskService.ts:285:13)
(fail) TaskService > createTaskFromTitleAndDescription > integration: should create task with proper spec path using real backend [1.44ms]
(pass) TaskService > backend handling > should throw error for non-existent backend [0.08ms]
(pass) TaskService > backend handling > should use markdown backend by default [0.02ms]

src/domain/tasks/task-backend-router.test.ts:
error: Test "should resolve workspace for markdown backend without prototype pollution" timed out after 30001ms
(fail) Enhanced Workspace Resolution > resolveTaskWorkspacePath with Enhanced TaskService > should resolve workspace for markdown backend without prototype pollution [30001.05ms]
(pass) Enhanced Workspace Resolution > resolveTaskWorkspacePath with Enhanced TaskService > should resolve workspace for non-markdown backends [0.21ms]
error: Test "should handle repo URL parameter" timed out after 30001ms
(fail) Enhanced Workspace Resolution > resolveTaskWorkspacePath with Enhanced TaskService > should handle repo URL parameter [30001.13ms]
(pass) Enhanced Workspace Resolution > Architectural Improvement Validation > should validate that enhanced TaskService eliminates routing complexity [0.15ms]

src/domain/tasks/taskFunctions.test.ts:
(pass) Task Functions > normalizeTaskId > should return canonical form for valid IDs
(pass) Task Functions > normalizeTaskId > should handle various prefix patterns [0.82ms]
(pass) Task Functions > normalizeTaskId > should return undefined for non-numeric input [0.06ms]
(pass) Task Functions > normalizeTaskId > should extract numeric portion from mixed formats
(pass) Task Functions > normalizeTaskId > should handle alphanumeric task IDs [0.02ms]
(pass) Task Functions > parseTasksFromMarkdown > should return empty array for empty content [0.07ms]
(pass) Task Functions > parseTasksFromMarkdown > should parse tasks from markdown content [0.17ms]
(pass) Task Functions > parseTasksFromMarkdown > should ignore tasks in code blocks [0.16ms]
(pass) Task Functions > formatTasksToMarkdown > should return empty string for empty array [0.04ms]
(pass) Task Functions > formatTasksToMarkdown > should format tasks to markdown with one-liner format only [0.05ms]
(pass) Task Functions > formatTasksToMarkdown > should use task specPath if available [0.03ms]
(pass) Task Functions > getTaskById > should return null for empty input [0.06ms]
(pass) Task Functions > getTaskById > should find task by exact ID match [0.04ms]
(pass) Task Functions > getTaskById > should find task by ID without # prefix [0.02ms]
(pass) Task Functions > getTaskById > should handle numeric equivalence [0.04ms]
(pass) Task Functions > getNextTaskId > should return 001 for empty tasks array [0.02ms]
(pass) Task Functions > getNextTaskId > should find the maximum ID and increment it [0.06ms]
(pass) Task Functions > getNextTaskId > should handle non-sequential IDs [0.02ms]
(pass) Task Functions > getNextTaskId > should pad with zeros
(pass) Task Functions > setTaskStatus > should update a task's status [0.07ms]
(pass) Task Functions > setTaskStatus > should work with task ID variations [0.02ms]
(pass) Task Functions > setTaskStatus > should return original array if task not found [0.01ms]
(pass) Task Functions > setTaskStatus > should return original array if status is invalid [0.02ms]
(pass) Task Functions > addTask > should add a new task to the array [0.04ms]
(pass) Task Functions > addTask > should replace an existing task with the same ID [0.04ms]
(pass) Task Functions > addTask > should generate an ID if not provided [0.02ms]
(pass) Task Functions > filterTasks > should return all tasks if no filter provided [0.03ms]
(pass) Task Functions > filterTasks > should filter by status [0.06ms]
(pass) Task Functions > filterTasks > should filter by ID [0.04ms]
(pass) Task Functions > filterTasks > should filter by title (string match) [0.02ms]
(pass) Task Functions > filterTasks > should filter by title (regex match) [0.03ms]
(pass) Task Functions > filterTasks > should filter by specPath existence [0.02ms]
(pass) Task Functions > filterTasks > should combine multiple filter criteria [0.04ms]
(pass) Task Functions > parseTaskSpecFromMarkdown > should parse task spec from markdown [0.09ms]
(pass) Task Functions > parseTaskSpecFromMarkdown > should handle specs without task ID [0.06ms]
(pass) Task Functions > parseTaskSpecFromMarkdown > should handle general heading format [0.02ms]
(pass) Task Functions > parseTaskSpecFromMarkdown > should return empty values for invalid input [0.02ms]
(pass) Task Functions > formatTaskSpecToMarkdown > should format task spec to markdown with ID [0.01ms]
(pass) Task Functions > formatTaskSpecToMarkdown > should format task spec without ID [0.01ms]
(pass) Task Functions > isValidTaskStatus > should validate correct statuses [0.02ms]
(pass) Task Functions > isValidTaskStatus > should reject invalid statuses [0.02ms]

src/domain/tasks/configuration-integration.test.ts:
(pass) Configuration Integration > createConfiguredTaskService should use configuration to resolve backend [2.37ms]
(pass) Configuration Integration > createConfiguredTaskService should fall back to default when configuration fails [0.21ms]
(pass) Configuration Integration > createConfiguredTaskService should respect explicit backend parameter [0.71ms]

src/domain/tasks/githubIssuesTaskBackend.test.ts:
(pass) GitHubIssuesTaskBackend > configuration > should create instance with correct configuration
(pass) GitHubIssuesTaskBackend > configuration > should initialize with custom status labels [0.38ms]
(pass) GitHubIssuesTaskBackend > parseTasks > should parse GitHub issues into TaskData objects [0.64ms]
(pass) GitHubIssuesTaskBackend > parseTasks > should handle invalid JSON gracefully [0.07ms]
(pass) GitHubIssuesTaskBackend > formatTasks > should format TaskData objects for GitHub API [0.07ms]
(pass) GitHubIssuesTaskBackend > parseTaskSpec > should parse task specification content [0.10ms]
(pass) GitHubIssuesTaskBackend > formatTaskSpec > should format task specification data [0.03ms]
(pass) GitHubIssuesTaskBackend > getTaskSpecPath > should generate correct spec path [0.02ms]
(pass) GitHubIssuesTaskBackend > getTaskSpecPath > should handle task ID without # prefix
(pass) GitHubIssuesTaskBackend > getTaskSpecPath > should normalize title for filename

src/domain/tasks/taskConstants.test.ts:
(pass) Task Constants and Utilities > Basic Constants > should have all required task statuses [1.92ms]
(pass) Task Constants and Utilities > Basic Constants > should have bidirectional mapping between status and checkbox [0.16ms]
(pass) Task Constants and Utilities > Regex Patterns > should match valid task lines [0.09ms]
(pass) Task Constants and Utilities > Regex Patterns > should not match invalid task lines [0.02ms]
(pass) Task Constants and Utilities > Parsing Utilities > should parse valid task lines correctly [0.07ms]
(pass) Task Constants and Utilities > Parsing Utilities > should return null for invalid task lines [0.03ms]
(pass) Task Constants and Utilities > Parsing Utilities > should replace checkbox status correctly [0.05ms]
(pass) Task Constants and Utilities > Parsing Utilities > should get status from checkbox correctly [0.01ms]
(pass) Task Constants and Utilities > Parsing Utilities > should get checkbox from status correctly [0.01ms]
(pass) Task Constants and Utilities > Parsing Utilities > should validate task-like lines correctly [0.01ms]
(pass) Task Constants and Utilities > Status Validation > should validate valid statuses [0.04ms]
(pass) Task Constants and Utilities > Status Validation > should reject invalid statuses [0.01ms]
(pass) Task Constants and Utilities > Dynamic Pattern Generation > should generate patterns that include all status characters [0.01ms]
(pass) Task Constants and Utilities > Dynamic Pattern Generation > should handle new status additions gracefully [0.03ms]

src/domain/tasks/taskCommands.test.ts:
(pass) Interface-Agnostic Task Command Functions > getTaskStatusFromParams > should return BLOCKED status for task 155 with [~] checkbox [0.48ms]
(pass) Interface-Agnostic Task Command Functions > getTaskStatusFromParams > should return TODO status for task 156 with [ ] checkbox [0.15ms]
(pass) Interface-Agnostic Task Command Functions > getTaskStatusFromParams > should return IN_PROGRESS status for task 157 with [+] checkbox [0.09ms]
(pass) Interface-Agnostic Task Command Functions > getTaskStatusFromParams > should return DONE status for task 158 with [x] checkbox [0.15ms]
(pass) Interface-Agnostic Task Command Functions > getTaskStatusFromParams > should throw error when task not found [0.14ms]
(pass) Interface-Agnostic Task Command Functions > getTaskStatusFromParams > should handle task ID normalization [0.01ms]
(pass) Interface-Agnostic Task Command Functions > getTaskStatusFromParams > should handle custom repo path [0.04ms]
(pass) Interface-Agnostic Task Command Functions > getTaskFromParams > should get task by ID [0.01ms]
(pass) Interface-Agnostic Task Command Functions > getTaskFromParams > should throw error when task not found [0.01ms]
(pass) Interface-Agnostic Task Command Functions > getTaskFromParams > should handle task ID normalization [0.10ms]
(pass) Interface-Agnostic Task Command Functions > getTaskFromParams > should handle custom repo path [0.27ms]
(pass) Interface-Agnostic Task Command Functions > listTasksFromParams > should list all tasks when no filter is provided [0.17ms]
(pass) Interface-Agnostic Task Command Functions > listTasksFromParams > should filter tasks by status [0.12ms]
(pass) Interface-Agnostic Task Command Functions > listTasksFromParams > should filter out DONE tasks when all is false [0.17ms]
(pass) Interface-Agnostic Task Command Functions > setTaskStatusFromParams > should set task status [12.00ms]
(pass) Interface-Agnostic Task Command Functions > setTaskStatusFromParams > should throw error when task not found [0.29ms]
(pass) Interface-Agnostic Task Command Functions > setTaskStatusFromParams > should handle task ID normalization [8.22ms]
(pass) Interface-Agnostic Task Command Functions > Parameter Validation > should validate task ID format [0.33ms]
(pass) Interface-Agnostic Task Command Functions > Parameter Validation > should handle empty task ID [0.09ms]
(pass) Interface-Agnostic Task Command Functions > Parameter Validation > should handle backend parameter [0.41ms]

src/domain/workspace/session-path-resolver.test.ts:
(pass) SessionPathResolver > validateAndResolvePath > should resolve relative paths within session [0.05ms]
(pass) SessionPathResolver > validateAndResolvePath > should resolve current directory reference [0.02ms]
(pass) SessionPathResolver > validateAndResolvePath > should throw error for path traversal outside session [0.10ms]
(pass) SessionPathResolver > validateAndResolvePath > should throw error for absolute paths outside session [0.01ms]
(pass) SessionPathResolver > validateAndResolvePath > should handle complex path traversal attempts
(pass) SessionPathResolver > validateAndResolvePath > should allow absolute paths within session [0.01ms]
(pass) SessionPathResolver > isPathWithinSession > should return true for paths within session [0.02ms]
(pass) SessionPathResolver > isPathWithinSession > should return false for paths outside session
(pass) SessionPathResolver > isPathWithinSession > should return true for session root
(pass) SessionPathResolver > absoluteToRelative > should convert absolute path to relative [0.02ms]
(pass) SessionPathResolver > absoluteToRelative > should return null for paths outside session
(pass) SessionPathResolver > absoluteToRelative > should return '.' for session root
(pass) SessionPathResolver > getRelativePathFromSession > should get relative path from user input [0.02ms]
(pass) SessionPathResolver > getRelativePathFromSession > should normalize relative path from user input
(pass) SessionPathResolver > getRelativePathFromSession > should return '.' for session root reference
(pass) SessionPathResolver > validateMultiplePaths > should validate multiple valid paths [0.04ms]
(pass) SessionPathResolver > validateMultiplePaths > should throw error if any path is invalid [0.04ms]
(pass) SessionPathResolver > createSafePath > should create safe path from components [0.02ms]
(pass) SessionPathResolver > createSafePath > should throw error for unsafe path components [0.01ms]

src/domain/storage/database-integrity-checker.test.ts:
75 |   });
76 | 
77 |   describe("File Format Detection", () => {
78 |     test("should detect valid SQLite format", async () => {
79 |       // Create a valid SQLite file
80 |       const db = new Database(testDbPath);
                      ^
SQLiteError: unable to open database file
      errno: 14,
 byteOffset: -1,
       code: "SQLITE_CANTOPEN"

      at new Database (bun:sqlite:240:28)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/storage/database-integrity-checker.test.ts:80:18)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/storage/database-integrity-checker.test.ts:78:47)
(fail) DatabaseIntegrityChecker > File Format Detection > should detect valid SQLite format [1.74ms]
(pass) DatabaseIntegrityChecker > File Format Detection > should detect valid JSON format [0.31ms]
(pass) DatabaseIntegrityChecker > File Format Detection > should detect corrupted JSON format [0.65ms]
(pass) DatabaseIntegrityChecker > File Format Detection > should detect empty file [0.13ms]
(pass) DatabaseIntegrityChecker > File Format Detection > should detect missing file
(pass) DatabaseIntegrityChecker > Format Mismatch Detection > should detect JSON file when SQLite expected [0.14ms]
153 |       expect(migrationAction?.priority).toBe("high");
154 |     });
155 | 
156 |     test("should detect SQLite file when JSON expected", async () => {
157 |       const sqlitePath = join(testDirPath, "fake-json.json");
158 |       const db = new Database(sqlitePath);
                       ^
SQLiteError: unable to open database file
      errno: 14,
 byteOffset: -1,
       code: "SQLITE_CANTOPEN"

      at new Database (bun:sqlite:240:28)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/storage/database-integrity-checker.test.ts:158:18)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/storage/database-integrity-checker.test.ts:156:58)
(fail) DatabaseIntegrityChecker > Format Mismatch Detection > should detect SQLite file when JSON expected [1.09ms]
GET /repos/test-owner/test-repo/labels/minsky%3Atodo - 401 with id E739:2BFB50:21750A:437158:687EB1EC in 128ms
GET /repos/test-owner/test-repo/labels/minsky%3Atodo - 401 with id E730:2BFB50:217519:43717B:687EB1EC in 125ms
GET /repos/test-owner/test-repo/labels/minsky%3Atodo - 401 with id E738:336FC:2018A1:40C1EA:687EB1EC in 128ms
(pass) DatabaseIntegrityChecker > Backup File Detection > should find backup files with standard patterns [0.41ms]
GET /repos/test-owner/test-repo/labels/minsky%3Atodo - 401 with id E72F:2B8159:229866:45B78B:687EB1EC in 128ms
GET /repos/test-owner/test-repo/labels/custom%3Atodo - 401 with id E737:4FB52:1FC9A2:3FFAF1:687EB1EC in 131ms
GET /repos/test-owner/test-repo/labels/minsky%3Atodo - 401 with id E731:48CFB:1C9686:39B1F8:687EB1EC in 130ms
GET /repos/test-owner/test-repo/labels/minsky%3Atodo - 401 with id E732:48F63:242D88:48B63A:687EB1EC in 132ms
GET /repos/test-owner/test-repo/labels/minsky%3Atodo - 401 with id E735:336FC:2018A4:40C1EF:687EB1EC in 135ms
GET /repos/test-owner/test-repo/labels/minsky%3Atodo - 401 with id E733:48F63:242D8C:48B641:687EB1EC in 135ms
GET /repos/test-owner/test-repo/labels/minsky%3Atodo - 401 with id E736:371CFF:1EA85D:3DED14:687EB1EC in 139ms
(pass) DatabaseIntegrityChecker > Backup File Detection > should detect session count in JSON backups [0.24ms]
GET /repos/test-owner/test-repo/labels/minsky%3Atodo - 401 with id E734:1425A:1D2035:3ABB68:687EB1EC in 141ms
213 |   });
214 | 
215 |   describe("SQLite Integrity Validation", () => {
216 |     test("should validate SQLite database integrity", async () => {
217 |       // Create valid SQLite database
218 |       const db = new Database(testDbPath);
                       ^
SQLiteError: unable to open database file
      errno: 14,
 byteOffset: -1,
       code: "SQLITE_CANTOPEN"

      at new Database (bun:sqlite:240:28)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/storage/database-integrity-checker.test.ts:218:18)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/storage/database-integrity-checker.test.ts:216:55)
(fail) DatabaseIntegrityChecker > SQLite Integrity Validation > should validate SQLite database integrity [0.23ms]
241 |       expect(result.issues).toHaveLength(0);
242 |     });
243 | 
244 |     test("should detect SQLite database without sessions table", async () => {
245 |       // Create SQLite database without sessions table
246 |       const db = new Database(testDbPath);
                       ^
SQLiteError: unable to open database file
      errno: 14,
 byteOffset: -1,
       code: "SQLITE_CANTOPEN"

      at new Database (bun:sqlite:240:28)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/storage/database-integrity-checker.test.ts:246:18)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/storage/database-integrity-checker.test.ts:244:66)
(fail) DatabaseIntegrityChecker > SQLite Integrity Validation > should detect SQLite database without sessions table [0.65ms]
GET /repos/test-owner/test-repo/labels/minsky%3Ain-progress - 401 with id E730:2BFB50:21754B:4371CD:687EB1EC in 37ms
GET /repos/test-owner/test-repo/labels/minsky%3Ain-progress - 401 with id E738:336FC:2018D3:40C242:687EB1EC in 43ms
255 |       );
256 |     });
257 | 
258 |     test("should detect empty SQLite database", async () => {
259 |       // Create empty SQLite database
260 |       const db = new Database(testDbPath);
                       ^
SQLiteError: unable to open database file
      errno: 14,
 byteOffset: -1,
       code: "SQLITE_CANTOPEN"

      at new Database (bun:sqlite:240:28)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/storage/database-integrity-checker.test.ts:260:18)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/storage/database-integrity-checker.test.ts:258:49)
(fail) DatabaseIntegrityChecker > SQLite Integrity Validation > should detect empty SQLite database [0.32ms]
GET /repos/test-owner/test-repo/labels/minsky%3Ain-progress - 401 with id E732:48F63:242DB6:48B6A5:687EB1EC in 41ms
GET /repos/test-owner/test-repo/labels/minsky%3Ain-progress - 401 with id E72F:2B8159:229889:45B7F5:687EB1EC in 45ms
GET /repos/test-owner/test-repo/labels/minsky%3Ain-progress - 401 with id E733:48F63:242DB9:48B6AF:687EB1EC in 38ms
GET /repos/test-owner/test-repo/labels/minsky%3Ain-progress - 401 with id E731:48CFB:1C96B1:39B246:687EB1EC in 45ms
GET /repos/test-owner/test-repo/labels/minsky%3Ain-progress - 401 with id E736:371CFF:1EA893:3DED91:687EB1EC in 45ms
(pass) DatabaseIntegrityChecker > JSON Validation > should validate JSON structure [0.17ms]
GET /repos/test-owner/test-repo/labels/minsky%3Ain-progress - 401 with id E739:2BFB50:217546:4371C2:687EB1EC in 59ms
GET /repos/test-owner/test-repo/labels/minsky%3Ain-progress - 401 with id E734:1425A:1D206C:3ABBCC:687EB1EC in 51ms
(pass) DatabaseIntegrityChecker > JSON Validation > should detect JSON without sessions array [0.20ms]
GET /repos/test-owner/test-repo/labels/custom%3Ain-progress - 401 with id E737:4FB52:1FC9CF:3FFB48:687EB1EC in 64ms
(pass) DatabaseIntegrityChecker > JSON Validation > should detect empty JSON sessions array [0.39ms]
GET /repos/test-owner/test-repo/labels/minsky%3Ain-review - 401 with id E730:2BFB50:217578:437228:687EB1EC in 43ms
GET /repos/test-owner/test-repo/labels/minsky%3Ain-review - 401 with id E738:336FC:2018FE:40C2CF:687EB1EC in 43ms
GET /repos/test-owner/test-repo/labels/minsky%3Ain-progress - 401 with id E735:336FC:2018DA:40C256:687EB1EC in 78ms
(pass) DatabaseIntegrityChecker > Suggested Actions > should suggest repair for corrupted database [0.30ms]
GET /repos/test-owner/test-repo/labels/minsky%3Ain-review - 401 with id E72F:2B8159:2298B3:45B852:687EB1EC in 41ms
GET /repos/test-owner/test-repo/labels/minsky%3Ain-review - 401 with id E731:48CFB:1C96DE:39B28E:687EB1EC in 39ms
GET /repos/test-owner/test-repo/labels/minsky%3Ain-review - 401 with id E736:371CFF:1EA8C0:3DEDEE:687EB1EC in 38ms
(pass) DatabaseIntegrityChecker > Suggested Actions > should suggest initialization for missing database [0.18ms]
GET /repos/test-owner/test-repo/labels/minsky%3Ain-review - 401 with id E732:48F63:242DEC:48B700:687EB1EC in 56ms
GET /repos/test-owner/test-repo/labels/minsky%3Ain-review - 401 with id E739:2BFB50:21758A:43724E:687EB1EC in 46ms
GET /repos/test-owner/test-repo/labels/minsky%3Ain-review - 401 with id E733:48F63:242DED:48B704:687EB1EC in 56ms
GET /repos/test-owner/test-repo/labels/minsky%3Ain-review - 401 with id E734:1425A:1D20A5:3ABC72:687EB1EC in 43ms
(pass) DatabaseIntegrityChecker > Suggested Actions > should prioritize high-priority actions [0.18ms]
GET /repos/test-owner/test-repo/labels/minsky%3Adone - 401 with id E730:2BFB50:2175A0:437277:687EB1EC in 38ms
GET /repos/test-owner/test-repo/labels/custom%3Ain-review - 401 with id E737:4FB52:1FCA0E:3FFBCC:687EB1EC in 53ms
(pass) DatabaseIntegrityChecker > Integrity Report Formatting > should format comprehensive integrity report [2.56ms]
GET /repos/test-owner/test-repo/labels/minsky%3Adone - 401 with id E738:336FC:20192E:40C31B:687EB1EC in 38ms
GET /repos/test-owner/test-repo/labels/minsky%3Adone - 401 with id E731:48CFB:1C96F9:39B2F1:687EB1EC in 39ms
GET /repos/test-owner/test-repo/labels/minsky%3Adone - 401 with id E72F:2B8159:2298EB:45B8AD:687EB1EC in 45ms
366 |       expect(report).toContain("BACKUP FILES FOUND:");
367 |       expect(report).toContain("SUGGESTED ACTIONS:");
368 |     });
369 | 
370 |     test("should format report for valid database", async () => {
371 |       const db = new Database(testDbPath);
                       ^
SQLiteError: unable to open database file
      errno: 14,
 byteOffset: -1,
       code: "SQLITE_CANTOPEN"

      at new Database (bun:sqlite:240:28)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/storage/database-integrity-checker.test.ts:371:18)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/storage/database-integrity-checker.test.ts:370:53)
(fail) DatabaseIntegrityChecker > Integrity Report Formatting > should format report for valid database [0.47ms]
GET /repos/test-owner/test-repo/labels/minsky%3Ain-review - 401 with id E735:336FC:20192E:40C319:687EB1EC in 48ms
GET /repos/test-owner/test-repo/labels/minsky%3Adone - 401 with id E732:48F63:242E28:48B775:687EB1EC in 39ms
GET /repos/test-owner/test-repo/labels/minsky%3Adone - 401 with id E733:48F63:242E2A:48B77D:687EB1EC in 39ms
GET /repos/test-owner/test-repo/labels/minsky%3Adone - 401 with id E736:371CFF:1EA8F1:3DEE3F:687EB1EC in 48ms
(pass) DatabaseIntegrityChecker > Error Handling > should handle permission errors gracefully [0.13ms]
GET /repos/test-owner/test-repo/labels/minsky%3Adone - 401 with id E739:2BFB50:2175BC:4372AC:687EB1EC in 42ms
GET /repos/test-owner/test-repo/labels/minsky%3Adone - 401 with id E734:1425A:1D20D2:3ABCC9:687EB1EC in 39ms
(pass) DatabaseIntegrityChecker > Error Handling > should handle invalid file paths gracefully
GET /repos/test-owner/test-repo/labels/minsky%3Ablocked - 401 with id E730:2BFB50:2175CE:4372C1:687EB1EC in 45ms
GET /repos/test-owner/test-repo/labels/minsky%3Ablocked - 401 with id E738:336FC:20194F:40C364:687EB1EC in 38ms
(pass) DatabaseIntegrityChecker > Edge Cases > should handle extremely large backup directories [0.82ms]
GET /repos/test-owner/test-repo/labels/minsky%3Ablocked - 401 with id E72F:2B8159:22991F:45B908:687EB1EC in 38ms
GET /repos/test-owner/test-repo/labels/minsky%3Adone - 401 with id E735:336FC:20195D:40C37B:687EB1EC in 38ms
GET /repos/test-owner/test-repo/labels/minsky%3Ablocked - 401 with id E731:48CFB:1C971E:39B344:687EB1EC in 46ms
(pass) DatabaseIntegrityChecker > Edge Cases > should handle backup files with different extensions [0.07ms]
GET /repos/test-owner/test-repo/labels/custom%3Adone - 401 with id E737:4FB52:1FCA4D:3FFC39:687EB1EC in 62ms
GET /repos/test-owner/test-repo/labels/minsky%3Ablocked - 401 with id E736:371CFF:1EA91F:3DEE92:687EB1EC in 43ms
GET /repos/test-owner/test-repo/labels/minsky%3Ablocked - 401 with id E732:48F63:242E5C:48B7CC:687EB1EC in 43ms
GET /repos/test-owner/test-repo/labels/minsky%3Ablocked - 401 with id E734:1425A:1D20F5:3ABD0C:687EB1EC in 39ms

src/domain/storage/json-file-storage.test.ts:
(pass) JsonFileStorage Core Tests > Core CRUD Operations > should create and retrieve entities [0.15ms]
GET /repos/test-owner/test-repo/labels/minsky%3Ablocked - 401 with id E733:48F63:242E5C:48B7D1:687EB1EC in 51ms
GET /repos/test-owner/test-repo/labels/minsky%3Ablocked - 401 with id E739:2BFB50:2175E7:4372F9:687EB1EC in 48ms
(pass) JsonFileStorage Core Tests > Core CRUD Operations > should update entities [0.19ms]
GET /repos/test-owner/test-repo/labels/minsky%3Aclosed - 401 with id E730:2BFB50:2175F6:437315:687EB1EC in 39ms
GET /repos/test-owner/test-repo/labels/minsky%3Aclosed - 401 with id E738:336FC:20197F:40C3B5:687EB1EC in 38ms
GET /repos/test-owner/test-repo/labels/minsky%3Ablocked - 401 with id E735:336FC:20198B:40C3D3:687EB1EC in 40ms
(pass) JsonFileStorage Core Tests > Core CRUD Operations > should delete entities [0.15ms]
GET /repos/test-owner/test-repo/labels/minsky%3Aclosed - 401 with id E731:48CFB:1C974C:39B37E:687EB1EC in 40ms
GET /repos/test-owner/test-repo/labels/minsky%3Aclosed - 401 with id E72F:2B8159:229944:45B95D:687EB1EC in 48ms
(pass) JsonFileStorage Core Tests > Core CRUD Operations > should get all entities [0.22ms]
GET /repos/test-owner/test-repo/labels/custom%3Ablocked - 401 with id E737:4FB52:1FCA83:3FFCA9:687EB1EC in 41ms
GET /repos/test-owner/test-repo/labels/minsky%3Aclosed - 401 with id E734:1425A:1D211F:3ABD64:687EB1EC in 38ms
GET /repos/test-owner/test-repo/labels/minsky%3Aclosed - 401 with id E732:48F63:242E8A:48B83A:687EB1EC in 41ms
GET /repos/test-owner/test-repo/labels/minsky%3Aclosed - 401 with id E736:371CFF:1EA953:3DEEFC:687EB1EC in 44ms
GET /repos/test-owner/test-repo/labels/minsky%3Aclosed - 401 with id E733:48F63:242E92:48B846:687EB1EC in 39ms
(pass) JsonFileStorage Core Tests > State Management > should read and write state
GET /repos/test-owner/test-repo/labels/minsky%3Aclosed - 401 with id E739:2BFB50:217611:437361:687EB1EC in 48ms
(pass) JsonFileStorage Core Tests > Error Handling > should handle non-existent entities gracefully [0.14ms]
GET /repos/test-owner/test-repo/labels/minsky%3Aclosed - 401 with id E730:2BFB50:21761B:437392:687EB1EC in 36ms
(pass) JsonFileStorage Core Tests > Persistence > should persist data across storage instances [0.17ms]
(pass) JsonFileStorage Core Tests > Persistence > should handle storage location correctly [0.04ms]
GET /repos/test-owner/test-repo/labels/custom%3Aclosed - 401 with id E731:48CFB:1C9779:39B3D7:687EB1EC in 49ms

src/domain/__tests__/git-pr-workflow.test.ts:
(pass) PR Workflow with Dependencies > should generate PR markdown with proper dependency injection [1.65ms]
(pass) PR Workflow with Dependencies > should handle missing session in PR workflow
(pass) PR Workflow with Dependencies > should resolve taskId to session in PR workflow [0.01ms]
(pass) PR Workflow with Dependencies > should throw error when taskId has no associated session [0.03ms]
(pass) PR Workflow with Dependencies > should throw error when getSessionByTaskId dependency is not available [0.02ms]
(pass) PR Workflow with Dependencies > should prioritize session over taskId when both are provided [0.16ms]
(pass) PR Workflow with Dependencies > should handle git command failures gracefully in PR workflow [0.12ms]

src/domain/__tests__/git-service.test.ts:
(pass) GitService > should be able to create an instance
(pass) GitService > should get repository status [0.06ms]
(pass) GitService > getSessionWorkdir should return the correct path
(pass) GitService > execInRepository should execute git commands in the specified repository [0.03ms]
(pass) GitService > execInRepository should propagate errors [0.03ms]
(pass) GitService > should use session-ID-based storage in getSessionWorkdir

src/domain/__tests__/tasks.test.ts:
71 |       };
72 | 
73 |       const result = await listTasksFromParams(params, mockDeps);
74 | 
75 |       expect(result).toEqual([mockTask]);
76 |       expect(mockResolveMainWorkspacePath.mock.calls.length > 0).toBe(true);
                                                                      ^
error: expect(received).toBe(expected)

Expected: true
Received: false

      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/__tests__/tasks.test.ts:76:66)
(fail) interface-agnostic task functions > listTasksFromParams > should list tasks with valid parameters [0.47ms]
(pass) interface-agnostic task functions > listTasksFromParams > should filter out DONE tasks when all is false [0.11ms]
172 |     }
173 | 
174 |     return task;
175 |   } catch (error) {
176 |     if (error instanceof z.ZodError) {
177 |       throw new ValidationError("Invalid parameters for getting task", (error as any).format(), error as any);
                  ^
ValidationError: Invalid parameters for getting task
 errors: {
  _errors: [],
  taskId: [Object ...],
},

      at getTaskFromParams (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks/taskCommands.ts:177:13)
      at getTaskFromParams (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks/taskCommands.ts:116:3)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/__tests__/tasks.test.ts:108:28)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/__tests__/tasks.test.ts:102:53)

24 | export class ZodError extends Error {
25 |     get errors() {
26 |         return this.issues;
27 |     }
28 |     constructor(issues) {
29 |         super();
             ^
ZodError: [
  {
    "code": "custom",
    "message": "Task ID must be a valid number (with or without # prefix, e.g., '283', '#283', 'task#283')",
    "path": [
      "taskId"
    ]
  }
]
    issues: [
  [Object ...]
],
  addIssue: [Function],
 addIssues: [Function],

      at new ZodError (/Users/edobry/.local/state/minsky/sessions/task#276/node_modules/zod/dist/esm/v3/ZodError.js:29:9)
      at error (/Users/edobry/.local/state/minsky/sessions/task#276/node_modules/zod/dist/esm/v3/types.js:51:31)
      at parse (/Users/edobry/.local/state/minsky/sessions/task#276/node_modules/zod/dist/esm/v3/types.js:126:15)
      at getTaskFromParams (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks/taskCommands.ts:143:45)
      at getTaskFromParams (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks/taskCommands.ts:116:3)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/__tests__/tasks.test.ts:108:28)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/__tests__/tasks.test.ts:102:53)
(fail) interface-agnostic task functions > getTaskFromParams > should get a task with valid parameters [1.26ms]
(pass) interface-agnostic task functions > getTaskFromParams > should throw ResourceNotFoundError when task is not found [0.11ms]
172 |     }
173 | 
174 |     return task;
175 |   } catch (error) {
176 |     if (error instanceof z.ZodError) {
177 |       throw new ValidationError("Invalid parameters for getting task", (error as any).format(), error as any);
                  ^
ValidationError: Invalid parameters for getting task
 errors: {
  _errors: [],
  taskId: [Object ...],
},

      at getTaskFromParams (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks/taskCommands.ts:177:13)
      at getTaskFromParams (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks/taskCommands.ts:116:3)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/__tests__/tasks.test.ts:134:28)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/__tests__/tasks.test.ts:128:91)

24 | export class ZodError extends Error {
25 |     get errors() {
26 |         return this.issues;
27 |     }
28 |     constructor(issues) {
29 |         super();
             ^
ZodError: [
  {
    "code": "custom",
    "message": "Task ID must be a valid number (with or without # prefix, e.g., '283', '#283', 'task#283')",
    "path": [
      "taskId"
    ]
  }
]
    issues: [
  [Object ...]
],
  addIssue: [Function],
 addIssues: [Function],

      at new ZodError (/Users/edobry/.local/state/minsky/sessions/task#276/node_modules/zod/dist/esm/v3/ZodError.js:29:9)
      at error (/Users/edobry/.local/state/minsky/sessions/task#276/node_modules/zod/dist/esm/v3/types.js:51:31)
      at parse (/Users/edobry/.local/state/minsky/sessions/task#276/node_modules/zod/dist/esm/v3/types.js:126:15)
      at getTaskFromParams (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks/taskCommands.ts:143:45)
      at getTaskFromParams (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks/taskCommands.ts:116:3)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/__tests__/tasks.test.ts:134:28)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/__tests__/tasks.test.ts:128:91)
(fail) interface-agnostic task functions > getTaskFromParams > should normalize non-canonical task IDs (e.g., 'TEST_VALUE' -> '#TEST_VALUE') [0.12ms]
154 |       };
155 | 
156 |       const result = await getTaskFromParams(params, mockDeps);
157 | 
158 |       expect(result).toEqual({ ...mockTask, id: "#023" });
159 |       expect(mockTaskService.getTask).toHaveBeenCalledWith("#23");
                                            ^
error: expect(received).toHaveBeenCalledWith(expected)

Number of calls: 2

      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/__tests__/tasks.test.ts:159:39)
(fail) interface-agnostic task functions > getTaskFromParams > should handle task IDs without leading zeros [0.05ms]
246 |     }
247 | 
248 |     return task.status;
249 |   } catch (error) {
250 |     if (error instanceof z.ZodError) {
251 |       throw new ValidationError(
                  ^
ValidationError: Invalid parameters for getting task status
 errors: {
  _errors: [],
  taskId: [Object ...],
},

      at getTaskStatusFromParams (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks/taskCommands.ts:251:13)
      at getTaskStatusFromParams (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks/taskCommands.ts:190:3)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/__tests__/tasks.test.ts:170:28)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/__tests__/tasks.test.ts:164:58)

24 | export class ZodError extends Error {
25 |     get errors() {
26 |         return this.issues;
27 |     }
28 |     constructor(issues) {
29 |         super();
             ^
ZodError: [
  {
    "code": "custom",
    "message": "Task ID must be a valid number (with or without # prefix, e.g., '283', '#283', 'task#283')",
    "path": [
      "taskId"
    ]
  }
]
    issues: [
  [Object ...]
],
  addIssue: [Function],
 addIssues: [Function],

      at new ZodError (/Users/edobry/.local/state/minsky/sessions/task#276/node_modules/zod/dist/esm/v3/ZodError.js:29:9)
      at error (/Users/edobry/.local/state/minsky/sessions/task#276/node_modules/zod/dist/esm/v3/types.js:51:31)
      at parse (/Users/edobry/.local/state/minsky/sessions/task#276/node_modules/zod/dist/esm/v3/types.js:126:15)
      at getTaskStatusFromParams (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks/taskCommands.ts:217:51)
      at getTaskStatusFromParams (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks/taskCommands.ts:190:3)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/__tests__/tasks.test.ts:170:28)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/__tests__/tasks.test.ts:164:58)
(fail) interface-agnostic task functions > getTaskStatusFromParams > should get task status with valid parameters [0.11ms]
(pass) interface-agnostic task functions > getTaskStatusFromParams > should throw ResourceNotFoundError when task status is not found [0.09ms]
330 |       const commitMessage = `chore(${validParams.taskId}): update task status ${oldStatus} ‚Üí ${validParams.status}`;
331 |       await autoCommitTaskChanges(workspacePath, commitMessage);
332 |     }
333 |   } catch (error) {
334 |     if (error instanceof z.ZodError) {
335 |       throw new ValidationError(
                  ^
ValidationError: Invalid parameters for setting task status
 errors: {
  _errors: [],
  taskId: [Object ...],
},

      at setTaskStatusFromParams (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks/taskCommands.ts:335:13)
      at setTaskStatusFromParams (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks/taskCommands.ts:267:3)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/__tests__/tasks.test.ts:202:13)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/__tests__/tasks.test.ts:192:58)

24 | export class ZodError extends Error {
25 |     get errors() {
26 |         return this.issues;
27 |     }
28 |     constructor(issues) {
29 |         super();
             ^
ZodError: [
  {
    "code": "custom",
    "message": "Task ID must be a valid number (with or without # prefix, e.g., '283', '#283', 'task#283')",
    "path": [
      "taskId"
    ]
  }
]
    issues: [
  [Object ...]
],
  addIssue: [Function],
 addIssues: [Function],

      at new ZodError (/Users/edobry/.local/state/minsky/sessions/task#276/node_modules/zod/dist/esm/v3/ZodError.js:29:9)
      at error (/Users/edobry/.local/state/minsky/sessions/task#276/node_modules/zod/dist/esm/v3/types.js:51:31)
      at parse (/Users/edobry/.local/state/minsky/sessions/task#276/node_modules/zod/dist/esm/v3/types.js:126:15)
      at setTaskStatusFromParams (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks/taskCommands.ts:294:51)
      at setTaskStatusFromParams (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks/taskCommands.ts:267:3)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/__tests__/tasks.test.ts:202:13)
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/__tests__/tasks.test.ts:192:58)
(fail) interface-agnostic task functions > setTaskStatusFromParams > should set task status with valid parameters [0.09ms]
(pass) interface-agnostic task functions > setTaskStatusFromParams > should throw ValidationError when status is invalid [0.05ms]

src/domain/git/clone-operations.test.ts:
(pass) Clone Operations > should handle clone operations with filesystem validation [9.58ms]
(pass) Clone Operations > should handle clone with empty repository URL validation [0.09ms]
(pass) Clone Operations > should handle clone with existing non-empty directory [8.19ms]
(pass) Clone Operations > should handle clone failure during git command execution [7.90ms]
(pass) Clone Operations > should handle clone success verification failure [9.04ms]
(pass) Clone Operations > should handle clone with local repository normalization [6.89ms]
(pass) Clone Operations > should handle clone error scenarios with proper error propagation [8.07ms]

src/domain/git/repository-operations.test.ts:
(pass) Repository Operations with Dependency Injection > should have commitWithDependencies method available
(pass) Repository Operations with Dependency Injection > should have stashChangesWithDependencies method available
(pass) Repository Operations with Dependency Injection > should have popStashWithDependencies method available [0.01ms]
(pass) Repository Operations with Dependency Injection > should have mergeBranchWithDependencies method available
(pass) Repository Operations with Dependency Injection > should have stageAllWithDependencies method available [0.02ms]
(pass) Repository Operations with Dependency Injection > should have stageModifiedWithDependencies method available
(pass) Repository Operations with Dependency Injection > should have pullLatestWithDependencies method available
49 |     expect(gitService.pullLatestWithDependencies).toBeDefined();
50 |     expect(typeof gitService.pullLatestWithDependencies).toBe("function");
51 |   });
52 | 
53 |   test("should have cloneWithDependencies method available", () => {
54 |     expect(gitService.cloneWithDependencies).toBeDefined();
                                                  ^
error: expect(received).toBeDefined()

Received: undefined

      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/git/repository-operations.test.ts:54:46)
(fail) Repository Operations with Dependency Injection > should have cloneWithDependencies method available [0.07ms]
(pass) Repository Operations with Dependency Injection > should create GitService with base directory [0.01ms]

src/domain/git/conflict-detection.test.ts:
(pass) ConflictDetectionService > analyzeBranchDivergence > should detect when session is ahead of base
(pass) ConflictDetectionService > analyzeBranchDivergence > should detect when session changes are already in base [0.07ms]
(pass) ConflictDetectionService > analyzeBranchDivergence > should detect when session is behind base [0.04ms]
(pass) ConflictDetectionService > analyzeBranchDivergence > should detect when branches have diverged [0.04ms]
(pass) ConflictDetectionService > predictConflicts > should return no conflicts when already merged [0.06ms]
(pass) ConflictDetectionService > predictConflicts > should detect delete/modify conflicts [0.88ms]
(pass) ConflictDetectionService > predictConflicts > should detect content conflicts [0.20ms]
(pass) ConflictDetectionService > predictConflicts > should return no conflicts when merge succeeds [0.11ms]
(pass) ConflictDetectionService > mergeWithConflictPrevention > should perform dry run without actual merge [0.38ms]
(pass) ConflictDetectionService > mergeWithConflictPrevention > should perform actual merge when no conflicts predicted [0.08ms]
(pass) ConflictDetectionService > mergeWithConflictPrevention > should auto-resolve delete conflicts when enabled [0.07ms]
(pass) ConflictDetectionService > smartSessionUpdate > should compare against origin/baseBranch instead of local baseBranch [0.07ms]
(pass) ConflictDetectionService > smartSessionUpdate > should skip update when session changes already in base [0.06ms]
(pass) ConflictDetectionService > smartSessionUpdate > should perform fast-forward when session is behind [0.04ms]
(pass) ConflictDetectionService > smartSessionUpdate > should skip when session is ahead and no update needed [0.03ms]
(pass) ConflictDetectionService > error handling > should handle git command failures gracefully [0.03ms]
(pass) ConflictDetectionService > error handling > should handle merge simulation cleanup failures gracefully [0.05ms]

src/domain/git/git-service-core.test.ts:
(pass) GitService > should be able to create an instance
(pass) GitService > should get repository status [0.07ms]
(pass) GitService > execInRepository should execute git commands in the specified repository [0.04ms]
(pass) GitService > execInRepository should propagate errors [0.09ms]

src/domain/git/parameter-based-functions.test.ts:
(pass) Parameter-Based Git Functions > commitChangesFromParams > should commit changes with all parameters [0.09ms]
(pass) Parameter-Based Git Functions > commitChangesFromParams > should handle commit with minimal parameters [0.06ms]
(pass) Parameter-Based Git Functions > commitChangesFromParams > should handle commit with amend option [0.03ms]
(pass) Parameter-Based Git Functions > commitChangesFromParams > should handle commit with noStage option
(pass) Parameter-Based Git Functions > pushFromParams > should push changes with all parameters [0.04ms]
(pass) Parameter-Based Git Functions > pushFromParams > should handle push with minimal parameters [0.02ms]
(pass) Parameter-Based Git Functions > pushFromParams > should handle push with force option [0.02ms]
(pass) Parameter-Based Git Functions > pushFromParams > should handle push with custom remote [0.02ms]
(pass) commitChangesFromParams - Detailed Tests > should commit changes with message and all flag [0.12ms]
(pass) commitChangesFromParams - Detailed Tests > should commit changes with just message [0.03ms]
(pass) commitChangesFromParams - Detailed Tests > should handle commit with custom repo path [0.02ms]
(pass) commitChangesFromParams - Detailed Tests > should handle commit errors gracefully [0.02ms]
(pass) pushFromParams - Detailed Tests > should push changes successfully [0.02ms]
(pass) pushFromParams - Detailed Tests > should handle push with custom remote
(pass) pushFromParams - Detailed Tests > should handle push with branch specification [0.02ms]
(pass) pushFromParams - Detailed Tests > should handle push errors gracefully [0.02ms]

src/domain/git/push-operations.test.ts:
(pass) pushImpl > should be defined
(pass) pushImpl > should require dependencies [0.15ms]

src/domain/git/pr-workflow.test.ts:
(pass) PR Workflow Operations > should have prWithDependencies method available [0.60ms]
(pass) PR Workflow Operations > should have GitService constructor available [0.08ms]
(pass) PR Workflow Operations > should create GitService with base directory [0.01ms]

src/domain/git/commit-operations.test.ts:
(pass) commitChangesFromParams > should be defined
(pass) commitChangesFromParams > should be a function [0.03ms]

src/domain/git/architecture-analysis.test.ts:
(pass) GitService - Core Methods with Dependency Injection > Architecture Analysis - Testing Limitations > should demonstrate the core testing challenge [0.66ms]

src/domain/git/session-workdir.test.ts:
(pass) GitService - Session Workdir Tests > getSessionWorkdir should return the correct path [0.03ms]
(pass) GitService - Session Workdir Tests > should use session-ID-based storage in getSessionWorkdir [0.03ms]

src/domain/git/factory-function.test.ts:
(pass) createGitService Factory Function > should handle undefined options parameter without throwing runtime error [0.02ms]
(pass) createGitService Factory Function > should handle null options parameter without throwing runtime error [0.02ms]
(pass) createGitService Factory Function > should handle options with undefined baseDir property [0.58ms]
(pass) createGitService Factory Function > should create GitService with custom baseDir when provided [0.19ms]
(pass) createGitService Factory Function > should create GitService with default baseDir when no options provided [0.02ms]

src/domain/git/conflict-detection.integration.test.ts:
(pass) ConflictDetectionService Integration > should handle basic service instantiation and static methods [0.02ms]
(pass) ConflictDetectionService Integration > should have correct enum values defined [0.03ms]
(pass) ConflictDetectionService Integration > should provide proper interface structure for ConflictPrediction [0.04ms]
(pass) ConflictDetectionService Integration > should provide proper interface structure for BranchDivergenceAnalysis [0.03ms]
(pass) ConflictDetectionService Integration > should provide proper interface structure for enhanced results [0.03ms]
(skip) ConflictDetectionService Integration > should detect conflicts in real git repository

src/domain/session/session-approve-bugfix-regression.test.ts:
(pass) Session Approve - Bug Regression Tests > Bug #1: Untracked Files Auto-Stash > should stash untracked files that would be overwritten by merge [0.35ms]
(pass) Session Approve - Bug Regression Tests > Bug #1: Untracked Files Auto-Stash > should include -u flag in git stash command for untracked files [0.11ms]
(pass) Session Approve - Bug Regression Tests > Bug #2: Fail-Fast on Merge Errors > should fail fast when fast-forward merge is not possible [0.21ms]
(pass) Session Approve - Bug Regression Tests > Bug #2: Fail-Fast on Merge Errors > should continue processing when PR is genuinely already merged [0.14ms]
(pass) Session Approve - Bug Regression Tests > Bug #2: Fail-Fast on Merge Errors > should restore stash even when merge fails [0.65ms]

src/domain/session/session-context-resolver.test.ts:
(pass) resolveSessionContext > explicit session resolution > resolves existing session by name
(pass) resolveSessionContext > explicit session resolution > throws error for non-existent session [0.23ms]
(pass) resolveSessionContext > task ID resolution > resolves session by task ID [0.05ms]
(pass) resolveSessionContext > task ID resolution > throws error for non-existent task [0.04ms]
(pass) resolveSessionContext > no session provided > throws error when no session detected and auto-detection disabled [0.02ms]
(pass) resolveSessionContext > precedence > explicit session takes precedence over task [0.02ms]
(pass) resolveSessionName > returns just the session name [0.04ms]
(pass) validateSessionContext > returns true for valid session [0.05ms]
(pass) validateSessionContext > returns false for invalid session [0.04ms]

src/domain/session/session-path-resolver.test.ts:
Skipping SessionPathResolver tests due to temp directory creation failure
Skipping test due to temp directory creation failure
(pass) SessionPathResolver Domain Logic > validateAndResolvePath > should validate and resolve relative paths correctly [0.05ms]
Skipping SessionPathResolver tests due to temp directory creation failure
Skipping test due to temp directory creation failure
(pass) SessionPathResolver Domain Logic > validateAndResolvePath > should validate and resolve dot paths correctly [0.02ms]
Skipping SessionPathResolver tests due to temp directory creation failure
Skipping test due to temp directory creation failure
(pass) SessionPathResolver Domain Logic > validateAndResolvePath > should validate and resolve root path correctly [0.06ms]
Skipping SessionPathResolver tests due to temp directory creation failure
Skipping test due to temp directory creation failure
(pass) SessionPathResolver Domain Logic > validateAndResolvePath > should block path traversal attempts [0.05ms]
Skipping SessionPathResolver tests due to temp directory creation failure
Skipping test due to temp directory creation failure
(pass) SessionPathResolver Domain Logic > validateAndResolvePath > should block multiple path traversal attempts [0.05ms]
Skipping SessionPathResolver tests due to temp directory creation failure
Skipping test due to temp directory creation failure
(pass) SessionPathResolver Domain Logic > validateAndResolvePath > should handle absolute paths within session workspace
Skipping SessionPathResolver tests due to temp directory creation failure
Skipping test due to temp directory creation failure
(pass) SessionPathResolver Domain Logic > validateAndResolvePath > should block absolute paths outside session workspace [0.02ms]
Skipping SessionPathResolver tests due to temp directory creation failure
Skipping test due to temp directory creation failure
(pass) SessionPathResolver Domain Logic > getRelativePathFromSession > should return relative path from session root [0.02ms]
Skipping SessionPathResolver tests due to temp directory creation failure
Skipping test due to temp directory creation failure
(pass) SessionPathResolver Domain Logic > getRelativePathFromSession > should return dot for session root [0.01ms]
Skipping SessionPathResolver tests due to temp directory creation failure
Skipping test due to temp directory creation failure
(pass) SessionPathResolver Domain Logic > getRelativePathFromSession > should handle nested paths
Skipping SessionPathResolver tests due to temp directory creation failure
Skipping test due to temp directory creation failure
(pass) SessionPathResolver Domain Logic > createSafePath > should create safe path from components
Skipping SessionPathResolver tests due to temp directory creation failure
Skipping test due to temp directory creation failure
(pass) SessionPathResolver Domain Logic > createSafePath > should prevent unsafe path creation [0.04ms]
Skipping SessionPathResolver tests due to temp directory creation failure
Skipping test due to temp directory creation failure
(pass) SessionPathResolver Domain Logic > validateMultiplePaths > should validate multiple valid paths [0.02ms]
Skipping SessionPathResolver tests due to temp directory creation failure
Skipping test due to temp directory creation failure
(pass) SessionPathResolver Domain Logic > validateMultiplePaths > should throw error when any path is invalid [0.02ms]
Skipping SessionPathResolver tests due to temp directory creation failure
Skipping test due to temp directory creation failure
(pass) SessionPathResolver Domain Logic > normalizeRelativePath > should normalize relative path correctly [0.04ms]
Skipping SessionPathResolver tests due to temp directory creation failure
Skipping test due to temp directory creation failure
(pass) SessionPathResolver Domain Logic > normalizeRelativePath > should prevent directory traversal in relative paths
Skipping SessionPathResolver tests due to temp directory creation failure
Skipping test due to temp directory creation failure
(pass) SessionPathResolver Domain Logic > absoluteToRelative > should convert absolute path to relative [0.01ms]
Skipping SessionPathResolver tests due to temp directory creation failure
Skipping test due to temp directory creation failure
(pass) SessionPathResolver Domain Logic > absoluteToRelative > should return null for paths outside session [0.04ms]
Skipping SessionPathResolver tests due to temp directory creation failure
Skipping test due to temp directory creation failure
(pass) SessionPathResolver Domain Logic > absoluteToRelative > should return dot for session root [0.02ms]

src/domain/session/session-adapter.test.ts:
(pass) SessionAdapter > should initialize with empty sessions
(pass) SessionAdapter > should add and retrieve a session [0.24ms]
(pass) SessionAdapter > should retrieve a session by task ID [0.06ms]
(pass) SessionAdapter > should update a session [0.08ms]
(pass) SessionAdapter > should delete a session
(pass) SessionAdapter > should return false when deleting a non-existent session [0.02ms]
(pass) SessionAdapter > should get repository path for a session [0.01ms]
(pass) SessionAdapter > should get working directory for a session

src/domain/session/session-approve-task-status-commit.test.ts:
(pass) Session Approve Task Status Commit > should commit task status update after successful merge [0.43ms]
(pass) Session Approve Task Status Commit > should handle case where no task status update is needed [0.11ms]
320 |         taskService: mockTaskService as any,
321 |       }
322 |     );
323 | 
324 |     // Should trigger early exit since task is DONE and PR branch doesn't exist
325 |     expect(result.isNewlyApproved).toBe(false); // Session was already approved
                                         ^
error: expect(received).toBe(expected)

Expected: false
Received: true

      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/session/session-approve-task-status-commit.test.ts:325:36)
(fail) Session Approve Task Status Commit > should skip task status update when task is already DONE [0.18ms]
410 |         taskService: mockTaskService as any,
411 |       }
412 |     );
413 | 
414 |     // Verify early exit behavior
415 |     expect(result.isNewlyApproved).toBe(false); // Session was already approved
                                         ^
error: expect(received).toBe(expected)

Expected: false
Received: true

      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/session/session-approve-task-status-commit.test.ts:415:36)
(fail) Session Approve Task Status Commit > should exit early when task is DONE and PR branch doesn't exist (bug reproduction) [0.13ms]

src/domain/session/session-auto-detection-integration.test.ts:

# Unhandled error between tests
-------------------------------
error: Cannot find module '../../errors/index' from '/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/session/commands/dir-command.ts'
-------------------------------


src/domain/session/pr-validation.test.ts:
(pass) PR Validation Utilities > validatePrContent > should validate normal PR content without issues [0.62ms]
(pass) PR Validation Utilities > validatePrContent > should detect and remove title duplication in body [0.05ms]
(pass) PR Validation Utilities > validatePrContent > should reject empty title [0.02ms]
(pass) PR Validation Utilities > validatePrContent > should handle empty body gracefully [0.01ms]
(pass) PR Validation Utilities > isDuplicateContent > should detect identical content [0.07ms]
(pass) PR Validation Utilities > isDuplicateContent > should detect content with different whitespace [0.02ms]
(pass) PR Validation Utilities > isDuplicateContent > should detect content with different case [0.02ms]
(pass) PR Validation Utilities > isDuplicateContent > should not match different content
(pass) PR Validation Utilities > isDuplicateContent > should handle empty strings [0.01ms]
(pass) PR Validation Utilities > sanitizePrBody > should remove lines that duplicate the title [0.04ms]
(pass) PR Validation Utilities > sanitizePrBody > should preserve non-duplicate content [0.04ms]
(pass) PR Validation Utilities > sanitizePrBody > should handle empty body
(pass) PR Validation Utilities > preparePrContent > should prepare normal content without changes [0.04ms]
(pass) PR Validation Utilities > preparePrContent > should sanitize content with duplication and provide warnings [0.02ms]
(pass) PR Validation Utilities > preparePrContent > should throw error for empty title [0.03ms]
(pass) PR Validation Utilities > preparePrContent > should handle undefined body [0.01ms]

src/domain/session/session-db.test.ts:
(pass) SessionDB Functional Implementation > initializeSessionDbState > should initialize state with default values [0.02ms]
(pass) SessionDB Functional Implementation > initializeSessionDbState > should initialize state with custom baseDir
(pass) SessionDB Functional Implementation > initializeSessionDbState > should handle undefined options parameter without throwing runtime error [0.02ms]
(pass) SessionDB Functional Implementation > initializeSessionDbState > should handle null options parameter without throwing runtime error [0.02ms]
(pass) SessionDB Functional Implementation > initializeSessionDbState > should handle options with undefined baseDir property [0.03ms]
(pass) SessionDB Functional Implementation > listSessionsFn > should return all sessions [0.04ms]
(pass) SessionDB Functional Implementation > getSessionFn > should return the session by name [0.02ms]
(pass) SessionDB Functional Implementation > getSessionFn > should return null if session not found
(pass) SessionDB Functional Implementation > getSessionByTaskIdFn > should return the session by task ID [0.02ms]
(pass) SessionDB Functional Implementation > getSessionByTaskIdFn > should return the session when task ID includes #
(pass) SessionDB Functional Implementation > getSessionByTaskIdFn > should return null if no session exists for the task ID [0.01ms]
(pass) SessionDB Functional Implementation > addSessionFn > should add a new session to the state [0.03ms]
(pass) SessionDB Functional Implementation > updateSessionFn > should update an existing session [0.03ms]
(pass) SessionDB Functional Implementation > updateSessionFn > should not modify state if session not found [0.01ms]
(pass) SessionDB Functional Implementation > updateSessionFn > should ignore session property in updates [0.02ms]
(pass) SessionDB Functional Implementation > deleteSessionFn > should delete an existing session [0.03ms]
(pass) SessionDB Functional Implementation > deleteSessionFn > should not modify state if session not found
(pass) SessionDB Functional Implementation > getRepoPathFn > should return the repository path for a session record [0.01ms]
(pass) SessionDB Functional Implementation > getRepoPathFn > should handle session records with repoPath already set
(pass) SessionDB Functional Implementation > getRepoPathFn > should throw error for invalid input [0.01ms]
(pass) SessionDB Functional Implementation > getSessionWorkdirFn > should return the working directory for a session
(pass) SessionDB Functional Implementation > getSessionWorkdirFn > should return null if session not found

src/domain/session/session-db-io.test.ts:
(pass) Session DB I/O Functions > readSessionDbFile > should read existing session database file
(pass) Session DB I/O Functions > readSessionDbFile > should return initialized state when database file doesn't exist
(pass) Session DB I/O Functions > readSessionDbFile > should handle undefined options parameter without throwing runtime error
(pass) Session DB I/O Functions > readSessionDbFile > should handle null options parameter without throwing runtime error [0.03ms]
(pass) Session DB I/O Functions > readSessionDbFile > should handle options with undefined dbPath and baseDir properties [0.02ms]
(pass) Session DB I/O Functions > writeSessionsToFile > should write session database file successfully [0.02ms]
(pass) Session DB I/O Functions > writeSessionsToFile > should handle undefined options parameter without throwing runtime error [0.03ms]
(pass) Session DB I/O Functions > writeSessionsToFile > should handle null options parameter without throwing runtime error [0.03ms]
(pass) Session DB I/O Functions > writeSessionsToFile > should handle options with undefined dbPath property [0.03ms]

tests/adapters/mcp/session-edit-tools.test.ts:
(pass) Session Edit Tools > session_edit_file > should be registered with correct schema
(pass) Session Edit Tools > session_edit_file > should create new file when it doesn't exist [0.04ms]
(pass) Session Edit Tools > session_edit_file > should handle errors gracefully
(pass) Session Edit Tools > session_search_replace > should be registered with correct schema
(pass) Session Edit Tools > session_search_replace > should replace single occurrence successfully [0.19ms]
(pass) Session Edit Tools > session_search_replace > should error when text not found [0.09ms]
(pass) Session Edit Tools > session_search_replace > should error when multiple occurrences found [0.03ms]

tests/adapters/cli/rules.test.ts:
(pass) Rules CLI Core Functionality > readContentFromFileIfExists function > returns input string when path doesn't exist [0.03ms]
(pass) Rules CLI Core Functionality > parseGlobs function > handles comma-separated glob patterns [0.11ms]
(pass) Rules CLI Core Functionality > parseGlobs function > handles JSON array glob patterns [0.01ms]
(pass) Rules CLI Core Functionality > parseGlobs function > returns undefined for undefined input [0.01ms]
(pass) Rules CLI Core Functionality > parseGlobs function > returns undefined for empty string

tests/adapters/cli/cli-rules-integration.test.ts:
(pass) Rules CLI Helper Functions Integration > parseGlobs handles different format patterns [0.02ms]
(pass) Rules CLI Helper Functions Integration > readContentFromFileIfExists returns input when not a file [0.05ms]

tests/adapters/cli/session-remaining.test.ts:
(pass) session workspace detection > TASK #168 FIX: should correctly parse session name from path structure
(pass) session workspace detection > TASK #168 FIX: should handle various session name formats [0.03ms]
(pass) session inspect command > placeholder test for inspect command
(pass) session list operations > placeholder test for list operations
(skip) session pr command > REAL TEST: preparePr should execute switch back command
(pass) session pr command > CORRECT BEHAVIOR: session pr should return to session branch after creating PR [0.13ms]

tests/adapters/cli/session-directory.test.ts:
42 |         sessionDB: testData.mockSessionDB,
43 |       }
44 |     );
45 | 
46 |     // Assert
47 |     expect(testData.mockSessionDB.getSessionByTaskId).toHaveBeenCalledWith("#160");
                                                           ^
error: expect(received).toHaveBeenCalledWith(expected)

Number of calls: 1

      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/tests/adapters/cli/session-directory.test.ts:47:55)
(fail) session dir command > should return correct session directory for task ID [0.36ms]
58 | 
59 |     // Act: Test with task ID without # prefix
60 |     await getSessionDirFromParams({ task: "160" }, { sessionDB: testData.mockSessionDB });
61 | 
62 |     // Assert: Should call with normalized task ID (with # prefix)
63 |     expect(testData.mockSessionDB.getSessionByTaskId).toHaveBeenCalledWith("#160");
                                                           ^
error: expect(received).toHaveBeenCalledWith(expected)

Number of calls: 1

      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/tests/adapters/cli/session-directory.test.ts:63:55)
(fail) session dir command > should normalize task IDs correctly (with and without # prefix) [0.06ms]
(pass) session dir command > should handle null taskId sessions correctly [0.03ms]
(pass) session dir command > BUG REGRESSION: SQLite filtering implementation [0.10ms]
(pass) session dir command > EDGE CASE: multiple sessions with same task ID but different formats [0.05ms]

tests/adapters/cli/session-update.test.ts:
78 |       }
79 |     );
80 | 
81 |     // Assert: Should complete successfully
82 |     expect(result).toBeDefined();
83 |     expect(result.session).toBe(sessionName);
                                ^
error: expect(received).toBe(expected)

Expected: "task#170"
Received: "task#276"

      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/tests/adapters/cli/session-update.test.ts:83:28)
(fail) session update command > TASK #168 FIX: should auto-detect session name from current directory when not provided [23.51ms]
(pass) session update command > TASK #168 FIX: should automatically register orphaned session when directory exists but not in database [0.16ms]
(pass) session update command > TASK #168 FIX: should handle self-repair failure gracefully [0.12ms]
(pass) session update command > TASK #168 FIX: should extract task ID from session name during self-repair [0.09ms]
(pass) session update command > TASK #168 FIX: should provide clear error message when session workspace directory is missing [0.06ms]
(pass) session update command > TASK #168 FIX: should provide clear error message for uncommitted changes [0.06ms]

tests/adapters/cli/rules-helpers.test.ts:
(pass) Rules CLI Helper Functions > parseGlobs > returns undefined for undefined input [0.84ms]
(pass) Rules CLI Helper Functions > parseGlobs > parses comma-separated string into array [0.08ms]
(pass) Rules CLI Helper Functions > parseGlobs > trims whitespace in comma-separated strings [0.02ms]
(pass) Rules CLI Helper Functions > parseGlobs > parses JSON array string format [0.01ms]
(pass) Rules CLI Helper Functions > parseGlobs > falls back to comma handling if JSON parsing fails [0.01ms]
(pass) Rules CLI Helper Functions > parseGlobs > returns undefined for empty string

tests/adapters/cli/session.test.ts:
56 |           sessionDB: mockSessionDB,
57 |         }
58 |       );
59 | 
60 |       // Assert
61 |       expect(mockSessionDB.getSessionByTaskId).toHaveBeenCalledWith("#160");
                                                    ^
error: expect(received).toHaveBeenCalledWith(expected)

Number of calls: 1

      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/tests/adapters/cli/session.test.ts:61:48)
(fail) Session CLI Commands > session dir command > should return correct session directory for task ID [0.45ms]
72 | 
73 |       // Act: Test with task ID without # prefix
74 |       await getSessionDirFromParams({ task: "160" }, { sessionDB: mockSessionDB });
75 | 
76 |       // Assert: Should call with normalized task ID (with # prefix)
77 |       expect(mockSessionDB.getSessionByTaskId).toHaveBeenCalledWith("#160");
                                                    ^
error: expect(received).toHaveBeenCalledWith(expected)

Number of calls: 1

      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/tests/adapters/cli/session.test.ts:77:48)
(fail) Session CLI Commands > session dir command > should normalize task IDs correctly (with and without # prefix) [0.06ms]
(pass) Session CLI Commands > session dir command > should handle null taskId sessions correctly [0.03ms]
(pass) Session CLI Commands > session dir command > BUG REGRESSION: SQLite filtering implementation [0.09ms]
(pass) Session CLI Commands > session dir command > EDGE CASE: multiple sessions with same task ID but different formats [0.03ms]
105 | 
106 |     const normalizedTaskId = taskIdSchema!.parse(task);
107 |     const sessionRecord = await sessionProvider!.getSessionByTaskId(normalizedTaskId);
108 | 
109 |     if (!sessionRecord) {
110 |       throw new ResourceNotFoundError(
                  ^
ResourceNotFoundError: No session found for task 236
      cause: undefined,
 resourceType: "task",
 resourceId: "236",

      at resolveSessionContext (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/session/session-context-resolver.ts:110:13)
(fail) Session CLI Commands > session update command > TASK #168 FIX: should auto-detect session name from current directory when not provided [0.26ms]
(pass) Session CLI Commands > session update command > TASK #168 FIX: should automatically register orphaned session when directory exists but not in database
(pass) Session CLI Commands > session update command > TASK #168 FIX: should handle self-repair failure gracefully
(pass) Session CLI Commands > session update command > TASK #168 FIX: should extract task ID from session name during self-repair [0.04ms]
(pass) Session CLI Commands > session update command > TASK #168 FIX: should provide clear error message when session workspace directory is missing [0.07ms]
(pass) Session CLI Commands > session update command > TASK #168 FIX: should provide clear error message for uncommitted changes [0.08ms]
(pass) Session CLI Commands > session workspace detection > TASK #168 FIX: should correctly parse session name from path structure [0.02ms]
(pass) Session CLI Commands > session workspace detection > TASK #168 FIX: should handle various session name formats [0.02ms]
(pass) Session CLI Commands > session inspect command > placeholder test for inspect command
(pass) Session CLI Commands > session list operations > placeholder test for list operations
(skip) Session CLI Commands > session pr command > REAL TEST: preparePr should execute switch back command
(pass) Session CLI Commands > session pr command > CORRECT BEHAVIOR: session pr should return to session branch after creating PR [0.10ms]

tests/domain/commands/workspace.commands.test.ts:
(pass) Workspace Domain Methods > isSessionRepository (async workspace checking) > returns true for a path in a session repository [0.19ms]
(pass) Workspace Domain Methods > isSessionRepository (async workspace checking) > returns false for a path not in a session repository [0.15ms]
(pass) Workspace Domain Methods > isSessionRepository (async workspace checking) > returns false when an error occurs during check [0.07ms]
(pass) Workspace Domain Methods > isSessionRepository (async workspace checking) > verifies isSessionRepository consistency [0.05ms]
(pass) Workspace Domain Methods > getSessionFromWorkspace (getSessionFromRepo) > gets session information for a valid session repository [0.05ms]
(pass) Workspace Domain Methods > getSessionFromWorkspace (getSessionFromRepo) > returns null for a non-session repository [0.07ms]
(pass) Workspace Domain Methods > getSessionFromWorkspace (getSessionFromRepo) > returns null when session record is not found [0.05ms]
(pass) Workspace Domain Methods > getSessionFromWorkspace (getSessionFromRepo) > verifies getSessionFromRepo is an alias for getSessionFromWorkspace [0.09ms]
(pass) Workspace Domain Methods > getCurrentSession > returns session name when in a session directory [0.06ms]
(pass) Workspace Domain Methods > getCurrentSession > returns null when not in a session directory [0.04ms]
(pass) Workspace Domain Methods > resolveWorkspacePath > returns explicitly provided workspace path [0.04ms]
(pass) Workspace Domain Methods > resolveWorkspacePath > throws error for invalid workspace path [0.09ms]
(pass) Workspace Domain Methods > resolveWorkspacePath > uses sessionRepo if provided (backwards compatibility) [0.03ms]
(pass) Workspace Domain Methods > resolveWorkspacePath > falls back to current directory when no options provided [0.01ms]
(pass) Workspace Domain Methods > resolveWorkspacePath > uses provided sessionWorkspace path [0.03ms]
(pass) Workspace Domain Methods > isSessionWorkspace returns true for session workspace > returns true for session workspace [0.08ms]
(pass) Workspace Domain Methods > isSessionWorkspace returns true for session workspace > returns false for non-session workspace [0.02ms]

src/domain/tasks/__tests__/backend-workspace-integration.test.ts:
error: Test "markdown backend should use special workspace when no local tasks.md" timed out after 30000ms
(fail) Backend Workspace Integration - Current Behavior > Current Markdown Backend Behavior > markdown backend should use special workspace when no local tasks.md [30000.82ms]
(pass) Backend Workspace Integration - Current Behavior > Current Markdown Backend Behavior > markdown backend should work with resolved workspace [0.10ms]
(pass) Backend Workspace Integration - Current Behavior > Current Markdown Backend Behavior > TaskService should work with markdown backend and resolved workspace [2.42ms]
(pass) Backend Workspace Integration - Current Behavior > Current JSON Backend Behavior > json backend should use current directory for external files [0.09ms]
(pass) Backend Workspace Integration - Current Behavior > Current JSON Backend Behavior > json backend should work with resolved workspace [0.06ms]
(pass) Backend Workspace Integration - Current Behavior > Current TaskService Integration > should work with pre-resolved workspace for markdown [1.25ms]
(pass) Backend Workspace Integration - Current Behavior > Current TaskService Integration > should work with pre-resolved workspace for json [0.29ms]
error: Test "should handle full current workflow for markdown" timed out after 30001ms
(fail) Backend Workspace Integration - Current Behavior > Current Complex Workflow > should handle full current workflow for markdown [30001.01ms]
error: Test "should handle edge case: markdown with local tasks.md file" timed out after 30001ms
(fail) Backend Workspace Integration - Current Behavior > Current Complex Workflow > should handle edge case: markdown with local tasks.md file [30001.07ms]
(pass) Target Backend Architecture - Self-Contained Workspace Resolution > Workspace-Resolving Markdown Backend > should handle workspace resolution internally with explicit path [0.45ms]
214 |       expect(backend.name).toBe("markdown");
215 |       expect(backend.getWorkspacePath()).toBe((process as any).cwd());
216 | 
217 |       const resolutionInfo = (backend as any).getWorkspaceResolutionInfo();
218 |       // In session workspace, it detects existing tasks.md file
219 |       expect(resolutionInfo.method).toBe("local-tasks-md");
                                          ^
error: expect(received).toBe(expected)

Expected: "local-tasks-md"
Received: "current-directory"

      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks/__tests__/backend-workspace-integration.test.ts:219:37)
(fail) Target Backend Architecture - Self-Contained Workspace Resolution > Workspace-Resolving Markdown Backend > should handle current directory workspace resolution [0.29ms]
error: Test "should handle special workspace resolution with repo URL" timed out after 30001ms
(fail) Target Backend Architecture - Self-Contained Workspace Resolution > Workspace-Resolving Markdown Backend > should handle special workspace resolution with repo URL [30001.12ms]
(pass) Target Backend Architecture - Self-Contained Workspace Resolution > Workspace-Resolving Markdown Backend > should work with task operations [0.39ms]
(pass) Target Backend Architecture - Self-Contained Workspace Resolution > Simplified Workflow > should eliminate external workspace resolution for explicit paths [0.04ms]
error: Test "should eliminate external workspace resolution for repo URLs" timed out after 30000ms
(fail) Target Backend Architecture - Self-Contained Workspace Resolution > Simplified Workflow > should eliminate external workspace resolution for repo URLs [30000.34ms]
(pass) Target Backend Architecture - Self-Contained Workspace Resolution > Simplified Workflow > should enable complete TaskService workflow with workspace-resolving backends [1.11ms]
error: Test "should support repository-based TaskService creation" timed out after 30001ms
(fail) Target Backend Architecture - Self-Contained Workspace Resolution > Simplified Workflow > should support repository-based TaskService creation [30001.06ms]
(pass) Target Backend Architecture - Self-Contained Workspace Resolution > Simplified Workflow > should support auto-detection TaskService creation [4.50ms]
(pass) Target Backend Architecture - Self-Contained Workspace Resolution > Simplified Workflow > should support full configuration pattern [0.70ms]

src/domain/tasks/__tests__/markdown-backend-workspace-architecture.test.ts:
58 |       require("fs").writeFileSync(
59 |         join(processDir, "tasks.md"),
60 |         "# Tasks\n\n- #001: Test Task [TODO]\n"
61 |       );
62 |     } catch (error) {
63 |       throw new Error(`Failed to create tasks.md file: ${error}`);
                                                                     ^
error: Failed to create tasks.md file: Error: ENOENT: no such file or directory, open '/var/folders/qg/bbhkjbqd5mx5ff1qhw0sctfc0000gn/T/minsky-workspace-test-1753133728920-u234r9lee/process/tasks.md'
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks/__tests__/markdown-backend-workspace-architecture.test.ts:63:65)
(fail) MarkdownTaskBackend Special Workspace Architecture > isInTreeBackend() must ALWAYS return true for markdown backend [866280087.08ms]
(fail) MarkdownTaskBackend Special Workspace Architecture > isInTreeBackend() must ALWAYS return true for markdown backend
58 |       require("fs").writeFileSync(
59 |         join(processDir, "tasks.md"),
60 |         "# Tasks\n\n- #001: Test Task [TODO]\n"
61 |       );
62 |     } catch (error) {
63 |       throw new Error(`Failed to create tasks.md file: ${error}`);
                                                                     ^
error: Failed to create tasks.md file: Error: ENOENT: no such file or directory, open '/var/folders/qg/bbhkjbqd5mx5ff1qhw0sctfc0000gn/T/minsky-workspace-test-1753133728921-vrjcygmai/process/tasks.md'
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks/__tests__/markdown-backend-workspace-architecture.test.ts:63:65)
(fail) MarkdownTaskBackend Special Workspace Architecture > must use special workspace even when no local tasks.md exists [866280087.28ms]
(fail) MarkdownTaskBackend Special Workspace Architecture > must use special workspace even when no local tasks.md exists
58 |       require("fs").writeFileSync(
59 |         join(processDir, "tasks.md"),
60 |         "# Tasks\n\n- #001: Test Task [TODO]\n"
61 |       );
62 |     } catch (error) {
63 |       throw new Error(`Failed to create tasks.md file: ${error}`);
                                                                     ^
error: Failed to create tasks.md file: Error: ENOENT: no such file or directory, open '/var/folders/qg/bbhkjbqd5mx5ff1qhw0sctfc0000gn/T/minsky-workspace-test-1753133728921-h6n0ve3ot/process/tasks.md'
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks/__tests__/markdown-backend-workspace-architecture.test.ts:63:65)
(fail) MarkdownTaskBackend Special Workspace Architecture > must use special workspace even in empty directory [866280087.45ms]
(fail) MarkdownTaskBackend Special Workspace Architecture > must use special workspace even in empty directory
58 |       require("fs").writeFileSync(
59 |         join(processDir, "tasks.md"),
60 |         "# Tasks\n\n- #001: Test Task [TODO]\n"
61 |       );
62 |     } catch (error) {
63 |       throw new Error(`Failed to create tasks.md file: ${error}`);
                                                                     ^
error: Failed to create tasks.md file: Error: ENOENT: no such file or directory, open '/var/folders/qg/bbhkjbqd5mx5ff1qhw0sctfc0000gn/T/minsky-workspace-test-1753133728921-5agsltw90/process/tasks.md'
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks/__tests__/markdown-backend-workspace-architecture.test.ts:63:65)
(fail) MarkdownTaskBackend Special Workspace Architecture > multiple markdown backends all require special workspace [866280087.67ms]
(fail) MarkdownTaskBackend Special Workspace Architecture > multiple markdown backends all require special workspace
58 |       require("fs").writeFileSync(
59 |         join(processDir, "tasks.md"),
60 |         "# Tasks\n\n- #001: Test Task [TODO]\n"
61 |       );
62 |     } catch (error) {
63 |       throw new Error(`Failed to create tasks.md file: ${error}`);
                                                                     ^
error: Failed to create tasks.md file: Error: ENOENT: no such file or directory, open '/var/folders/qg/bbhkjbqd5mx5ff1qhw0sctfc0000gn/T/minsky-workspace-test-1753133728921-xe210xq84/process/tasks.md'
      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/tasks/__tests__/markdown-backend-workspace-architecture.test.ts:63:65)
(fail) MarkdownTaskBackend Special Workspace Architecture > isInTreeBackend() must consistently return true across multiple calls [866280087.87ms]
(fail) 44™È  Backend() must consistently return true across multiple calls

src/adapters/shared/commands/__tests__/session-context-resolution.test.ts:
71 | 
72 |       // This demonstrates the problem - domain layer should NOT auto-detect
73 |       expect(result.sessionName).toBe("task#158");
74 | 
75 |       // Force test failure to show this is the problem we need to fix
76 |       expect("Domain layer should not auto-detect session").toBe("This is the architectural problem");
                                                                 ^
error: expect(received).toBe(expected)

Expected: "This is the architectural problem"
Received: "Domain layer should not auto-detect session"

      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/adapters/shared/commands/__tests__/session-context-resolution.test.ts:76:61)
(fail) Session Context Resolution Architecture Issues > üö© PROBLEM: Mixed Concerns in Domain Layer > should NOT require different validation logic based on working directory [0.64ms]
128 |       // üö© ARCHITECTURAL PROBLEM: Same function, different behavior based on cwd
129 |       expect(mainWorkspaceError).toBeInstanceOf(Error);
130 |       expect(sessionWorkspaceResult?.success).toBe(true);
131 | 
132 |       // Force failure to demonstrate this inconsistency is the problem
133 |       expect("Same function should have consistent behavior").toBe("This demonstrates the architecture problem");
                                                                    ^
error: expect(received).toBe(expected)

Expected: "This demonstrates the architecture problem"
Received: "Same function should have consistent behavior"

      at <anonymous> (/Users/edobry/.local/state/minsky/sessions/task#276/src/adapters/shared/commands/__tests__/session-context-resolution.test.ts:133:63)
(fail) Session Context Resolution Architecture Issues > üö© PROBLEM: Mixed Concerns in Domain Layer > should NOT have different behavior based on working directory context [0.20ms]
(pass) Session Context Resolution Architecture Issues > ‚úÖ TARGET: Clean Architecture with Interface-Layer Resolution > should ALWAYS require session parameter in domain layer [0.13ms]
(pass) Session Context Resolution Architecture Issues > ‚úÖ TARGET: Clean Architecture with Interface-Layer Resolution > should handle session resolution in interface adapters [0.10ms]

src/domain/git/commands/__tests__/simple-function.test.ts:
(pass) Git Commands Function Tests > should be able to define simple git command functions [0.06ms]
(pass) Git Commands Function Tests > should be able to call git command functions [0.09ms]

src/domain/git/commands/__tests__/integration.test.ts:
(pass) Git Commands Integration Tests > cloneFromParams > should clone repository successfully [286.27ms]
(pass) Git Commands Integration Tests > branchFromParams > should create branch successfully [1.57ms]
(pass) Git Commands Integration Tests > commitChangesFromParams > should commit changes successfully [11.01ms]
(pass) Git Commands Integration Tests > pushFromParams > should push changes successfully [10.76ms]
(pass) Git Commands Integration Tests > mergeFromParams > should merge changes successfully [0.46ms]
(pass) Git Commands Integration Tests > checkoutFromParams > should checkout branch successfully [9.17ms]
(pass) Git Commands Integration Tests > rebaseFromParams > should rebase changes successfully [9.54ms]
(pass) Git Commands Integration Tests > createPullRequestFromParams > should generate PR successfully [64.54ms]
(pass) Git Commands Integration Tests > Command Integration > should execute a complete workflow [188.06ms]

src/domain/git/commands/__tests__/basic-imports.test.ts:
(pass) Git Commands Import Tests > should be able to import git command index
(pass) Git Commands Import Tests > should be able to import git types [0.27ms]
(pass) Git Commands Import Tests > should be able to import individual command files [0.14ms]
error: Cannot find module '../../../../../utils/logger' from '/Users/edobry/.local/state/minsky/sessions/task#276/src/domain/git/commands/subcommands/branch-subcommand.ts'
(fail) Git Commands Import Tests > should be able to import subcommands [0.63ms]

3 tests skipped:
(skip) ConflictDetectionService Integration > should detect conflicts in real git repository
(skip) session pr command > REAL TEST: preparePr should execute switch back command
(skip) Session CLI Commands > session pr command > REAL TEST: preparePr should execute switch back command


104 tests failed:
(fail) sessionReviewFromParams > reviews session by task ID [0.72ms]
(fail) Session Git Clone Bug Regression Test > should successfully create session after fixing git directory issues [0.27ms]
(fail) Session Approve > branch cleanup after successful merge > should delete local PR branch and task branch after successful merge [0.59ms]
(fail) Session Approve > branch cleanup after successful merge > should handle branch cleanup failures gracefully without failing the operation [0.39ms]
(fail) Session Approve > branch cleanup after successful merge > should handle case where task branch doesn't exist but PR branch does [0.41ms]
(fail) Session Approve > successfully approves and merges a PR branch [0.44ms]
(fail) updateSessionFromParams > returns session information when update is successful [8.51ms]
(fail) updateSessionFromParams > updates session when workspace is dirty and force is set [0.22ms]
(fail) updateSessionFromParams > skips stashing when noStash is true [6.56ms]
(fail) updateSessionFromParams > skips pushing when noPush is true [6.51ms]
(fail) Session PR Command Branch Behavior > should never switch user to PR branch during session pr creation [1.30ms]
(fail) Session PR Command Branch Behavior > should handle branch switch-back failure as critical error [0.09ms]
(fail) Session Auto-Task Creation > should auto-create task when description is provided [0.63ms]
(fail) Session Creation Bug Fix (TDD) > should NOT create session directory if git operations fail [0.31ms]
(fail) interface-agnostic task functions > listTasksFromParams > should list tasks with valid parameters [0.47ms]
(fail) interface-agnostic task functions > getTaskFromParams > should get a task with valid parameters [0.60ms]
(fail) interface-agnostic task functions > getTaskFromParams > should normalize non-canonical task IDs (e.g., 'TEST_VALUE' -> '#TEST_VALUE') [0.11ms]
(fail) interface-agnostic task functions > getTaskFromParams > should handle task IDs without leading zeros [0.22ms]
(fail) interface-agnostic task functions > getTaskStatusFromParams > should get task status with valid parameters [0.29ms]
(fail) interface-agnostic task functions > setTaskStatusFromParams > should set task status with valid parameters [0.35ms]
(fail) Prepared Merge Commit Workflow (Task #144) > Expected Correct Behavior - What SHOULD happen per Task #025 > preparePr SHOULD create PR branch from base branch and merge feature branch with --no-ff [0.29ms]
(fail) Prepared Merge Commit Workflow (Task #144) > Expected Correct Behavior - What SHOULD happen per Task #025 > sessionPrFromParams SHOULD call preparePr with correct parameters
(fail) GitService - Core Methods with Dependency Injection > Repository Operations with Dependency Injection > should handle clone operations with filesystem validation [0.13ms]
(fail) GitService - Core Methods with Dependency Injection > Repository Operations with Dependency Injection > should handle clone with empty repository URL validation [0.02ms]
(fail) GitService - Core Methods with Dependency Injection > Repository Operations with Dependency Injection > should handle clone with existing non-empty directory [0.08ms]
(fail) GitService - Core Methods with Dependency Injection > Repository Operations with Dependency Injection > should handle clone failure during git command execution [0.04ms]
(fail) GitService - Core Methods with Dependency Injection > Repository Operations with Dependency Injection > should handle clone success verification failure [0.02ms]
(fail) GitService - Core Methods with Dependency Injection > Repository Operations with Dependency Injection > should handle clone with local repository normalization [0.01ms]
(fail) Parameter-Based Git Functions > commitChangesFromParams > should commit changes with all parameters [8.11ms]
(fail) Parameter-Based Git Functions > commitChangesFromParams > should handle commit with minimal parameters [3942.11ms]
(fail) Parameter-Based Git Functions > commitChangesFromParams > should handle commit with amend option [3198.56ms]
(fail) Parameter-Based Git Functions > commitChangesFromParams > should handle commit with noStage option [3177.74ms]
(fail) Parameter-Based Git Functions > pushFromParams > should push changes with all parameters [0.81ms]
(fail) Parameter-Based Git Functions > pushFromParams > should handle push with custom remote [12.73ms]
(fail) commitChangesFromParams > should commit changes with message and all flag [5.48ms]
(fail) commitChangesFromParams > should commit changes with just message [8.43ms]
(fail) commitChangesFromParams > should handle commit with custom repo path [7.07ms]
(fail) commitChangesFromParams > should handle commit errors gracefully [0.61ms]
(fail) pushFromParams > should push changes successfully [5.89ms]
(fail) pushFromParams > should handle push with custom remote [6.17ms]
(fail) pushFromParams > should handle push with branch specification [6.17ms]
(fail) pushFromParams > should handle push errors gracefully [0.21ms]
(fail) Session Start Consistency Tests > Error handling edge cases > should prevent session creation when session already exists [0.15ms]
(fail) Session Start Consistency Tests > Error handling edge cases > should prevent session creation when another session exists for same task [0.07ms]
(fail) Session Start Consistency Tests > Critical consistency verification > should successfully add session record only after all operations complete [0.15ms]
(fail) Centralized Service Mock Factories > createMockGitService > should return default mock values [0.16ms]
(fail) Centralized Service Mock Factories > createMockTaskService > should return default mock values [0.12ms]
(fail) Centralized Service Mock Factories > createMockTaskService > should allow method overrides [0.07ms]
(fail) Custom Configuration System > CustomConfigurationProvider > should handle configuration overrides consistently [0.02ms]
(fail) Custom Configuration System > Configuration Initialization > should support configuration overrides [0.25ms]
(fail) Custom Configuration System > Configuration Factory > should create provider with custom options [0.18ms]
(fail) TaskService JsonFile Integration (Enhanced) > Error Handling > should handle invalid task IDs gracefully [0.23ms]
(fail) Enhanced Workspace Integration > Enhanced TaskService Integration > should handle repository-based workspace creation [10.75ms]
(fail) TaskService > createTaskFromTitleAndDescription > should store proper spec path instead of temporary path [0.39ms]
(fail) TaskService > createTaskFromTitleAndDescription > integration: should create task with proper spec path using real backend [1.44ms]
(fail) Enhanced Workspace Resolution > resolveTaskWorkspacePath with Enhanced TaskService > should resolve workspace for markdown backend without prototype pollution [30001.05ms]
(fail) Enhanced Workspace Resolution > resolveTaskWorkspacePath with Enhanced TaskService > should handle repo URL parameter [30001.13ms]
(fail) DatabaseIntegrityChecker > File Format Detection > should detect valid SQLite format [1.74ms]
(fail) DatabaseIntegrityChecker > Format Mismatch Detection > should detect SQLite file when JSON expected [1.09ms]
(fail) DatabaseIntegrityChecker > SQLite Integrity Validation > should validate SQLite database integrity [0.23ms]
(fail) DatabaseIntegrityChecker > SQLite Integrity Validation > should detect SQLite database without sessions table [0.65ms]
(fail) DatabaseIntegrityChecker > SQLite Integrity Validation > should detect empty SQLite database [0.32ms]
(fail) DatabaseIntegrityChecker > Integrity Report Formatting > should format report for valid database [0.47ms]
(fail) interface-agnostic task functions > listTasksFromParams > should list tasks with valid parameters [0.47ms]
(fail) interface-agnostic task functions > getTaskFromParams > should get a task with valid parameters [1.26ms]
(fail) interface-agnostic task functions > getTaskFromParams > should normalize non-canonical task IDs (e.g., 'TEST_VALUE' -> '#TEST_VALUE') [0.12ms]
(fail) interface-agnostic task functions > getTaskFromParams > should handle task IDs without leading zeros [0.05ms]
(fail) interface-agnostic task functions > getTaskStatusFromParams > should get task status with valid parameters [0.11ms]
(fail) interface-agnostic task functions > setTaskStatusFromParams > should set task status with valid parameters [0.09ms]
(fail) Repository Operations with Dependency Injection > should have cloneWithDependencies method available [0.07ms]
(fail) Session Approve Task Status Commit > should skip task status update when task is already DONE [0.18ms]
(fail) Session Approve Task Status Commit > should exit early when task is DONE and PR branch doesn't exist (bug reproduction) [0.13ms]
(fail) session dir command > should return correct session directory for task ID [0.36ms]
(fail) session dir command > should normalize task IDs correctly (with and without # prefix) [0.06ms]
(fail) session update command > TASK #168 FIX: should auto-detect session name from current directory when not provided [23.51ms]
(fail) Session CLI Commands > session dir command > should return correct session directory for task ID [0.45ms]
(fail) Session CLI Commands > session dir command > should normalize task IDs correctly (with and without # prefix) [0.06ms]
(fail) Session CLI Commands > session update command > TASK #168 FIX: should auto-detect session name from current directory when not provided [0.26ms]
(fail) Backend Workspace Integration - Current Behavior > Current Markdown Backend Behavior > markdown backend should use special workspace when no local tasks.md [30000.82ms]
(fail) Backend Workspace Integration - Current Behavior > Current Complex Workflow > should handle full current workflow for markdown [30001.01ms]
(fail) Backend Workspace Integration - Current Behavior > Current Complex Workflow > should handle edge case: markdown with local tasks.md file [30001.07ms]
(fail) Target Backend Architecture - Self-Contained Workspace Resolution > Workspace-Resolving Markdown Backend > should handle current directory workspace resolution [0.29ms]
(fail) Target Backend Architecture - Self-Contained Workspace Resolution > Workspace-Resolving Markdown Backend > should handle special workspace resolution with repo URL [30001.12ms]
(fail) Target Backend Architecture - Self-Contained Workspace Resolution > Simplified Workflow > should eliminate external workspace resolution for repo URLs [30000.34ms]
(fail) Target Backend Architecture - Self-Contained Workspace Resolution > Simplified Workflow > should support repository-based TaskService creation [30001.06ms]
(fail) MarkdownTaskBackend Special Workspace Architecture > isInTreeBackend() must ALWAYS return true for markdown backend [866280087.08ms]
(fail) MarkdownTaskBackend Special Workspace Architecture > isInTreeBackend() must ALWAYS return true for markdown backend
(fail) MarkdownTaskBackend Special Workspace Architecture > must use special workspace even when no local tasks.md exists [866280087.28ms]
(fail) MarkdownTaskBackend Special Workspace Architecture > must use special workspace even when no local tasks.md exists
(fail) MarkdownTaskBackend Special Workspace Architecture > must use special workspace even in empty directory [866280087.45ms]
(fail) MarkdownTaskBackend Special Workspace Architecture > must use special workspace even in empty directory
(fail) MarkdownTaskBackend Special Workspace Architecture > multiple markdown backends all require special workspace [866280087.67ms]
(fail) MarkdownTaskBackend Special Workspace Architecture > multiple markdown backends all require special workspace
(fail) MarkdownTaskBackend Special Workspace Architecture > isInTreeBackend() must consistently return true across multiple calls [866280087.87ms]
(fail) 44™È  Backend() must consistently return true across multiple calls
(fail) Session Context Resolution Architecture Issues > üö© PROBLEM: Mixed Concerns in Domain Layer > should NOT require different validation logic based on working directory [0.64ms]
(fail) Session Context Resolution Architecture Issues > üö© PROBLEM: Mixed Concerns in Domain Layer > should NOT have different behavior based on working directory context [0.20ms]
(fail) Git Commands Import Tests > should be able to import subcommands [0.63ms]

 957 pass
 3 skip
 104 fail
 9 errors
 2811 expect() calls
Ran 1064 tests across 125 files. [252.89s]
