---
name: MCP Usage
description: Guidelines for using the Minsky Control Protocol
tags:
  - mcp
  - protocol
  - ai
---
# MCP Usage

This rule outlines the usage of the Minsky Control Protocol (MCP) for AI agent interaction.

## Overview

- **Purpose**: Provides a stable, machine-readable interface for AI agents to interact with the Minsky CLI.
- **Transport**: Can be configured for `stdio`, `sse`, or `httpStream`.
- **Commands**: All shared commands are available via MCP.

## Current Configuration

- **Interface**: mcp
- **MCP Enabled**: Yes
- **Transport**: stdio
- **Rule Format**: cursor

## Available MCP Tools

### Task Management
- <function_calls>
<invoke name="mcp_minsky-server_tasks_list">
<parameter name="all">optional all value</parameter>
<parameter name="status">optional status value</parameter>
<parameter name="filter">optional filter value</parameter>
<parameter name="limit">optional limit value</parameter>
<parameter name="repo">optional repo value</parameter>
<parameter name="workspace">optional workspace value</parameter>
<parameter name="session">optional session value</parameter>
<parameter name="backend">optional backend value</parameter>
<parameter name="json">optional json value</parameter>
</invoke>
</function_calls> - list all tasks
- <function_calls>
<invoke name="mcp_minsky-server_tasks_get">
<parameter name="taskId">required taskId value</parameter>
<parameter name="repo">optional repo value</parameter>
<parameter name="workspace">optional workspace value</parameter>
<parameter name="session">optional session value</parameter>
<parameter name="backend">optional backend value</parameter>
<parameter name="json">optional json value</parameter>
</invoke>
</function_calls> - get task by ID
- <function_calls>
<invoke name="mcp_minsky-server_tasks_status_get">
<parameter name="taskId">required taskId value</parameter>
<parameter name="repo">optional repo value</parameter>
<parameter name="workspace">optional workspace value</parameter>
<parameter name="session">optional session value</parameter>
<parameter name="backend">optional backend value</parameter>
<parameter name="json">optional json value</parameter>
</invoke>
</function_calls> - check task status
- <function_calls>
<invoke name="mcp_minsky-server_tasks_status_set">
<parameter name="taskId">required taskId value</parameter>
<parameter name="status">optional status value</parameter>
<parameter name="repo">optional repo value</parameter>
<parameter name="workspace">optional workspace value</parameter>
<parameter name="session">optional session value</parameter>
<parameter name="backend">optional backend value</parameter>
<parameter name="json">optional json value</parameter>
</invoke>
</function_calls> - update task status
- <function_calls>
<invoke name="mcp_minsky-server_tasks_create">
<parameter name="title">required title value</parameter>
<parameter name="description">optional description value</parameter>
<parameter name="force">optional force value</parameter>
<parameter name="descriptionPath">optional descriptionPath value</parameter>
<parameter name="repo">optional repo value</parameter>
<parameter name="workspace">optional workspace value</parameter>
<parameter name="session">optional session value</parameter>
<parameter name="backend">optional backend value</parameter>
<parameter name="json">optional json value</parameter>
</invoke>
</function_calls> - create new task

### Session Management
- <function_calls>
<invoke name="mcp_minsky-server_session_list">
<parameter name="repo">optional repo value</parameter>
<parameter name="json">optional json value</parameter>
</invoke>
</function_calls> - list all sessions
- <function_calls>
<invoke name="mcp_minsky-server_session_get">
<parameter name="name">optional name value</parameter>
<parameter name="task">optional task value</parameter>
<parameter name="repo">optional repo value</parameter>
<parameter name="json">optional json value</parameter>
</invoke>
</function_calls> - get session details
- <function_calls>
<invoke name="mcp_minsky-server_session_start">
<parameter name="name">optional name value</parameter>
<parameter name="task">optional task value</parameter>
<parameter name="description">optional description value</parameter>
<parameter name="branch">optional branch value</parameter>
<parameter name="repo">optional repo value</parameter>
<parameter name="session">optional session value</parameter>
<parameter name="json">optional json value</parameter>
<parameter name="quiet">optional quiet value</parameter>
<parameter name="noStatusUpdate">optional noStatusUpdate value</parameter>
<parameter name="skipInstall">optional skipInstall value</parameter>
<parameter name="packageManager">optional packageManager value</parameter>
</invoke>
</function_calls> - create new session
- <function_calls>
<invoke name="mcp_minsky-server_session_dir">
<parameter name="name">optional name value</parameter>
<parameter name="task">optional task value</parameter>
<parameter name="repo">optional repo value</parameter>
<parameter name="json">optional json value</parameter>
</invoke>
</function_calls> - get session directory
- <function_calls>
<invoke name="mcp_minsky-server_session_pr_create">
<parameter name="title">optional title value</parameter>
<parameter name="body">optional body value</parameter>
<parameter name="bodyPath">optional bodyPath value</parameter>
<parameter name="name">optional name value</parameter>
<parameter name="task">optional task value</parameter>
<parameter name="repo">optional repo value</parameter>
<parameter name="noStatusUpdate">optional noStatusUpdate value</parameter>
<parameter name="debug">optional debug value</parameter>
<parameter name="skipUpdate">optional skipUpdate value</parameter>
<parameter name="autoResolveDeleteConflicts">optional autoResolveDeleteConflicts value</parameter>
<parameter name="skipConflictCheck">optional skipConflictCheck value</parameter>
</invoke>
</function_calls> - create pull request

### Rules Management
- <function_calls>
<invoke name="mcp_minsky-server_rules_list">
<parameter name="format">optional format value</parameter>
<parameter name="tag">optional tag value</parameter>
<parameter name="json">optional json value</parameter>
<parameter name="debug">optional debug value</parameter>
</invoke>
</function_calls> - list all rules
- <function_calls>
<invoke name="mcp_minsky-server_rules_get">
<parameter name="id">required id value</parameter>
<parameter name="format">optional format value</parameter>
<parameter name="json">optional json value</parameter>
<parameter name="debug">optional debug value</parameter>
</invoke>
</function_calls> - get rule by ID
- <function_calls>
<invoke name="mcp_minsky-server_rules_create">
<parameter name="id">required id value</parameter>
<parameter name="content">required content value</parameter>
<parameter name="description">optional description value</parameter>
<parameter name="name">optional name value</parameter>
<parameter name="globs">optional globs value</parameter>
<parameter name="tags">optional tags value</parameter>
<parameter name="format">optional format value</parameter>
<parameter name="overwrite">optional overwrite value</parameter>
<parameter name="json">optional json value</parameter>
</invoke>
</function_calls> - create new rule
- <function_calls>
<invoke name="mcp_minsky-server_rules_update">
<parameter name="id">required id value</parameter>
<parameter name="content">optional content value</parameter>
<parameter name="description">optional description value</parameter>
<parameter name="name">optional name value</parameter>
<parameter name="globs">optional globs value</parameter>
<parameter name="tags">optional tags value</parameter>
<parameter name="format">optional format value</parameter>
<parameter name="json">optional json value</parameter>
<parameter name="debug">optional debug value</parameter>
</invoke>
</function_calls> - update existing rule

## Usage Examples

### Task Management Example
```
<function_calls>
<invoke name="mcp_minsky-server_tasks_list">
<parameter name="all">optional all value</parameter>
<parameter name="status">optional status value</parameter>
<parameter name="filter">optional filter value</parameter>
<parameter name="limit">optional limit value</parameter>
<parameter name="repo">optional repo value</parameter>
<parameter name="workspace">optional workspace value</parameter>
<parameter name="session">optional session value</parameter>
<parameter name="backend">optional backend value</parameter>
<parameter name="json">optional json value</parameter>
</invoke>
</function_calls>
```bash
taskId: "#123"\n<function_calls>
<invoke name="mcp_minsky-server_tasks_get">
<parameter name="taskId">required taskId value</parameter>
<parameter name="repo">optional repo value</parameter>
<parameter name="workspace">optional workspace value</parameter>
<parameter name="session">optional session value</parameter>
<parameter name="backend">optional backend value</parameter>
<parameter name="json">optional json value</parameter>
</invoke>
</function_calls>
```
```

### Session Management Example  
```
```bash
task: "#123"\n<function_calls>
<invoke name="mcp_minsky-server_session_start">
<parameter name="name">optional name value</parameter>
<parameter name="task">optional task value</parameter>
<parameter name="description">optional description value</parameter>
<parameter name="branch">optional branch value</parameter>
<parameter name="repo">optional repo value</parameter>
<parameter name="session">optional session value</parameter>
<parameter name="json">optional json value</parameter>
<parameter name="quiet">optional quiet value</parameter>
<parameter name="noStatusUpdate">optional noStatusUpdate value</parameter>
<parameter name="skipInstall">optional skipInstall value</parameter>
<parameter name="packageManager">optional packageManager value</parameter>
</invoke>
</function_calls>
```
```bash
name: "task#123"\n<function_calls>
<invoke name="mcp_minsky-server_session_dir">
<parameter name="name">optional name value</parameter>
<parameter name="task">optional task value</parameter>
<parameter name="repo">optional repo value</parameter>
<parameter name="json">optional json value</parameter>
</invoke>
</function_calls>
```
```

## Parameter Documentation

- `all`: Include all tasks regardless of status (Optional, Default: `false`)
- `status`: Task status (Optional)
- `filter`: Filter criteria for tasks (Optional)
- `limit`: Maximum number of tasks to return (Optional)
- `repo`: Repository path (Optional)
- `workspace`: Workspace path (Optional)
- `session`: Session identifier (Optional)
- `backend`: Backend type (Optional)
- `json`: Output in JSON format (Optional, Default: `false`)

- `name`: Session name (Optional)
- `task`: Task ID (Optional)
- `description`: Task description for auto-creation (Optional)
- `branch`: Git branch to use (Optional)
- `repo`: Repository path (Optional)
- `session`: Session identifier (Optional)
- `json`: Output in JSON format (Optional, Default: `false`)
- `quiet`: Suppress output (Optional, Default: `false`)
- `noStatusUpdate`: Skip updating task status (Optional, Default: `false`)
- `skipInstall`: Skip dependency installation (Optional, Default: `false`)
- `packageManager`: Package manager to use (Optional)



See README-MCP.md for detailed protocol specifications.