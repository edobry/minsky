---
name: Minsky Workflow Orchestrator
description: REQUIRED entry point for understanding the Minsky workflow system including the git approve command for PR merging
alwaysApply: false
---
# Minsky Workflow System

This rule provides an overview of the Minsky workflow system and serves as an entry point to the more detailed workflow rules. The Minsky workflow has been divided into focused rules to make it easier to understand and follow.

## Core Workflow Rules

The following rules form the complete Minsky workflow system:

1. [**minsky-cli-usage**](mdc:.cursor/rules/minsky-cli-usage.mdc) - Guidelines for using the Minsky CLI for all task and session operations
2. [**minsky-session-management**](mdc:.cursor/rules/minsky-session-management.mdc) - Procedures for creating and managing sessions  
3. [**task-implementation-workflow**](mdc:.cursor/rules/task-implementation-workflow.mdc) - Step-by-step process for implementing tasks
4. [**task-status-protocol**](mdc:.cursor/rules/task-status-protocol.mdc) - Procedures for checking and updating task status
5. [**pr-preparation-workflow**](mdc:.cursor/rules/pr-preparation-workflow.mdc) - Guidelines for preparing and submitting PRs

## Fundamental Principle: Command-Based Workflow

**CRITICAL REQUIREMENT**: ALL task and session management MUST be done through the appropriate interface commands, not through direct file system operations. This includes:

- Task listing, status checking, and status updates
- Session creation, navigation, and management  
- Task implementation and verification
- PR preparation and submission

## When to Apply These Rules

These workflow rules should be applied:

- When starting work on a new task
- When checking or updating task status
- When creating or managing sessions
- When implementing task requirements
- When preparing pull requests
- When approving and merging pull requests

## Workflow Sequence

1. **Task Selection and Status Verification**
   - First: Check available tasks with <function_calls>
<invoke name="mcp_minsky-server_tasks_list">
<parameter name="all">optional all value</parameter>
<parameter name="status">optional status value</parameter>
<parameter name="filter">optional filter value</parameter>
<parameter name="limit">optional limit value</parameter>
<parameter name="repo">optional repo value</parameter>
<parameter name="workspace">optional workspace value</parameter>
<parameter name="session">optional session value</parameter>
<parameter name="backend">optional backend value</parameter>
<parameter name="json">optional json value</parameter>
</invoke>
</function_calls>
   - Then: Verify task status with <function_calls>
<invoke name="mcp_minsky-server_tasks_status_get">
<parameter name="taskId">required taskId value</parameter>
<parameter name="repo">optional repo value</parameter>
<parameter name="workspace">optional workspace value</parameter>
<parameter name="session">optional session value</parameter>
<parameter name="backend">optional backend value</parameter>
<parameter name="json">optional json value</parameter>
</invoke>
</function_calls>
   - Apply: minsky-cli-usage and task-status-protocol

2. **Session Creation and Navigation**
   - First: Create or re-enter a session for the task
   - Then: Navigate to the session directory
   - Apply: minsky-session-management

3. **Task Implementation**
   - First: Understand task requirements
   - Then: Implement the solution in the session workspace
   - Apply: task-implementation-workflow and session-first-workflow

4. **Testing and Verification**
   - First: Write and run tests for the implementation
   - Then: Verify that all requirements are met
   - Apply: task-implementation-workflow and tests

5. **PR Preparation and Submission**
   - First: Generate PR description
   - Then: Finalize changes and update task status
   - Apply: pr-preparation-workflow

6. **PR Approval and Merging**
   - First: Review PR content thoroughly
   - Then: Use the git approve command to merge the PR branch
   - Apply: pr-preparation-workflow

7. **Task Completion**
   - First: Update task status to DONE after PR is merged
   - Then: Clean up the session if needed
   - Apply: task-status-protocol and minsky-session-management

## Common Workflow Questions

### Task-Related Questions

- **"What tasks are available?"**
  → Apply minsky-cli-usage and use <function_calls>
<invoke name="mcp_minsky-server_tasks_list">
<parameter name="all">optional all value</parameter>
<parameter name="status">optional status value</parameter>
<parameter name="filter">optional filter value</parameter>
<parameter name="limit">optional limit value</parameter>
<parameter name="repo">optional repo value</parameter>
<parameter name="workspace">optional workspace value</parameter>
<parameter name="session">optional session value</parameter>
<parameter name="backend">optional backend value</parameter>
<parameter name="json">optional json value</parameter>
</invoke>
</function_calls>

- **"How do I start working on a task?"**
  → Apply minsky-session-management to create a session

- **"How do I check task status?"**
  → Apply task-status-protocol and use <function_calls>
<invoke name="mcp_minsky-server_tasks_status_get">
<parameter name="taskId">required taskId value</parameter>
<parameter name="repo">optional repo value</parameter>
<parameter name="workspace">optional workspace value</parameter>
<parameter name="session">optional session value</parameter>
<parameter name="backend">optional backend value</parameter>
<parameter name="json">optional json value</parameter>
</invoke>
</function_calls>

### Session-Related Questions

- **"How do I create a session?"**
  → Apply minsky-session-management and use <function_calls>
<invoke name="mcp_minsky-server_session_start">
<parameter name="name">optional name value</parameter>
<parameter name="task">optional task value</parameter>
<parameter name="description">optional description value</parameter>
<parameter name="branch">optional branch value</parameter>
<parameter name="repo">optional repo value</parameter>
<parameter name="session">optional session value</parameter>
<parameter name="json">optional json value</parameter>
<parameter name="quiet">optional quiet value</parameter>
<parameter name="noStatusUpdate">optional noStatusUpdate value</parameter>
<parameter name="skipInstall">optional skipInstall value</parameter>
<parameter name="packageManager">optional packageManager value</parameter>
</invoke>
</function_calls>

- **"How do I get back to my session?"**
  → Apply minsky-session-management and use <function_calls>
<invoke name="mcp_minsky-server_session_dir">
<parameter name="name">optional name value</parameter>
<parameter name="task">optional task value</parameter>
<parameter name="repo">optional repo value</parameter>
<parameter name="json">optional json value</parameter>
</invoke>
</function_calls>

- **"Why aren't my changes showing up?"**
  → Apply session-first-workflow to verify you're in the correct workspace

### Implementation Questions

- **"How do I implement a task?"**
  → Apply task-implementation-workflow for step-by-step guidance

- **"How do I verify my implementation?"**
  → Apply task-implementation-workflow and tests

- **"How do I create a PR?"**
  → Apply pr-preparation-workflow for PR creation steps

- **"How do I approve and merge a PR?"**
  → Apply pr-preparation-workflow and use the git approve command to merge the PR

## Error Recovery Checkpoints

| Error Scenario | Rule to Apply | Recovery Action |
|----------------|---------------|-----------------|
| **Wrong Command** | minsky-cli-usage | Check command reference and retry |
| **Path Resolution Issue** | session-first-workflow | Use absolute paths in session workspace |
| **File Editing Outside Session** | session-first-workflow | Cancel edits and switch to session workspace |
| **Status Tracking Issue** | task-status-protocol | Verify implementation state vs. tracked status |
| **PR Creation Problem** | pr-preparation-workflow | Check prerequisites and retry |
| **PR Approval Failure** | pr-preparation-workflow | Address merge conflicts or PR issues before retry |

## Rule Integration Table

| Rule | Primary Purpose | Integrates With |
|------|-----------------|----------------|
| minsky-cli-usage | Command usage | All workflow rules |
| minsky-session-management | Session operations | session-first-workflow, task-implementation-workflow |
| task-implementation-workflow | Task implementation | task-status-protocol, pr-preparation-workflow |
| task-status-protocol | Status management | task-status-verification, task-implementation-workflow |
| pr-preparation-workflow | PR preparation | task-implementation-workflow, pr-description-guidelines |
| session-first-workflow | File operations | minsky-session-management, task-implementation-workflow |

## Supporting Rules

The Minsky workflow is supported by these additional rules:

- [**session-first-workflow**](mdc:.cursor/rules/session-first-workflow.mdc) - Ensures all implementation work happens in dedicated sessions
- [**creating-tasks**](mdc:.cursor/rules/creating-tasks.mdc) - Guidelines for creating well-structured task specifications
- [**pr-description-guidelines**](mdc:.cursor/rules/pr-description-guidelines.mdc) - Format and content requirements for PR descriptions
- [**rules-management**](mdc:.cursor/rules/rules-management.mdc) - Guidelines for managing Minsky rules