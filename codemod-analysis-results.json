{
  "timestamp": "2025-07-09T21:18:35.624Z",
  "results": {
    "totalCodemods": 97,
    "byRiskLevel": {
      "HIGH": [
        {
          "name": "fix-mocking-safe-ast",
          "path": "codemods/fix-mocking-safe-ast.ts",
          "size": 6760,
          "approach": "AST",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Hardcoded file paths detected",
            "Hardcoded file paths detected",
            "Complex regex patterns: 4"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "HARDCODED_PATHS",
            "HARDCODED_PATHS",
            "COMPLEX_REGEX"
          ]
        },
        {
          "name": "fix-undef-variables",
          "path": "codemods/fix-undef-variables.ts",
          "size": 2548,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Complex regex patterns: 15",
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "COMPLEX_REGEX",
            "VARIABLE_FIXER"
          ]
        },
        {
          "name": "fix-this-prefix",
          "path": "codemods/fix-this-prefix.ts",
          "size": 3193,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Hardcoded file paths detected",
            "Complex regex patterns: 18"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "HARDCODED_PATHS",
            "COMPLEX_REGEX"
          ]
        },
        {
          "name": "fix-mocking-comprehensive-ast",
          "path": "codemods/fix-mocking-comprehensive-ast.ts",
          "size": 6151,
          "approach": "AST",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Hardcoded file paths detected",
            "Hardcoded file paths detected",
            "Complex regex patterns: 11",
            "Bulk/generic fixer pattern"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "HARDCODED_PATHS",
            "HARDCODED_PATHS",
            "COMPLEX_REGEX",
            "BULK_FIXER"
          ]
        },
        {
          "name": "fix-repository-naming-issues-improved",
          "path": "codemods/fix-repository-naming-issues-improved.ts",
          "size": 5365,
          "approach": "AST",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Hardcoded file paths detected",
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "HARDCODED_PATHS",
            "VARIABLE_FIXER"
          ]
        },
        {
          "name": "cleanup-triple-underscore-vars",
          "path": "codemods/cleanup-triple-underscore-vars.ts",
          "size": 3565,
          "approach": "HYBRID",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Hardcoded file paths detected",
            "Complex regex patterns: 4",
            "Variable/unused parameter fixer"
          ],
          "hasTest": true,
          "flags": [
            "HARDCODED_PATHS",
            "HARDCODED_PATHS",
            "COMPLEX_REGEX",
            "VARIABLE_FIXER"
          ],
          "consolidationGroup": "variable-naming"
        },
        {
          "name": "fix-undefined-variables-ast",
          "path": "codemods/fix-undefined-variables-ast.ts",
          "size": 8731,
          "approach": "AST",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Hardcoded file paths detected",
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "HARDCODED_PATHS",
            "VARIABLE_FIXER"
          ]
        },
        {
          "name": "fix-unused-simple",
          "path": "codemods/fix-unused-simple.ts",
          "size": 2194,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Complex regex patterns: 4",
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "COMPLEX_REGEX",
            "VARIABLE_FIXER"
          ]
        },
        {
          "name": "fix-unused-variables-simple",
          "path": "codemods/fix-unused-variables-simple.ts",
          "size": 3238,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Complex regex patterns: 4",
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "COMPLEX_REGEX",
            "VARIABLE_FIXER"
          ],
          "consolidationGroup": "unused-variables"
        },
        {
          "name": "simple-underscore-fix",
          "path": "codemods/simple-underscore-fix.ts",
          "size": 5062,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Hardcoded file paths detected",
            "Variable/unused parameter fixer"
          ],
          "hasTest": true,
          "flags": [
            "HARDCODED_PATHS",
            "HARDCODED_PATHS",
            "VARIABLE_FIXER"
          ],
          "consolidationGroup": "variable-naming"
        },
        {
          "name": "fix-unused-vars-targeted",
          "path": "codemods/fix-unused-vars-targeted.ts",
          "size": 4626,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Heuristic pattern matching detected",
            "Complex regex patterns: 4",
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "HEURISTIC_APPROACH",
            "COMPLEX_REGEX",
            "VARIABLE_FIXER"
          ],
          "consolidationGroup": "unused-variables"
        },
        {
          "name": "comprehensive-underscore-fix",
          "path": "codemods/comprehensive-underscore-fix.ts",
          "size": 11002,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Hardcoded file paths detected",
            "Complex regex patterns: 38",
            "Bulk/generic fixer pattern",
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "HARDCODED_PATHS",
            "COMPLEX_REGEX",
            "BULK_FIXER",
            "VARIABLE_FIXER"
          ],
          "consolidationGroup": "variable-naming"
        },
        {
          "name": "fix-parameter-underscore-mismatch",
          "path": "codemods/fix-parameter-underscore-mismatch.ts",
          "size": 5286,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Complex regex patterns: 6",
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "COMPLEX_REGEX",
            "VARIABLE_FIXER"
          ],
          "consolidationGroup": "variable-naming"
        },
        {
          "name": "fix-variable-naming-ast",
          "path": "codemods/fix-variable-naming-ast.ts",
          "size": 9487,
          "approach": "HYBRID",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Hardcoded file paths detected",
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "HARDCODED_PATHS",
            "VARIABLE_FIXER"
          ],
          "consolidationGroup": "variable-naming"
        },
        {
          "name": "fix-unused-vars-patterns",
          "path": "codemods/fix-unused-vars-patterns.ts",
          "size": 2563,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Hardcoded file paths detected",
            "Complex regex patterns: 5",
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "HARDCODED_PATHS",
            "COMPLEX_REGEX",
            "VARIABLE_FIXER"
          ],
          "consolidationGroup": "unused-variables"
        },
        {
          "name": "fix-ts2322-type-assignments-enhanced",
          "path": "codemods/fix-ts2322-type-assignments-enhanced.ts",
          "size": 6685,
          "approach": "AST",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Complex regex patterns: 8",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "COMPLEX_REGEX",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2322-errors"
        },
        {
          "name": "fix-remaining-variable-issues",
          "path": "codemods/fix-remaining-variable-issues.ts",
          "size": 4041,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Complex regex patterns: 15",
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "COMPLEX_REGEX",
            "VARIABLE_FIXER"
          ]
        },
        {
          "name": "fix-magic-numbers",
          "path": "codemods/fix-magic-numbers.ts",
          "size": 5996,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Hardcoded file paths detected",
            "Complex regex patterns: 7"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "HARDCODED_PATHS",
            "COMPLEX_REGEX"
          ]
        },
        {
          "name": "surgical-bulk-fixer",
          "path": "codemods/surgical-bulk-fixer.ts",
          "size": 6821,
          "approach": "AST",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Complex regex patterns: 14",
            "Bulk/generic fixer pattern"
          ],
          "hasTest": false,
          "flags": [
            "COMPLEX_REGEX",
            "BULK_FIXER"
          ],
          "consolidationGroup": "bulk-fixers"
        },
        {
          "name": "fix-magic-numbers-domain",
          "path": "codemods/fix-magic-numbers-domain.ts",
          "size": 3140,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Complex regex patterns: 8"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "COMPLEX_REGEX"
          ]
        },
        {
          "name": "fix-remaining-unused-vars",
          "path": "codemods/fix-remaining-unused-vars.ts",
          "size": 2672,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Complex regex patterns: 7",
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "COMPLEX_REGEX",
            "VARIABLE_FIXER"
          ],
          "consolidationGroup": "unused-variables"
        },
        {
          "name": "fix-repository-naming-issues",
          "path": "codemods/fix-repository-naming-issues.ts",
          "size": 3408,
          "approach": "HYBRID",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Hardcoded file paths detected",
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "HARDCODED_PATHS",
            "VARIABLE_FIXER"
          ]
        },
        {
          "name": "fix-ts2552-proper-resolution",
          "path": "codemods/fix-ts2552-proper-resolution.ts",
          "size": 5243,
          "approach": "AST",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Complex regex patterns: 3",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "COMPLEX_REGEX",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "typescript-errors"
        },
        {
          "name": "fix-magic-numbers-focused",
          "path": "codemods/fix-magic-numbers-focused.ts",
          "size": 4012,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Hardcoded file paths detected",
            "Complex regex patterns: 7"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "HARDCODED_PATHS",
            "COMPLEX_REGEX"
          ]
        },
        {
          "name": "fix-syntax-errors",
          "path": "codemods/fix-syntax-errors.ts",
          "size": 3019,
          "approach": "AST",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Complex regex patterns: 7"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "COMPLEX_REGEX"
          ]
        },
        {
          "name": "fix-incorrect-underscore-prefixes",
          "path": "codemods/fix-incorrect-underscore-prefixes.ts",
          "size": 3248,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Complex regex patterns: 21",
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "COMPLEX_REGEX",
            "VARIABLE_FIXER"
          ],
          "consolidationGroup": "variable-naming"
        },
        {
          "name": "fix-all-parsing-errors",
          "path": "codemods/fix-all-parsing-errors.ts",
          "size": 5195,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Complex regex patterns: 7",
            "Bulk/generic fixer pattern"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "COMPLEX_REGEX",
            "BULK_FIXER"
          ]
        },
        {
          "name": "targeted-bulk-fixer",
          "path": "codemods/targeted-bulk-fixer.ts",
          "size": 5146,
          "approach": "AST",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Bulk/generic fixer pattern"
          ],
          "hasTest": false,
          "flags": [
            "BULK_FIXER"
          ],
          "consolidationGroup": "bulk-fixers"
        },
        {
          "name": "fix-bun-compatibility-ast",
          "path": "codemods/fix-bun-compatibility-ast.ts",
          "size": 4181,
          "approach": "AST",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Heuristic pattern matching detected"
          ],
          "hasTest": false,
          "flags": [
            "HEURISTIC_APPROACH"
          ]
        },
        {
          "name": "fix-unused-vars-simple",
          "path": "codemods/fix-unused-vars-simple.ts",
          "size": 4524,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Hardcoded file paths detected",
            "Complex regex patterns: 4",
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "HARDCODED_PATHS",
            "COMPLEX_REGEX",
            "VARIABLE_FIXER"
          ],
          "consolidationGroup": "unused-variables"
        },
        {
          "name": "fix-explicit-any-comprehensive",
          "path": "codemods/fix-explicit-any-comprehensive.ts",
          "size": 3595,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Complex regex patterns: 19",
            "Bulk/generic fixer pattern"
          ],
          "hasTest": false,
          "flags": [
            "COMPLEX_REGEX",
            "BULK_FIXER"
          ]
        },
        {
          "name": "fix-explicit-any",
          "path": "codemods/fix-explicit-any.ts",
          "size": 3617,
          "approach": "HYBRID",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Hardcoded file paths detected",
            "Complex regex patterns: 18"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "HARDCODED_PATHS",
            "COMPLEX_REGEX"
          ]
        },
        {
          "name": "fix-common-undef",
          "path": "codemods/fix-common-undef.ts",
          "size": 4074,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Complex regex patterns: 29"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "COMPLEX_REGEX"
          ]
        },
        {
          "name": "fix-unused-vars-comprehensive",
          "path": "codemods/fix-unused-vars-comprehensive.ts",
          "size": 5365,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Hardcoded file paths detected",
            "Hardcoded file paths detected",
            "Complex regex patterns: 18",
            "Bulk/generic fixer pattern",
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "HARDCODED_PATHS",
            "HARDCODED_PATHS",
            "COMPLEX_REGEX",
            "BULK_FIXER",
            "VARIABLE_FIXER"
          ],
          "consolidationGroup": "unused-variables"
        },
        {
          "name": "fix-unused-variables-targeted",
          "path": "codemods/fix-unused-variables-targeted.ts",
          "size": 2286,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Hardcoded file paths detected",
            "Complex regex patterns: 7",
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "HARDCODED_PATHS",
            "COMPLEX_REGEX",
            "VARIABLE_FIXER"
          ],
          "consolidationGroup": "unused-variables"
        }
      ],
      "MEDIUM": [
        {
          "name": "fix-ts2322-type-assignment-errors",
          "path": "codemods/fix-ts2322-type-assignment-errors.ts",
          "size": 5565,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2322-errors"
        },
        {
          "name": "eliminate-ts2322-completely",
          "path": "codemods/eliminate-ts2322-completely.ts",
          "size": 12885,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2322-errors"
        },
        {
          "name": "fix-unknown-type-assertions",
          "path": "codemods/fix-unknown-type-assertions.ts",
          "size": 4784,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS"
          ]
        },
        {
          "name": "fix-ts2339-property-not-exist",
          "path": "codemods/fix-ts2339-property-not-exist.ts",
          "size": 9459,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "typescript-errors"
        },
        {
          "name": "source-files-fixer",
          "path": "codemods/source-files-fixer.ts",
          "size": 4962,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS"
          ]
        },
        {
          "name": "fix-ts2552-name-resolution",
          "path": "codemods/fix-ts2552-name-resolution.ts",
          "size": 3811,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "typescript-errors"
        },
        {
          "name": "eliminate-ts2345-completely",
          "path": "codemods/eliminate-ts2345-completely.ts",
          "size": 7623,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2345-errors"
        },
        {
          "name": "fix-missing-required-properties",
          "path": "codemods/fix-missing-required-properties.ts",
          "size": 7642,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS"
          ]
        },
        {
          "name": "fix-targeted-parsing-errors",
          "path": "codemods/fix-targeted-parsing-errors.ts",
          "size": 6371,
          "approach": "REGEX",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Complex regex patterns: 5"
          ],
          "hasTest": false,
          "flags": [
            "COMPLEX_REGEX"
          ]
        },
        {
          "name": "fix-property-name-corrections",
          "path": "codemods/fix-property-name-corrections.ts",
          "size": 3900,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS"
          ]
        },
        {
          "name": "fix-postgres-storage-types",
          "path": "codemods/fix-postgres-storage-types.ts",
          "size": 6511,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS"
          ]
        },
        {
          "name": "fix-mocking-unknown-types",
          "path": "codemods/fix-mocking-unknown-types.ts",
          "size": 3176,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS"
          ]
        },
        {
          "name": "fix-magic-numbers-remaining",
          "path": "codemods/fix-magic-numbers-remaining.ts",
          "size": 3910,
          "approach": "REGEX",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Complex regex patterns: 6"
          ],
          "hasTest": false,
          "flags": [
            "COMPLEX_REGEX"
          ]
        },
        {
          "name": "fix-current-globals",
          "path": "codemods/fix-current-globals.ts",
          "size": 2417,
          "approach": "REGEX",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Complex regex patterns: 4"
          ],
          "hasTest": false,
          "flags": [
            "COMPLEX_REGEX"
          ]
        },
        {
          "name": "fix-unused-ts-expect-error",
          "path": "codemods/fix-unused-ts-expect-error.ts",
          "size": 3077,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "VARIABLE_FIXER"
          ]
        },
        {
          "name": "fix-undefined-issues",
          "path": "codemods/fix-undefined-issues.ts",
          "size": 6241,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS"
          ]
        },
        {
          "name": "conservative-ts2345-round2",
          "path": "codemods/conservative-ts2345-round2.ts",
          "size": 9257,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2345-errors"
        },
        {
          "name": "fix-ts2345-targeted",
          "path": "codemods/fix-ts2345-targeted.ts",
          "size": 5706,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2345-errors"
        },
        {
          "name": "fix-type-assertions",
          "path": "codemods/fix-type-assertions.ts",
          "size": 6504,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS"
          ]
        },
        {
          "name": "fix-ts2322-remaining-ast",
          "path": "codemods/fix-ts2322-remaining-ast.ts",
          "size": 8484,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2322-errors"
        },
        {
          "name": "fix-ts2322-type-assignments",
          "path": "codemods/fix-ts2322-type-assignments.ts",
          "size": 7803,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2322-errors"
        },
        {
          "name": "fix-explicit-any-types-proven",
          "path": "codemods/fix-explicit-any-types-proven.ts",
          "size": 6411,
          "approach": "HYBRID",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Complex regex patterns: 12"
          ],
          "hasTest": false,
          "flags": [
            "COMPLEX_REGEX"
          ]
        },
        {
          "name": "fix-ts2322-type-not-assignable",
          "path": "codemods/fix-ts2322-type-not-assignable.ts",
          "size": 12366,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2322-errors"
        },
        {
          "name": "conservative-ts2345-fixer",
          "path": "codemods/conservative-ts2345-fixer.ts",
          "size": 7977,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2345-errors"
        },
        {
          "name": "fix-command-registration-overloads",
          "path": "codemods/fix-command-registration-overloads.ts",
          "size": 5212,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS"
          ]
        },
        {
          "name": "modern-variable-naming-fix",
          "path": "codemods/modern-variable-naming-fix.ts",
          "size": 5004,
          "approach": "HYBRID",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Variable/unused parameter fixer"
          ],
          "hasTest": true,
          "flags": [
            "HARDCODED_PATHS",
            "VARIABLE_FIXER"
          ],
          "consolidationGroup": "variable-naming"
        },
        {
          "name": "fix-ts2322-corrected-patterns",
          "path": "codemods/fix-ts2322-corrected-patterns.ts",
          "size": 6984,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2322-errors"
        },
        {
          "name": "fix-session-ts-issues",
          "path": "codemods/fix-session-ts-issues.ts",
          "size": 5033,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS"
          ]
        },
        {
          "name": "fix-ts2769-overload-mismatch",
          "path": "codemods/fix-ts2769-overload-mismatch.ts",
          "size": 10390,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "typescript-errors"
        },
        {
          "name": "fix-arrow-function-parameters",
          "path": "codemods/fix-arrow-function-parameters.ts",
          "size": 2534,
          "approach": "REGEX",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS"
          ]
        },
        {
          "name": "fix-ts2564-property-initialization",
          "path": "codemods/fix-ts2564-property-initialization.ts",
          "size": 4334,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": true,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2564-errors"
        },
        {
          "name": "fix-ts18046-unknown-types",
          "path": "codemods/fix-ts18046-unknown-types.ts",
          "size": 7017,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "typescript-errors"
        },
        {
          "name": "fix-rules-type-assertions",
          "path": "codemods/fix-rules-type-assertions.ts",
          "size": 3657,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS"
          ]
        },
        {
          "name": "fix-mocking-simple",
          "path": "codemods/fix-mocking-simple.ts",
          "size": 3743,
          "approach": "HYBRID",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Complex regex patterns: 6"
          ],
          "hasTest": false,
          "flags": [
            "COMPLEX_REGEX"
          ]
        },
        {
          "name": "fix-ts2345-argument-errors",
          "path": "codemods/fix-ts2345-argument-errors.ts",
          "size": 6044,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2345-errors"
        },
        {
          "name": "fix-ts2322-targeted-ast",
          "path": "codemods/fix-ts2322-targeted-ast.ts",
          "size": 6552,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2322-errors"
        },
        {
          "name": "fix-ts2322-targeted",
          "path": "codemods/fix-ts2322-targeted.ts",
          "size": 9436,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2322-errors"
        },
        {
          "name": "fix-final-syntax-errors",
          "path": "codemods/fix-final-syntax-errors.ts",
          "size": 3582,
          "approach": "REGEX",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Complex regex patterns: 13"
          ],
          "hasTest": false,
          "flags": [
            "COMPLEX_REGEX"
          ]
        },
        {
          "name": "fix-dependencies-mocks",
          "path": "codemods/fix-dependencies-mocks.ts",
          "size": 2700,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS"
          ]
        },
        {
          "name": "fix-quotes-to-double",
          "path": "codemods/fix-quotes-to-double.ts",
          "size": 3759,
          "approach": "REGEX",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Hardcoded file paths detected"
          ],
          "hasTest": true,
          "flags": [
            "HARDCODED_PATHS",
            "HARDCODED_PATHS"
          ]
        },
        {
          "name": "fix-ts2322-remaining",
          "path": "codemods/fix-ts2322-remaining.ts",
          "size": 7679,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2322-errors"
        },
        {
          "name": "fix-underscore-prefix",
          "path": "codemods/fix-underscore-prefix.ts",
          "size": 3298,
          "approach": "REGEX",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "VARIABLE_FIXER"
          ],
          "consolidationGroup": "variable-naming"
        },
        {
          "name": "fix-ts2322-precise-ast",
          "path": "codemods/fix-ts2322-precise-ast.ts",
          "size": 7094,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2322-errors"
        },
        {
          "name": "fix-ts2322-current-patterns",
          "path": "codemods/fix-ts2322-current-patterns.ts",
          "size": 8369,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2322-errors"
        },
        {
          "name": "fix-bun-types-simple-ast",
          "path": "codemods/fix-bun-types-simple-ast.ts",
          "size": 3927,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS"
          ]
        },
        {
          "name": "fix-explicit-any-simple",
          "path": "codemods/fix-explicit-any-simple.ts",
          "size": 4346,
          "approach": "HYBRID",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Complex regex patterns: 4"
          ],
          "hasTest": true,
          "flags": [
            "COMPLEX_REGEX"
          ]
        },
        {
          "name": "fix-ts18048-precise-patterns",
          "path": "codemods/fix-ts18048-precise-patterns.ts",
          "size": 6593,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "typescript-errors"
        },
        {
          "name": "fix-mock-object-properties",
          "path": "codemods/fix-mock-object-properties.ts",
          "size": 3329,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS"
          ]
        },
        {
          "name": "fix-result-underscore-mismatch",
          "path": "codemods/fix-result-underscore-mismatch.ts",
          "size": 1833,
          "approach": "REGEX",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "VARIABLE_FIXER"
          ],
          "consolidationGroup": "variable-naming"
        },
        {
          "name": "fix-ts2353-object-literals",
          "path": "codemods/fix-ts2353-object-literals.ts",
          "size": 7801,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "typescript-errors"
        },
        {
          "name": "main-source-fixer",
          "path": "codemods/main-source-fixer.ts",
          "size": 5832,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Hardcoded file paths detected"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "HARDCODED_PATHS"
          ]
        },
        {
          "name": "eliminate-ts2353-completely",
          "path": "codemods/eliminate-ts2353-completely.ts",
          "size": 4820,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "typescript-errors"
        },
        {
          "name": "fix-mock-function-signatures",
          "path": "codemods/fix-mock-function-signatures.ts",
          "size": 10987,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS"
          ]
        },
        {
          "name": "fix-ts2345-argument-types",
          "path": "codemods/fix-ts2345-argument-types.ts",
          "size": 9203,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2345-errors"
        },
        {
          "name": "fix-ts18048-undefined-errors",
          "path": "codemods/fix-ts18048-undefined-errors.ts",
          "size": 6783,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "typescript-errors"
        },
        {
          "name": "fix-ts2322-ast-based",
          "path": "codemods/fix-ts2322-ast-based.ts",
          "size": 9579,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2322-errors"
        },
        {
          "name": "fix-mocking-unknown-ast",
          "path": "codemods/fix-mocking-unknown-ast.ts",
          "size": 4854,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS"
          ]
        }
      ],
      "LOW": [
        {
          "name": "fix-mocking-unknown-types-ast",
          "path": "codemods/fix-mocking-unknown-types-ast.ts",
          "size": 4876,
          "approach": "AST",
          "riskLevel": "LOW",
          "riskFactors": [],
          "hasTest": false,
          "flags": []
        },
        {
          "name": "fix-indentation",
          "path": "codemods/fix-indentation.ts",
          "size": 2441,
          "approach": "HYBRID",
          "riskLevel": "LOW",
          "riskFactors": [],
          "hasTest": true,
          "flags": [],
          "consolidationGroup": "formatting"
        },
        {
          "name": "fix-bun-process-types",
          "path": "codemods/fix-bun-process-types.ts",
          "size": 2298,
          "approach": "AST",
          "riskLevel": "LOW",
          "riskFactors": [],
          "hasTest": false,
          "flags": []
        },
        {
          "name": "fix-buffer-string-issues",
          "path": "codemods/fix-buffer-string-issues.ts",
          "size": 2965,
          "approach": "AST",
          "riskLevel": "LOW",
          "riskFactors": [],
          "hasTest": false,
          "flags": []
        },
        {
          "name": "fix-common-type-issues",
          "path": "codemods/fix-common-type-issues.ts",
          "size": 1,
          "approach": "UNKNOWN",
          "riskLevel": "LOW",
          "riskFactors": [],
          "hasTest": false,
          "flags": []
        }
      ]
    },
    "byApproach": {
      "AST": [
        {
          "name": "fix-ts2322-type-assignment-errors",
          "path": "codemods/fix-ts2322-type-assignment-errors.ts",
          "size": 5565,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2322-errors"
        },
        {
          "name": "eliminate-ts2322-completely",
          "path": "codemods/eliminate-ts2322-completely.ts",
          "size": 12885,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2322-errors"
        },
        {
          "name": "fix-unknown-type-assertions",
          "path": "codemods/fix-unknown-type-assertions.ts",
          "size": 4784,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS"
          ]
        },
        {
          "name": "fix-ts2339-property-not-exist",
          "path": "codemods/fix-ts2339-property-not-exist.ts",
          "size": 9459,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "typescript-errors"
        },
        {
          "name": "source-files-fixer",
          "path": "codemods/source-files-fixer.ts",
          "size": 4962,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS"
          ]
        },
        {
          "name": "fix-ts2552-name-resolution",
          "path": "codemods/fix-ts2552-name-resolution.ts",
          "size": 3811,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "typescript-errors"
        },
        {
          "name": "eliminate-ts2345-completely",
          "path": "codemods/eliminate-ts2345-completely.ts",
          "size": 7623,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2345-errors"
        },
        {
          "name": "fix-missing-required-properties",
          "path": "codemods/fix-missing-required-properties.ts",
          "size": 7642,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS"
          ]
        },
        {
          "name": "fix-mocking-safe-ast",
          "path": "codemods/fix-mocking-safe-ast.ts",
          "size": 6760,
          "approach": "AST",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Hardcoded file paths detected",
            "Hardcoded file paths detected",
            "Complex regex patterns: 4"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "HARDCODED_PATHS",
            "HARDCODED_PATHS",
            "COMPLEX_REGEX"
          ]
        },
        {
          "name": "fix-mocking-comprehensive-ast",
          "path": "codemods/fix-mocking-comprehensive-ast.ts",
          "size": 6151,
          "approach": "AST",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Hardcoded file paths detected",
            "Hardcoded file paths detected",
            "Complex regex patterns: 11",
            "Bulk/generic fixer pattern"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "HARDCODED_PATHS",
            "HARDCODED_PATHS",
            "COMPLEX_REGEX",
            "BULK_FIXER"
          ]
        },
        {
          "name": "fix-repository-naming-issues-improved",
          "path": "codemods/fix-repository-naming-issues-improved.ts",
          "size": 5365,
          "approach": "AST",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Hardcoded file paths detected",
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "HARDCODED_PATHS",
            "VARIABLE_FIXER"
          ]
        },
        {
          "name": "fix-property-name-corrections",
          "path": "codemods/fix-property-name-corrections.ts",
          "size": 3900,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS"
          ]
        },
        {
          "name": "fix-postgres-storage-types",
          "path": "codemods/fix-postgres-storage-types.ts",
          "size": 6511,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS"
          ]
        },
        {
          "name": "fix-mocking-unknown-types",
          "path": "codemods/fix-mocking-unknown-types.ts",
          "size": 3176,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS"
          ]
        },
        {
          "name": "fix-undefined-variables-ast",
          "path": "codemods/fix-undefined-variables-ast.ts",
          "size": 8731,
          "approach": "AST",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Hardcoded file paths detected",
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "HARDCODED_PATHS",
            "VARIABLE_FIXER"
          ]
        },
        {
          "name": "fix-unused-ts-expect-error",
          "path": "codemods/fix-unused-ts-expect-error.ts",
          "size": 3077,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "VARIABLE_FIXER"
          ]
        },
        {
          "name": "fix-undefined-issues",
          "path": "codemods/fix-undefined-issues.ts",
          "size": 6241,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS"
          ]
        },
        {
          "name": "conservative-ts2345-round2",
          "path": "codemods/conservative-ts2345-round2.ts",
          "size": 9257,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2345-errors"
        },
        {
          "name": "fix-ts2345-targeted",
          "path": "codemods/fix-ts2345-targeted.ts",
          "size": 5706,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2345-errors"
        },
        {
          "name": "fix-type-assertions",
          "path": "codemods/fix-type-assertions.ts",
          "size": 6504,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS"
          ]
        },
        {
          "name": "fix-ts2322-remaining-ast",
          "path": "codemods/fix-ts2322-remaining-ast.ts",
          "size": 8484,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2322-errors"
        },
        {
          "name": "fix-mocking-unknown-types-ast",
          "path": "codemods/fix-mocking-unknown-types-ast.ts",
          "size": 4876,
          "approach": "AST",
          "riskLevel": "LOW",
          "riskFactors": [],
          "hasTest": false,
          "flags": []
        },
        {
          "name": "fix-ts2322-type-assignments",
          "path": "codemods/fix-ts2322-type-assignments.ts",
          "size": 7803,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2322-errors"
        },
        {
          "name": "fix-ts2322-type-assignments-enhanced",
          "path": "codemods/fix-ts2322-type-assignments-enhanced.ts",
          "size": 6685,
          "approach": "AST",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Complex regex patterns: 8",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "COMPLEX_REGEX",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2322-errors"
        },
        {
          "name": "surgical-bulk-fixer",
          "path": "codemods/surgical-bulk-fixer.ts",
          "size": 6821,
          "approach": "AST",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Complex regex patterns: 14",
            "Bulk/generic fixer pattern"
          ],
          "hasTest": false,
          "flags": [
            "COMPLEX_REGEX",
            "BULK_FIXER"
          ],
          "consolidationGroup": "bulk-fixers"
        },
        {
          "name": "fix-ts2322-type-not-assignable",
          "path": "codemods/fix-ts2322-type-not-assignable.ts",
          "size": 12366,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2322-errors"
        },
        {
          "name": "conservative-ts2345-fixer",
          "path": "codemods/conservative-ts2345-fixer.ts",
          "size": 7977,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2345-errors"
        },
        {
          "name": "fix-command-registration-overloads",
          "path": "codemods/fix-command-registration-overloads.ts",
          "size": 5212,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS"
          ]
        },
        {
          "name": "fix-ts2322-corrected-patterns",
          "path": "codemods/fix-ts2322-corrected-patterns.ts",
          "size": 6984,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2322-errors"
        },
        {
          "name": "fix-session-ts-issues",
          "path": "codemods/fix-session-ts-issues.ts",
          "size": 5033,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS"
          ]
        },
        {
          "name": "fix-ts2769-overload-mismatch",
          "path": "codemods/fix-ts2769-overload-mismatch.ts",
          "size": 10390,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "typescript-errors"
        },
        {
          "name": "fix-ts2564-property-initialization",
          "path": "codemods/fix-ts2564-property-initialization.ts",
          "size": 4334,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": true,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2564-errors"
        },
        {
          "name": "fix-ts2552-proper-resolution",
          "path": "codemods/fix-ts2552-proper-resolution.ts",
          "size": 5243,
          "approach": "AST",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Complex regex patterns: 3",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "COMPLEX_REGEX",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "typescript-errors"
        },
        {
          "name": "fix-bun-process-types",
          "path": "codemods/fix-bun-process-types.ts",
          "size": 2298,
          "approach": "AST",
          "riskLevel": "LOW",
          "riskFactors": [],
          "hasTest": false,
          "flags": []
        },
        {
          "name": "fix-ts18046-unknown-types",
          "path": "codemods/fix-ts18046-unknown-types.ts",
          "size": 7017,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "typescript-errors"
        },
        {
          "name": "fix-rules-type-assertions",
          "path": "codemods/fix-rules-type-assertions.ts",
          "size": 3657,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS"
          ]
        },
        {
          "name": "fix-ts2345-argument-errors",
          "path": "codemods/fix-ts2345-argument-errors.ts",
          "size": 6044,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2345-errors"
        },
        {
          "name": "fix-ts2322-targeted-ast",
          "path": "codemods/fix-ts2322-targeted-ast.ts",
          "size": 6552,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2322-errors"
        },
        {
          "name": "fix-syntax-errors",
          "path": "codemods/fix-syntax-errors.ts",
          "size": 3019,
          "approach": "AST",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Complex regex patterns: 7"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "COMPLEX_REGEX"
          ]
        },
        {
          "name": "fix-ts2322-targeted",
          "path": "codemods/fix-ts2322-targeted.ts",
          "size": 9436,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2322-errors"
        },
        {
          "name": "fix-dependencies-mocks",
          "path": "codemods/fix-dependencies-mocks.ts",
          "size": 2700,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS"
          ]
        },
        {
          "name": "fix-ts2322-remaining",
          "path": "codemods/fix-ts2322-remaining.ts",
          "size": 7679,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2322-errors"
        },
        {
          "name": "targeted-bulk-fixer",
          "path": "codemods/targeted-bulk-fixer.ts",
          "size": 5146,
          "approach": "AST",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Bulk/generic fixer pattern"
          ],
          "hasTest": false,
          "flags": [
            "BULK_FIXER"
          ],
          "consolidationGroup": "bulk-fixers"
        },
        {
          "name": "fix-ts2322-precise-ast",
          "path": "codemods/fix-ts2322-precise-ast.ts",
          "size": 7094,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2322-errors"
        },
        {
          "name": "fix-bun-compatibility-ast",
          "path": "codemods/fix-bun-compatibility-ast.ts",
          "size": 4181,
          "approach": "AST",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Heuristic pattern matching detected"
          ],
          "hasTest": false,
          "flags": [
            "HEURISTIC_APPROACH"
          ]
        },
        {
          "name": "fix-ts2322-current-patterns",
          "path": "codemods/fix-ts2322-current-patterns.ts",
          "size": 8369,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2322-errors"
        },
        {
          "name": "fix-bun-types-simple-ast",
          "path": "codemods/fix-bun-types-simple-ast.ts",
          "size": 3927,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS"
          ]
        },
        {
          "name": "fix-ts18048-precise-patterns",
          "path": "codemods/fix-ts18048-precise-patterns.ts",
          "size": 6593,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "typescript-errors"
        },
        {
          "name": "fix-mock-object-properties",
          "path": "codemods/fix-mock-object-properties.ts",
          "size": 3329,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS"
          ]
        },
        {
          "name": "fix-buffer-string-issues",
          "path": "codemods/fix-buffer-string-issues.ts",
          "size": 2965,
          "approach": "AST",
          "riskLevel": "LOW",
          "riskFactors": [],
          "hasTest": false,
          "flags": []
        },
        {
          "name": "fix-ts2353-object-literals",
          "path": "codemods/fix-ts2353-object-literals.ts",
          "size": 7801,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "typescript-errors"
        },
        {
          "name": "main-source-fixer",
          "path": "codemods/main-source-fixer.ts",
          "size": 5832,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Hardcoded file paths detected"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "HARDCODED_PATHS"
          ]
        },
        {
          "name": "eliminate-ts2353-completely",
          "path": "codemods/eliminate-ts2353-completely.ts",
          "size": 4820,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "typescript-errors"
        },
        {
          "name": "fix-mock-function-signatures",
          "path": "codemods/fix-mock-function-signatures.ts",
          "size": 10987,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS"
          ]
        },
        {
          "name": "fix-ts2345-argument-types",
          "path": "codemods/fix-ts2345-argument-types.ts",
          "size": 9203,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2345-errors"
        },
        {
          "name": "fix-ts18048-undefined-errors",
          "path": "codemods/fix-ts18048-undefined-errors.ts",
          "size": 6783,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "typescript-errors"
        },
        {
          "name": "fix-ts2322-ast-based",
          "path": "codemods/fix-ts2322-ast-based.ts",
          "size": 9579,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2322-errors"
        },
        {
          "name": "fix-mocking-unknown-ast",
          "path": "codemods/fix-mocking-unknown-ast.ts",
          "size": 4854,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS"
          ]
        }
      ],
      "REGEX": [
        {
          "name": "fix-undef-variables",
          "path": "codemods/fix-undef-variables.ts",
          "size": 2548,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Complex regex patterns: 15",
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "COMPLEX_REGEX",
            "VARIABLE_FIXER"
          ]
        },
        {
          "name": "fix-this-prefix",
          "path": "codemods/fix-this-prefix.ts",
          "size": 3193,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Hardcoded file paths detected",
            "Complex regex patterns: 18"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "HARDCODED_PATHS",
            "COMPLEX_REGEX"
          ]
        },
        {
          "name": "fix-targeted-parsing-errors",
          "path": "codemods/fix-targeted-parsing-errors.ts",
          "size": 6371,
          "approach": "REGEX",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Complex regex patterns: 5"
          ],
          "hasTest": false,
          "flags": [
            "COMPLEX_REGEX"
          ]
        },
        {
          "name": "fix-magic-numbers-remaining",
          "path": "codemods/fix-magic-numbers-remaining.ts",
          "size": 3910,
          "approach": "REGEX",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Complex regex patterns: 6"
          ],
          "hasTest": false,
          "flags": [
            "COMPLEX_REGEX"
          ]
        },
        {
          "name": "fix-unused-simple",
          "path": "codemods/fix-unused-simple.ts",
          "size": 2194,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Complex regex patterns: 4",
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "COMPLEX_REGEX",
            "VARIABLE_FIXER"
          ]
        },
        {
          "name": "fix-unused-variables-simple",
          "path": "codemods/fix-unused-variables-simple.ts",
          "size": 3238,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Complex regex patterns: 4",
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "COMPLEX_REGEX",
            "VARIABLE_FIXER"
          ],
          "consolidationGroup": "unused-variables"
        },
        {
          "name": "fix-current-globals",
          "path": "codemods/fix-current-globals.ts",
          "size": 2417,
          "approach": "REGEX",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Complex regex patterns: 4"
          ],
          "hasTest": false,
          "flags": [
            "COMPLEX_REGEX"
          ]
        },
        {
          "name": "simple-underscore-fix",
          "path": "codemods/simple-underscore-fix.ts",
          "size": 5062,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Hardcoded file paths detected",
            "Variable/unused parameter fixer"
          ],
          "hasTest": true,
          "flags": [
            "HARDCODED_PATHS",
            "HARDCODED_PATHS",
            "VARIABLE_FIXER"
          ],
          "consolidationGroup": "variable-naming"
        },
        {
          "name": "fix-unused-vars-targeted",
          "path": "codemods/fix-unused-vars-targeted.ts",
          "size": 4626,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Heuristic pattern matching detected",
            "Complex regex patterns: 4",
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "HEURISTIC_APPROACH",
            "COMPLEX_REGEX",
            "VARIABLE_FIXER"
          ],
          "consolidationGroup": "unused-variables"
        },
        {
          "name": "comprehensive-underscore-fix",
          "path": "codemods/comprehensive-underscore-fix.ts",
          "size": 11002,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Hardcoded file paths detected",
            "Complex regex patterns: 38",
            "Bulk/generic fixer pattern",
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "HARDCODED_PATHS",
            "COMPLEX_REGEX",
            "BULK_FIXER",
            "VARIABLE_FIXER"
          ],
          "consolidationGroup": "variable-naming"
        },
        {
          "name": "fix-parameter-underscore-mismatch",
          "path": "codemods/fix-parameter-underscore-mismatch.ts",
          "size": 5286,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Complex regex patterns: 6",
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "COMPLEX_REGEX",
            "VARIABLE_FIXER"
          ],
          "consolidationGroup": "variable-naming"
        },
        {
          "name": "fix-unused-vars-patterns",
          "path": "codemods/fix-unused-vars-patterns.ts",
          "size": 2563,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Hardcoded file paths detected",
            "Complex regex patterns: 5",
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "HARDCODED_PATHS",
            "COMPLEX_REGEX",
            "VARIABLE_FIXER"
          ],
          "consolidationGroup": "unused-variables"
        },
        {
          "name": "fix-remaining-variable-issues",
          "path": "codemods/fix-remaining-variable-issues.ts",
          "size": 4041,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Complex regex patterns: 15",
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "COMPLEX_REGEX",
            "VARIABLE_FIXER"
          ]
        },
        {
          "name": "fix-magic-numbers",
          "path": "codemods/fix-magic-numbers.ts",
          "size": 5996,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Hardcoded file paths detected",
            "Complex regex patterns: 7"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "HARDCODED_PATHS",
            "COMPLEX_REGEX"
          ]
        },
        {
          "name": "fix-magic-numbers-domain",
          "path": "codemods/fix-magic-numbers-domain.ts",
          "size": 3140,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Complex regex patterns: 8"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "COMPLEX_REGEX"
          ]
        },
        {
          "name": "fix-arrow-function-parameters",
          "path": "codemods/fix-arrow-function-parameters.ts",
          "size": 2534,
          "approach": "REGEX",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS"
          ]
        },
        {
          "name": "fix-remaining-unused-vars",
          "path": "codemods/fix-remaining-unused-vars.ts",
          "size": 2672,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Complex regex patterns: 7",
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "COMPLEX_REGEX",
            "VARIABLE_FIXER"
          ],
          "consolidationGroup": "unused-variables"
        },
        {
          "name": "fix-magic-numbers-focused",
          "path": "codemods/fix-magic-numbers-focused.ts",
          "size": 4012,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Hardcoded file paths detected",
            "Complex regex patterns: 7"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "HARDCODED_PATHS",
            "COMPLEX_REGEX"
          ]
        },
        {
          "name": "fix-incorrect-underscore-prefixes",
          "path": "codemods/fix-incorrect-underscore-prefixes.ts",
          "size": 3248,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Complex regex patterns: 21",
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "COMPLEX_REGEX",
            "VARIABLE_FIXER"
          ],
          "consolidationGroup": "variable-naming"
        },
        {
          "name": "fix-final-syntax-errors",
          "path": "codemods/fix-final-syntax-errors.ts",
          "size": 3582,
          "approach": "REGEX",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Complex regex patterns: 13"
          ],
          "hasTest": false,
          "flags": [
            "COMPLEX_REGEX"
          ]
        },
        {
          "name": "fix-all-parsing-errors",
          "path": "codemods/fix-all-parsing-errors.ts",
          "size": 5195,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Complex regex patterns: 7",
            "Bulk/generic fixer pattern"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "COMPLEX_REGEX",
            "BULK_FIXER"
          ]
        },
        {
          "name": "fix-quotes-to-double",
          "path": "codemods/fix-quotes-to-double.ts",
          "size": 3759,
          "approach": "REGEX",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Hardcoded file paths detected"
          ],
          "hasTest": true,
          "flags": [
            "HARDCODED_PATHS",
            "HARDCODED_PATHS"
          ]
        },
        {
          "name": "fix-underscore-prefix",
          "path": "codemods/fix-underscore-prefix.ts",
          "size": 3298,
          "approach": "REGEX",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "VARIABLE_FIXER"
          ],
          "consolidationGroup": "variable-naming"
        },
        {
          "name": "fix-unused-vars-simple",
          "path": "codemods/fix-unused-vars-simple.ts",
          "size": 4524,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Hardcoded file paths detected",
            "Complex regex patterns: 4",
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "HARDCODED_PATHS",
            "COMPLEX_REGEX",
            "VARIABLE_FIXER"
          ],
          "consolidationGroup": "unused-variables"
        },
        {
          "name": "fix-explicit-any-comprehensive",
          "path": "codemods/fix-explicit-any-comprehensive.ts",
          "size": 3595,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Complex regex patterns: 19",
            "Bulk/generic fixer pattern"
          ],
          "hasTest": false,
          "flags": [
            "COMPLEX_REGEX",
            "BULK_FIXER"
          ]
        },
        {
          "name": "fix-result-underscore-mismatch",
          "path": "codemods/fix-result-underscore-mismatch.ts",
          "size": 1833,
          "approach": "REGEX",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "VARIABLE_FIXER"
          ],
          "consolidationGroup": "variable-naming"
        },
        {
          "name": "fix-common-undef",
          "path": "codemods/fix-common-undef.ts",
          "size": 4074,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Complex regex patterns: 29"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "COMPLEX_REGEX"
          ]
        },
        {
          "name": "fix-unused-vars-comprehensive",
          "path": "codemods/fix-unused-vars-comprehensive.ts",
          "size": 5365,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Hardcoded file paths detected",
            "Hardcoded file paths detected",
            "Complex regex patterns: 18",
            "Bulk/generic fixer pattern",
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "HARDCODED_PATHS",
            "HARDCODED_PATHS",
            "COMPLEX_REGEX",
            "BULK_FIXER",
            "VARIABLE_FIXER"
          ],
          "consolidationGroup": "unused-variables"
        },
        {
          "name": "fix-unused-variables-targeted",
          "path": "codemods/fix-unused-variables-targeted.ts",
          "size": 2286,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Hardcoded file paths detected",
            "Complex regex patterns: 7",
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "HARDCODED_PATHS",
            "COMPLEX_REGEX",
            "VARIABLE_FIXER"
          ],
          "consolidationGroup": "unused-variables"
        }
      ],
      "HYBRID": [
        {
          "name": "cleanup-triple-underscore-vars",
          "path": "codemods/cleanup-triple-underscore-vars.ts",
          "size": 3565,
          "approach": "HYBRID",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Hardcoded file paths detected",
            "Complex regex patterns: 4",
            "Variable/unused parameter fixer"
          ],
          "hasTest": true,
          "flags": [
            "HARDCODED_PATHS",
            "HARDCODED_PATHS",
            "COMPLEX_REGEX",
            "VARIABLE_FIXER"
          ],
          "consolidationGroup": "variable-naming"
        },
        {
          "name": "fix-variable-naming-ast",
          "path": "codemods/fix-variable-naming-ast.ts",
          "size": 9487,
          "approach": "HYBRID",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Hardcoded file paths detected",
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "HARDCODED_PATHS",
            "VARIABLE_FIXER"
          ],
          "consolidationGroup": "variable-naming"
        },
        {
          "name": "fix-explicit-any-types-proven",
          "path": "codemods/fix-explicit-any-types-proven.ts",
          "size": 6411,
          "approach": "HYBRID",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Complex regex patterns: 12"
          ],
          "hasTest": false,
          "flags": [
            "COMPLEX_REGEX"
          ]
        },
        {
          "name": "modern-variable-naming-fix",
          "path": "codemods/modern-variable-naming-fix.ts",
          "size": 5004,
          "approach": "HYBRID",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Variable/unused parameter fixer"
          ],
          "hasTest": true,
          "flags": [
            "HARDCODED_PATHS",
            "VARIABLE_FIXER"
          ],
          "consolidationGroup": "variable-naming"
        },
        {
          "name": "fix-repository-naming-issues",
          "path": "codemods/fix-repository-naming-issues.ts",
          "size": 3408,
          "approach": "HYBRID",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Hardcoded file paths detected",
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "HARDCODED_PATHS",
            "VARIABLE_FIXER"
          ]
        },
        {
          "name": "fix-indentation",
          "path": "codemods/fix-indentation.ts",
          "size": 2441,
          "approach": "HYBRID",
          "riskLevel": "LOW",
          "riskFactors": [],
          "hasTest": true,
          "flags": [],
          "consolidationGroup": "formatting"
        },
        {
          "name": "fix-mocking-simple",
          "path": "codemods/fix-mocking-simple.ts",
          "size": 3743,
          "approach": "HYBRID",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Complex regex patterns: 6"
          ],
          "hasTest": false,
          "flags": [
            "COMPLEX_REGEX"
          ]
        },
        {
          "name": "fix-explicit-any",
          "path": "codemods/fix-explicit-any.ts",
          "size": 3617,
          "approach": "HYBRID",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Hardcoded file paths detected",
            "Complex regex patterns: 18"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "HARDCODED_PATHS",
            "COMPLEX_REGEX"
          ]
        },
        {
          "name": "fix-explicit-any-simple",
          "path": "codemods/fix-explicit-any-simple.ts",
          "size": 4346,
          "approach": "HYBRID",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Complex regex patterns: 4"
          ],
          "hasTest": true,
          "flags": [
            "COMPLEX_REGEX"
          ]
        }
      ],
      "UNKNOWN": [
        {
          "name": "fix-common-type-issues",
          "path": "codemods/fix-common-type-issues.ts",
          "size": 1,
          "approach": "UNKNOWN",
          "riskLevel": "LOW",
          "riskFactors": [],
          "hasTest": false,
          "flags": []
        }
      ]
    },
    "consolidationGroups": {
      "ts2322-errors": [
        {
          "name": "fix-ts2322-type-assignment-errors",
          "path": "codemods/fix-ts2322-type-assignment-errors.ts",
          "size": 5565,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2322-errors"
        },
        {
          "name": "eliminate-ts2322-completely",
          "path": "codemods/eliminate-ts2322-completely.ts",
          "size": 12885,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2322-errors"
        },
        {
          "name": "fix-ts2322-remaining-ast",
          "path": "codemods/fix-ts2322-remaining-ast.ts",
          "size": 8484,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2322-errors"
        },
        {
          "name": "fix-ts2322-type-assignments",
          "path": "codemods/fix-ts2322-type-assignments.ts",
          "size": 7803,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2322-errors"
        },
        {
          "name": "fix-ts2322-type-assignments-enhanced",
          "path": "codemods/fix-ts2322-type-assignments-enhanced.ts",
          "size": 6685,
          "approach": "AST",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Complex regex patterns: 8",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "COMPLEX_REGEX",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2322-errors"
        },
        {
          "name": "fix-ts2322-type-not-assignable",
          "path": "codemods/fix-ts2322-type-not-assignable.ts",
          "size": 12366,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2322-errors"
        },
        {
          "name": "fix-ts2322-corrected-patterns",
          "path": "codemods/fix-ts2322-corrected-patterns.ts",
          "size": 6984,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2322-errors"
        },
        {
          "name": "fix-ts2322-targeted-ast",
          "path": "codemods/fix-ts2322-targeted-ast.ts",
          "size": 6552,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2322-errors"
        },
        {
          "name": "fix-ts2322-targeted",
          "path": "codemods/fix-ts2322-targeted.ts",
          "size": 9436,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2322-errors"
        },
        {
          "name": "fix-ts2322-remaining",
          "path": "codemods/fix-ts2322-remaining.ts",
          "size": 7679,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2322-errors"
        },
        {
          "name": "fix-ts2322-precise-ast",
          "path": "codemods/fix-ts2322-precise-ast.ts",
          "size": 7094,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2322-errors"
        },
        {
          "name": "fix-ts2322-current-patterns",
          "path": "codemods/fix-ts2322-current-patterns.ts",
          "size": 8369,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2322-errors"
        },
        {
          "name": "fix-ts2322-ast-based",
          "path": "codemods/fix-ts2322-ast-based.ts",
          "size": 9579,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2322-errors"
        }
      ],
      "typescript-errors": [
        {
          "name": "fix-ts2339-property-not-exist",
          "path": "codemods/fix-ts2339-property-not-exist.ts",
          "size": 9459,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "typescript-errors"
        },
        {
          "name": "fix-ts2552-name-resolution",
          "path": "codemods/fix-ts2552-name-resolution.ts",
          "size": 3811,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "typescript-errors"
        },
        {
          "name": "fix-ts2769-overload-mismatch",
          "path": "codemods/fix-ts2769-overload-mismatch.ts",
          "size": 10390,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "typescript-errors"
        },
        {
          "name": "fix-ts2552-proper-resolution",
          "path": "codemods/fix-ts2552-proper-resolution.ts",
          "size": 5243,
          "approach": "AST",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Complex regex patterns: 3",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "COMPLEX_REGEX",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "typescript-errors"
        },
        {
          "name": "fix-ts18046-unknown-types",
          "path": "codemods/fix-ts18046-unknown-types.ts",
          "size": 7017,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "typescript-errors"
        },
        {
          "name": "fix-ts18048-precise-patterns",
          "path": "codemods/fix-ts18048-precise-patterns.ts",
          "size": 6593,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "typescript-errors"
        },
        {
          "name": "fix-ts2353-object-literals",
          "path": "codemods/fix-ts2353-object-literals.ts",
          "size": 7801,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "typescript-errors"
        },
        {
          "name": "eliminate-ts2353-completely",
          "path": "codemods/eliminate-ts2353-completely.ts",
          "size": 4820,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "typescript-errors"
        },
        {
          "name": "fix-ts18048-undefined-errors",
          "path": "codemods/fix-ts18048-undefined-errors.ts",
          "size": 6783,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "typescript-errors"
        }
      ],
      "ts2345-errors": [
        {
          "name": "eliminate-ts2345-completely",
          "path": "codemods/eliminate-ts2345-completely.ts",
          "size": 7623,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2345-errors"
        },
        {
          "name": "conservative-ts2345-round2",
          "path": "codemods/conservative-ts2345-round2.ts",
          "size": 9257,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2345-errors"
        },
        {
          "name": "fix-ts2345-targeted",
          "path": "codemods/fix-ts2345-targeted.ts",
          "size": 5706,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2345-errors"
        },
        {
          "name": "conservative-ts2345-fixer",
          "path": "codemods/conservative-ts2345-fixer.ts",
          "size": 7977,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2345-errors"
        },
        {
          "name": "fix-ts2345-argument-errors",
          "path": "codemods/fix-ts2345-argument-errors.ts",
          "size": 6044,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2345-errors"
        },
        {
          "name": "fix-ts2345-argument-types",
          "path": "codemods/fix-ts2345-argument-types.ts",
          "size": 9203,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2345-errors"
        }
      ],
      "variable-naming": [
        {
          "name": "cleanup-triple-underscore-vars",
          "path": "codemods/cleanup-triple-underscore-vars.ts",
          "size": 3565,
          "approach": "HYBRID",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Hardcoded file paths detected",
            "Complex regex patterns: 4",
            "Variable/unused parameter fixer"
          ],
          "hasTest": true,
          "flags": [
            "HARDCODED_PATHS",
            "HARDCODED_PATHS",
            "COMPLEX_REGEX",
            "VARIABLE_FIXER"
          ],
          "consolidationGroup": "variable-naming"
        },
        {
          "name": "simple-underscore-fix",
          "path": "codemods/simple-underscore-fix.ts",
          "size": 5062,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Hardcoded file paths detected",
            "Variable/unused parameter fixer"
          ],
          "hasTest": true,
          "flags": [
            "HARDCODED_PATHS",
            "HARDCODED_PATHS",
            "VARIABLE_FIXER"
          ],
          "consolidationGroup": "variable-naming"
        },
        {
          "name": "comprehensive-underscore-fix",
          "path": "codemods/comprehensive-underscore-fix.ts",
          "size": 11002,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Hardcoded file paths detected",
            "Complex regex patterns: 38",
            "Bulk/generic fixer pattern",
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "HARDCODED_PATHS",
            "COMPLEX_REGEX",
            "BULK_FIXER",
            "VARIABLE_FIXER"
          ],
          "consolidationGroup": "variable-naming"
        },
        {
          "name": "fix-parameter-underscore-mismatch",
          "path": "codemods/fix-parameter-underscore-mismatch.ts",
          "size": 5286,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Complex regex patterns: 6",
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "COMPLEX_REGEX",
            "VARIABLE_FIXER"
          ],
          "consolidationGroup": "variable-naming"
        },
        {
          "name": "fix-variable-naming-ast",
          "path": "codemods/fix-variable-naming-ast.ts",
          "size": 9487,
          "approach": "HYBRID",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Hardcoded file paths detected",
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "HARDCODED_PATHS",
            "VARIABLE_FIXER"
          ],
          "consolidationGroup": "variable-naming"
        },
        {
          "name": "modern-variable-naming-fix",
          "path": "codemods/modern-variable-naming-fix.ts",
          "size": 5004,
          "approach": "HYBRID",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Variable/unused parameter fixer"
          ],
          "hasTest": true,
          "flags": [
            "HARDCODED_PATHS",
            "VARIABLE_FIXER"
          ],
          "consolidationGroup": "variable-naming"
        },
        {
          "name": "fix-incorrect-underscore-prefixes",
          "path": "codemods/fix-incorrect-underscore-prefixes.ts",
          "size": 3248,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Complex regex patterns: 21",
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "COMPLEX_REGEX",
            "VARIABLE_FIXER"
          ],
          "consolidationGroup": "variable-naming"
        },
        {
          "name": "fix-underscore-prefix",
          "path": "codemods/fix-underscore-prefix.ts",
          "size": 3298,
          "approach": "REGEX",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "VARIABLE_FIXER"
          ],
          "consolidationGroup": "variable-naming"
        },
        {
          "name": "fix-result-underscore-mismatch",
          "path": "codemods/fix-result-underscore-mismatch.ts",
          "size": 1833,
          "approach": "REGEX",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "VARIABLE_FIXER"
          ],
          "consolidationGroup": "variable-naming"
        }
      ],
      "unused-variables": [
        {
          "name": "fix-unused-variables-simple",
          "path": "codemods/fix-unused-variables-simple.ts",
          "size": 3238,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Complex regex patterns: 4",
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "COMPLEX_REGEX",
            "VARIABLE_FIXER"
          ],
          "consolidationGroup": "unused-variables"
        },
        {
          "name": "fix-unused-vars-targeted",
          "path": "codemods/fix-unused-vars-targeted.ts",
          "size": 4626,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Heuristic pattern matching detected",
            "Complex regex patterns: 4",
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "HEURISTIC_APPROACH",
            "COMPLEX_REGEX",
            "VARIABLE_FIXER"
          ],
          "consolidationGroup": "unused-variables"
        },
        {
          "name": "fix-unused-vars-patterns",
          "path": "codemods/fix-unused-vars-patterns.ts",
          "size": 2563,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Hardcoded file paths detected",
            "Complex regex patterns: 5",
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "HARDCODED_PATHS",
            "COMPLEX_REGEX",
            "VARIABLE_FIXER"
          ],
          "consolidationGroup": "unused-variables"
        },
        {
          "name": "fix-remaining-unused-vars",
          "path": "codemods/fix-remaining-unused-vars.ts",
          "size": 2672,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Complex regex patterns: 7",
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "COMPLEX_REGEX",
            "VARIABLE_FIXER"
          ],
          "consolidationGroup": "unused-variables"
        },
        {
          "name": "fix-unused-vars-simple",
          "path": "codemods/fix-unused-vars-simple.ts",
          "size": 4524,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Hardcoded file paths detected",
            "Complex regex patterns: 4",
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "HARDCODED_PATHS",
            "COMPLEX_REGEX",
            "VARIABLE_FIXER"
          ],
          "consolidationGroup": "unused-variables"
        },
        {
          "name": "fix-unused-vars-comprehensive",
          "path": "codemods/fix-unused-vars-comprehensive.ts",
          "size": 5365,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Hardcoded file paths detected",
            "Hardcoded file paths detected",
            "Complex regex patterns: 18",
            "Bulk/generic fixer pattern",
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "HARDCODED_PATHS",
            "HARDCODED_PATHS",
            "COMPLEX_REGEX",
            "BULK_FIXER",
            "VARIABLE_FIXER"
          ],
          "consolidationGroup": "unused-variables"
        },
        {
          "name": "fix-unused-variables-targeted",
          "path": "codemods/fix-unused-variables-targeted.ts",
          "size": 2286,
          "approach": "REGEX",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Hardcoded file paths detected",
            "Hardcoded file paths detected",
            "Complex regex patterns: 7",
            "Variable/unused parameter fixer"
          ],
          "hasTest": false,
          "flags": [
            "HARDCODED_PATHS",
            "HARDCODED_PATHS",
            "COMPLEX_REGEX",
            "VARIABLE_FIXER"
          ],
          "consolidationGroup": "unused-variables"
        }
      ],
      "bulk-fixers": [
        {
          "name": "surgical-bulk-fixer",
          "path": "codemods/surgical-bulk-fixer.ts",
          "size": 6821,
          "approach": "AST",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Complex regex patterns: 14",
            "Bulk/generic fixer pattern"
          ],
          "hasTest": false,
          "flags": [
            "COMPLEX_REGEX",
            "BULK_FIXER"
          ],
          "consolidationGroup": "bulk-fixers"
        },
        {
          "name": "targeted-bulk-fixer",
          "path": "codemods/targeted-bulk-fixer.ts",
          "size": 5146,
          "approach": "AST",
          "riskLevel": "HIGH",
          "riskFactors": [
            "Bulk/generic fixer pattern"
          ],
          "hasTest": false,
          "flags": [
            "BULK_FIXER"
          ],
          "consolidationGroup": "bulk-fixers"
        }
      ],
      "ts2564-errors": [
        {
          "name": "fix-ts2564-property-initialization",
          "path": "codemods/fix-ts2564-property-initialization.ts",
          "size": 4334,
          "approach": "AST",
          "riskLevel": "MEDIUM",
          "riskFactors": [
            "Hardcoded file paths detected",
            "TypeScript error fixer"
          ],
          "hasTest": true,
          "flags": [
            "HARDCODED_PATHS",
            "TS_ERROR_FIXER"
          ],
          "consolidationGroup": "ts2564-errors"
        }
      ],
      "formatting": [
        {
          "name": "fix-indentation",
          "path": "codemods/fix-indentation.ts",
          "size": 2441,
          "approach": "HYBRID",
          "riskLevel": "LOW",
          "riskFactors": [],
          "hasTest": true,
          "flags": [],
          "consolidationGroup": "formatting"
        }
      ]
    },
    "flaggedForRemoval": [],
    "summary": "\nSTRATEGY RECOMMENDATIONS:\n- Immediately remove 0 flagged codemods\n- Priority test 35 high-risk codemods\n- Batch test 57 medium-risk codemods\n- Consolidate 8 groups\n- Expected final count: ~39 codemods\n"
  },
  "detailedAnalyses": [
    {
      "name": "fix-ts2322-type-assignment-errors",
      "path": "codemods/fix-ts2322-type-assignment-errors.ts",
      "size": 5565,
      "approach": "AST",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Hardcoded file paths detected",
        "TypeScript error fixer"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS",
        "TS_ERROR_FIXER"
      ],
      "consolidationGroup": "ts2322-errors"
    },
    {
      "name": "eliminate-ts2322-completely",
      "path": "codemods/eliminate-ts2322-completely.ts",
      "size": 12885,
      "approach": "AST",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Hardcoded file paths detected",
        "TypeScript error fixer"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS",
        "TS_ERROR_FIXER"
      ],
      "consolidationGroup": "ts2322-errors"
    },
    {
      "name": "fix-unknown-type-assertions",
      "path": "codemods/fix-unknown-type-assertions.ts",
      "size": 4784,
      "approach": "AST",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Hardcoded file paths detected"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS"
      ]
    },
    {
      "name": "fix-ts2339-property-not-exist",
      "path": "codemods/fix-ts2339-property-not-exist.ts",
      "size": 9459,
      "approach": "AST",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Hardcoded file paths detected",
        "TypeScript error fixer"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS",
        "TS_ERROR_FIXER"
      ],
      "consolidationGroup": "typescript-errors"
    },
    {
      "name": "source-files-fixer",
      "path": "codemods/source-files-fixer.ts",
      "size": 4962,
      "approach": "AST",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Hardcoded file paths detected"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS"
      ]
    },
    {
      "name": "fix-ts2552-name-resolution",
      "path": "codemods/fix-ts2552-name-resolution.ts",
      "size": 3811,
      "approach": "AST",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Hardcoded file paths detected",
        "TypeScript error fixer"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS",
        "TS_ERROR_FIXER"
      ],
      "consolidationGroup": "typescript-errors"
    },
    {
      "name": "eliminate-ts2345-completely",
      "path": "codemods/eliminate-ts2345-completely.ts",
      "size": 7623,
      "approach": "AST",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Hardcoded file paths detected",
        "TypeScript error fixer"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS",
        "TS_ERROR_FIXER"
      ],
      "consolidationGroup": "ts2345-errors"
    },
    {
      "name": "fix-missing-required-properties",
      "path": "codemods/fix-missing-required-properties.ts",
      "size": 7642,
      "approach": "AST",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Hardcoded file paths detected"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS"
      ]
    },
    {
      "name": "fix-mocking-safe-ast",
      "path": "codemods/fix-mocking-safe-ast.ts",
      "size": 6760,
      "approach": "AST",
      "riskLevel": "HIGH",
      "riskFactors": [
        "Hardcoded file paths detected",
        "Hardcoded file paths detected",
        "Hardcoded file paths detected",
        "Complex regex patterns: 4"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS",
        "HARDCODED_PATHS",
        "HARDCODED_PATHS",
        "COMPLEX_REGEX"
      ]
    },
    {
      "name": "fix-undef-variables",
      "path": "codemods/fix-undef-variables.ts",
      "size": 2548,
      "approach": "REGEX",
      "riskLevel": "HIGH",
      "riskFactors": [
        "Complex regex patterns: 15",
        "Variable/unused parameter fixer"
      ],
      "hasTest": false,
      "flags": [
        "COMPLEX_REGEX",
        "VARIABLE_FIXER"
      ]
    },
    {
      "name": "fix-this-prefix",
      "path": "codemods/fix-this-prefix.ts",
      "size": 3193,
      "approach": "REGEX",
      "riskLevel": "HIGH",
      "riskFactors": [
        "Hardcoded file paths detected",
        "Hardcoded file paths detected",
        "Complex regex patterns: 18"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS",
        "HARDCODED_PATHS",
        "COMPLEX_REGEX"
      ]
    },
    {
      "name": "fix-mocking-comprehensive-ast",
      "path": "codemods/fix-mocking-comprehensive-ast.ts",
      "size": 6151,
      "approach": "AST",
      "riskLevel": "HIGH",
      "riskFactors": [
        "Hardcoded file paths detected",
        "Hardcoded file paths detected",
        "Hardcoded file paths detected",
        "Complex regex patterns: 11",
        "Bulk/generic fixer pattern"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS",
        "HARDCODED_PATHS",
        "HARDCODED_PATHS",
        "COMPLEX_REGEX",
        "BULK_FIXER"
      ]
    },
    {
      "name": "fix-targeted-parsing-errors",
      "path": "codemods/fix-targeted-parsing-errors.ts",
      "size": 6371,
      "approach": "REGEX",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Complex regex patterns: 5"
      ],
      "hasTest": false,
      "flags": [
        "COMPLEX_REGEX"
      ]
    },
    {
      "name": "fix-repository-naming-issues-improved",
      "path": "codemods/fix-repository-naming-issues-improved.ts",
      "size": 5365,
      "approach": "AST",
      "riskLevel": "HIGH",
      "riskFactors": [
        "Hardcoded file paths detected",
        "Hardcoded file paths detected",
        "Variable/unused parameter fixer"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS",
        "HARDCODED_PATHS",
        "VARIABLE_FIXER"
      ]
    },
    {
      "name": "fix-property-name-corrections",
      "path": "codemods/fix-property-name-corrections.ts",
      "size": 3900,
      "approach": "AST",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Hardcoded file paths detected"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS"
      ]
    },
    {
      "name": "fix-postgres-storage-types",
      "path": "codemods/fix-postgres-storage-types.ts",
      "size": 6511,
      "approach": "AST",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Hardcoded file paths detected"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS"
      ]
    },
    {
      "name": "fix-mocking-unknown-types",
      "path": "codemods/fix-mocking-unknown-types.ts",
      "size": 3176,
      "approach": "AST",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Hardcoded file paths detected"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS"
      ]
    },
    {
      "name": "cleanup-triple-underscore-vars",
      "path": "codemods/cleanup-triple-underscore-vars.ts",
      "size": 3565,
      "approach": "HYBRID",
      "riskLevel": "HIGH",
      "riskFactors": [
        "Hardcoded file paths detected",
        "Hardcoded file paths detected",
        "Complex regex patterns: 4",
        "Variable/unused parameter fixer"
      ],
      "hasTest": true,
      "flags": [
        "HARDCODED_PATHS",
        "HARDCODED_PATHS",
        "COMPLEX_REGEX",
        "VARIABLE_FIXER"
      ],
      "consolidationGroup": "variable-naming"
    },
    {
      "name": "fix-magic-numbers-remaining",
      "path": "codemods/fix-magic-numbers-remaining.ts",
      "size": 3910,
      "approach": "REGEX",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Complex regex patterns: 6"
      ],
      "hasTest": false,
      "flags": [
        "COMPLEX_REGEX"
      ]
    },
    {
      "name": "fix-undefined-variables-ast",
      "path": "codemods/fix-undefined-variables-ast.ts",
      "size": 8731,
      "approach": "AST",
      "riskLevel": "HIGH",
      "riskFactors": [
        "Hardcoded file paths detected",
        "Hardcoded file paths detected",
        "Variable/unused parameter fixer"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS",
        "HARDCODED_PATHS",
        "VARIABLE_FIXER"
      ]
    },
    {
      "name": "fix-unused-simple",
      "path": "codemods/fix-unused-simple.ts",
      "size": 2194,
      "approach": "REGEX",
      "riskLevel": "HIGH",
      "riskFactors": [
        "Complex regex patterns: 4",
        "Variable/unused parameter fixer"
      ],
      "hasTest": false,
      "flags": [
        "COMPLEX_REGEX",
        "VARIABLE_FIXER"
      ]
    },
    {
      "name": "fix-unused-variables-simple",
      "path": "codemods/fix-unused-variables-simple.ts",
      "size": 3238,
      "approach": "REGEX",
      "riskLevel": "HIGH",
      "riskFactors": [
        "Complex regex patterns: 4",
        "Variable/unused parameter fixer"
      ],
      "hasTest": false,
      "flags": [
        "COMPLEX_REGEX",
        "VARIABLE_FIXER"
      ],
      "consolidationGroup": "unused-variables"
    },
    {
      "name": "fix-current-globals",
      "path": "codemods/fix-current-globals.ts",
      "size": 2417,
      "approach": "REGEX",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Complex regex patterns: 4"
      ],
      "hasTest": false,
      "flags": [
        "COMPLEX_REGEX"
      ]
    },
    {
      "name": "fix-unused-ts-expect-error",
      "path": "codemods/fix-unused-ts-expect-error.ts",
      "size": 3077,
      "approach": "AST",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Hardcoded file paths detected",
        "Variable/unused parameter fixer"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS",
        "VARIABLE_FIXER"
      ]
    },
    {
      "name": "simple-underscore-fix",
      "path": "codemods/simple-underscore-fix.ts",
      "size": 5062,
      "approach": "REGEX",
      "riskLevel": "HIGH",
      "riskFactors": [
        "Hardcoded file paths detected",
        "Hardcoded file paths detected",
        "Variable/unused parameter fixer"
      ],
      "hasTest": true,
      "flags": [
        "HARDCODED_PATHS",
        "HARDCODED_PATHS",
        "VARIABLE_FIXER"
      ],
      "consolidationGroup": "variable-naming"
    },
    {
      "name": "fix-unused-vars-targeted",
      "path": "codemods/fix-unused-vars-targeted.ts",
      "size": 4626,
      "approach": "REGEX",
      "riskLevel": "HIGH",
      "riskFactors": [
        "Heuristic pattern matching detected",
        "Complex regex patterns: 4",
        "Variable/unused parameter fixer"
      ],
      "hasTest": false,
      "flags": [
        "HEURISTIC_APPROACH",
        "COMPLEX_REGEX",
        "VARIABLE_FIXER"
      ],
      "consolidationGroup": "unused-variables"
    },
    {
      "name": "fix-undefined-issues",
      "path": "codemods/fix-undefined-issues.ts",
      "size": 6241,
      "approach": "AST",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Hardcoded file paths detected"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS"
      ]
    },
    {
      "name": "conservative-ts2345-round2",
      "path": "codemods/conservative-ts2345-round2.ts",
      "size": 9257,
      "approach": "AST",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Hardcoded file paths detected",
        "TypeScript error fixer"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS",
        "TS_ERROR_FIXER"
      ],
      "consolidationGroup": "ts2345-errors"
    },
    {
      "name": "fix-ts2345-targeted",
      "path": "codemods/fix-ts2345-targeted.ts",
      "size": 5706,
      "approach": "AST",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Hardcoded file paths detected",
        "TypeScript error fixer"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS",
        "TS_ERROR_FIXER"
      ],
      "consolidationGroup": "ts2345-errors"
    },
    {
      "name": "fix-type-assertions",
      "path": "codemods/fix-type-assertions.ts",
      "size": 6504,
      "approach": "AST",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Hardcoded file paths detected"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS"
      ]
    },
    {
      "name": "comprehensive-underscore-fix",
      "path": "codemods/comprehensive-underscore-fix.ts",
      "size": 11002,
      "approach": "REGEX",
      "riskLevel": "HIGH",
      "riskFactors": [
        "Hardcoded file paths detected",
        "Hardcoded file paths detected",
        "Complex regex patterns: 38",
        "Bulk/generic fixer pattern",
        "Variable/unused parameter fixer"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS",
        "HARDCODED_PATHS",
        "COMPLEX_REGEX",
        "BULK_FIXER",
        "VARIABLE_FIXER"
      ],
      "consolidationGroup": "variable-naming"
    },
    {
      "name": "fix-parameter-underscore-mismatch",
      "path": "codemods/fix-parameter-underscore-mismatch.ts",
      "size": 5286,
      "approach": "REGEX",
      "riskLevel": "HIGH",
      "riskFactors": [
        "Complex regex patterns: 6",
        "Variable/unused parameter fixer"
      ],
      "hasTest": false,
      "flags": [
        "COMPLEX_REGEX",
        "VARIABLE_FIXER"
      ],
      "consolidationGroup": "variable-naming"
    },
    {
      "name": "fix-ts2322-remaining-ast",
      "path": "codemods/fix-ts2322-remaining-ast.ts",
      "size": 8484,
      "approach": "AST",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Hardcoded file paths detected",
        "TypeScript error fixer"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS",
        "TS_ERROR_FIXER"
      ],
      "consolidationGroup": "ts2322-errors"
    },
    {
      "name": "fix-variable-naming-ast",
      "path": "codemods/fix-variable-naming-ast.ts",
      "size": 9487,
      "approach": "HYBRID",
      "riskLevel": "HIGH",
      "riskFactors": [
        "Hardcoded file paths detected",
        "Hardcoded file paths detected",
        "Variable/unused parameter fixer"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS",
        "HARDCODED_PATHS",
        "VARIABLE_FIXER"
      ],
      "consolidationGroup": "variable-naming"
    },
    {
      "name": "fix-mocking-unknown-types-ast",
      "path": "codemods/fix-mocking-unknown-types-ast.ts",
      "size": 4876,
      "approach": "AST",
      "riskLevel": "LOW",
      "riskFactors": [],
      "hasTest": false,
      "flags": []
    },
    {
      "name": "fix-unused-vars-patterns",
      "path": "codemods/fix-unused-vars-patterns.ts",
      "size": 2563,
      "approach": "REGEX",
      "riskLevel": "HIGH",
      "riskFactors": [
        "Hardcoded file paths detected",
        "Hardcoded file paths detected",
        "Complex regex patterns: 5",
        "Variable/unused parameter fixer"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS",
        "HARDCODED_PATHS",
        "COMPLEX_REGEX",
        "VARIABLE_FIXER"
      ],
      "consolidationGroup": "unused-variables"
    },
    {
      "name": "fix-ts2322-type-assignments",
      "path": "codemods/fix-ts2322-type-assignments.ts",
      "size": 7803,
      "approach": "AST",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Hardcoded file paths detected",
        "TypeScript error fixer"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS",
        "TS_ERROR_FIXER"
      ],
      "consolidationGroup": "ts2322-errors"
    },
    {
      "name": "fix-ts2322-type-assignments-enhanced",
      "path": "codemods/fix-ts2322-type-assignments-enhanced.ts",
      "size": 6685,
      "approach": "AST",
      "riskLevel": "HIGH",
      "riskFactors": [
        "Hardcoded file paths detected",
        "Complex regex patterns: 8",
        "TypeScript error fixer"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS",
        "COMPLEX_REGEX",
        "TS_ERROR_FIXER"
      ],
      "consolidationGroup": "ts2322-errors"
    },
    {
      "name": "fix-remaining-variable-issues",
      "path": "codemods/fix-remaining-variable-issues.ts",
      "size": 4041,
      "approach": "REGEX",
      "riskLevel": "HIGH",
      "riskFactors": [
        "Hardcoded file paths detected",
        "Complex regex patterns: 15",
        "Variable/unused parameter fixer"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS",
        "COMPLEX_REGEX",
        "VARIABLE_FIXER"
      ]
    },
    {
      "name": "fix-magic-numbers",
      "path": "codemods/fix-magic-numbers.ts",
      "size": 5996,
      "approach": "REGEX",
      "riskLevel": "HIGH",
      "riskFactors": [
        "Hardcoded file paths detected",
        "Hardcoded file paths detected",
        "Complex regex patterns: 7"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS",
        "HARDCODED_PATHS",
        "COMPLEX_REGEX"
      ]
    },
    {
      "name": "surgical-bulk-fixer",
      "path": "codemods/surgical-bulk-fixer.ts",
      "size": 6821,
      "approach": "AST",
      "riskLevel": "HIGH",
      "riskFactors": [
        "Complex regex patterns: 14",
        "Bulk/generic fixer pattern"
      ],
      "hasTest": false,
      "flags": [
        "COMPLEX_REGEX",
        "BULK_FIXER"
      ],
      "consolidationGroup": "bulk-fixers"
    },
    {
      "name": "fix-explicit-any-types-proven",
      "path": "codemods/fix-explicit-any-types-proven.ts",
      "size": 6411,
      "approach": "HYBRID",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Complex regex patterns: 12"
      ],
      "hasTest": false,
      "flags": [
        "COMPLEX_REGEX"
      ]
    },
    {
      "name": "fix-ts2322-type-not-assignable",
      "path": "codemods/fix-ts2322-type-not-assignable.ts",
      "size": 12366,
      "approach": "AST",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Hardcoded file paths detected",
        "TypeScript error fixer"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS",
        "TS_ERROR_FIXER"
      ],
      "consolidationGroup": "ts2322-errors"
    },
    {
      "name": "conservative-ts2345-fixer",
      "path": "codemods/conservative-ts2345-fixer.ts",
      "size": 7977,
      "approach": "AST",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "TypeScript error fixer"
      ],
      "hasTest": false,
      "flags": [
        "TS_ERROR_FIXER"
      ],
      "consolidationGroup": "ts2345-errors"
    },
    {
      "name": "fix-command-registration-overloads",
      "path": "codemods/fix-command-registration-overloads.ts",
      "size": 5212,
      "approach": "AST",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Hardcoded file paths detected"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS"
      ]
    },
    {
      "name": "modern-variable-naming-fix",
      "path": "codemods/modern-variable-naming-fix.ts",
      "size": 5004,
      "approach": "HYBRID",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Hardcoded file paths detected",
        "Variable/unused parameter fixer"
      ],
      "hasTest": true,
      "flags": [
        "HARDCODED_PATHS",
        "VARIABLE_FIXER"
      ],
      "consolidationGroup": "variable-naming"
    },
    {
      "name": "fix-magic-numbers-domain",
      "path": "codemods/fix-magic-numbers-domain.ts",
      "size": 3140,
      "approach": "REGEX",
      "riskLevel": "HIGH",
      "riskFactors": [
        "Hardcoded file paths detected",
        "Complex regex patterns: 8"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS",
        "COMPLEX_REGEX"
      ]
    },
    {
      "name": "fix-ts2322-corrected-patterns",
      "path": "codemods/fix-ts2322-corrected-patterns.ts",
      "size": 6984,
      "approach": "AST",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Hardcoded file paths detected",
        "TypeScript error fixer"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS",
        "TS_ERROR_FIXER"
      ],
      "consolidationGroup": "ts2322-errors"
    },
    {
      "name": "fix-session-ts-issues",
      "path": "codemods/fix-session-ts-issues.ts",
      "size": 5033,
      "approach": "AST",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Hardcoded file paths detected"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS"
      ]
    },
    {
      "name": "fix-ts2769-overload-mismatch",
      "path": "codemods/fix-ts2769-overload-mismatch.ts",
      "size": 10390,
      "approach": "AST",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Hardcoded file paths detected",
        "TypeScript error fixer"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS",
        "TS_ERROR_FIXER"
      ],
      "consolidationGroup": "typescript-errors"
    },
    {
      "name": "fix-arrow-function-parameters",
      "path": "codemods/fix-arrow-function-parameters.ts",
      "size": 2534,
      "approach": "REGEX",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Hardcoded file paths detected"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS"
      ]
    },
    {
      "name": "fix-remaining-unused-vars",
      "path": "codemods/fix-remaining-unused-vars.ts",
      "size": 2672,
      "approach": "REGEX",
      "riskLevel": "HIGH",
      "riskFactors": [
        "Hardcoded file paths detected",
        "Complex regex patterns: 7",
        "Variable/unused parameter fixer"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS",
        "COMPLEX_REGEX",
        "VARIABLE_FIXER"
      ],
      "consolidationGroup": "unused-variables"
    },
    {
      "name": "fix-repository-naming-issues",
      "path": "codemods/fix-repository-naming-issues.ts",
      "size": 3408,
      "approach": "HYBRID",
      "riskLevel": "HIGH",
      "riskFactors": [
        "Hardcoded file paths detected",
        "Hardcoded file paths detected",
        "Variable/unused parameter fixer"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS",
        "HARDCODED_PATHS",
        "VARIABLE_FIXER"
      ]
    },
    {
      "name": "fix-ts2564-property-initialization",
      "path": "codemods/fix-ts2564-property-initialization.ts",
      "size": 4334,
      "approach": "AST",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Hardcoded file paths detected",
        "TypeScript error fixer"
      ],
      "hasTest": true,
      "flags": [
        "HARDCODED_PATHS",
        "TS_ERROR_FIXER"
      ],
      "consolidationGroup": "ts2564-errors"
    },
    {
      "name": "fix-indentation",
      "path": "codemods/fix-indentation.ts",
      "size": 2441,
      "approach": "HYBRID",
      "riskLevel": "LOW",
      "riskFactors": [],
      "hasTest": true,
      "flags": [],
      "consolidationGroup": "formatting"
    },
    {
      "name": "fix-ts2552-proper-resolution",
      "path": "codemods/fix-ts2552-proper-resolution.ts",
      "size": 5243,
      "approach": "AST",
      "riskLevel": "HIGH",
      "riskFactors": [
        "Hardcoded file paths detected",
        "Complex regex patterns: 3",
        "TypeScript error fixer"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS",
        "COMPLEX_REGEX",
        "TS_ERROR_FIXER"
      ],
      "consolidationGroup": "typescript-errors"
    },
    {
      "name": "fix-bun-process-types",
      "path": "codemods/fix-bun-process-types.ts",
      "size": 2298,
      "approach": "AST",
      "riskLevel": "LOW",
      "riskFactors": [],
      "hasTest": false,
      "flags": []
    },
    {
      "name": "fix-ts18046-unknown-types",
      "path": "codemods/fix-ts18046-unknown-types.ts",
      "size": 7017,
      "approach": "AST",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Hardcoded file paths detected",
        "TypeScript error fixer"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS",
        "TS_ERROR_FIXER"
      ],
      "consolidationGroup": "typescript-errors"
    },
    {
      "name": "fix-rules-type-assertions",
      "path": "codemods/fix-rules-type-assertions.ts",
      "size": 3657,
      "approach": "AST",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Hardcoded file paths detected"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS"
      ]
    },
    {
      "name": "fix-mocking-simple",
      "path": "codemods/fix-mocking-simple.ts",
      "size": 3743,
      "approach": "HYBRID",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Complex regex patterns: 6"
      ],
      "hasTest": false,
      "flags": [
        "COMPLEX_REGEX"
      ]
    },
    {
      "name": "fix-magic-numbers-focused",
      "path": "codemods/fix-magic-numbers-focused.ts",
      "size": 4012,
      "approach": "REGEX",
      "riskLevel": "HIGH",
      "riskFactors": [
        "Hardcoded file paths detected",
        "Hardcoded file paths detected",
        "Complex regex patterns: 7"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS",
        "HARDCODED_PATHS",
        "COMPLEX_REGEX"
      ]
    },
    {
      "name": "fix-ts2345-argument-errors",
      "path": "codemods/fix-ts2345-argument-errors.ts",
      "size": 6044,
      "approach": "AST",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Hardcoded file paths detected",
        "TypeScript error fixer"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS",
        "TS_ERROR_FIXER"
      ],
      "consolidationGroup": "ts2345-errors"
    },
    {
      "name": "fix-ts2322-targeted-ast",
      "path": "codemods/fix-ts2322-targeted-ast.ts",
      "size": 6552,
      "approach": "AST",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Hardcoded file paths detected",
        "TypeScript error fixer"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS",
        "TS_ERROR_FIXER"
      ],
      "consolidationGroup": "ts2322-errors"
    },
    {
      "name": "fix-syntax-errors",
      "path": "codemods/fix-syntax-errors.ts",
      "size": 3019,
      "approach": "AST",
      "riskLevel": "HIGH",
      "riskFactors": [
        "Hardcoded file paths detected",
        "Complex regex patterns: 7"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS",
        "COMPLEX_REGEX"
      ]
    },
    {
      "name": "fix-ts2322-targeted",
      "path": "codemods/fix-ts2322-targeted.ts",
      "size": 9436,
      "approach": "AST",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Hardcoded file paths detected",
        "TypeScript error fixer"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS",
        "TS_ERROR_FIXER"
      ],
      "consolidationGroup": "ts2322-errors"
    },
    {
      "name": "fix-incorrect-underscore-prefixes",
      "path": "codemods/fix-incorrect-underscore-prefixes.ts",
      "size": 3248,
      "approach": "REGEX",
      "riskLevel": "HIGH",
      "riskFactors": [
        "Hardcoded file paths detected",
        "Complex regex patterns: 21",
        "Variable/unused parameter fixer"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS",
        "COMPLEX_REGEX",
        "VARIABLE_FIXER"
      ],
      "consolidationGroup": "variable-naming"
    },
    {
      "name": "fix-final-syntax-errors",
      "path": "codemods/fix-final-syntax-errors.ts",
      "size": 3582,
      "approach": "REGEX",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Complex regex patterns: 13"
      ],
      "hasTest": false,
      "flags": [
        "COMPLEX_REGEX"
      ]
    },
    {
      "name": "fix-all-parsing-errors",
      "path": "codemods/fix-all-parsing-errors.ts",
      "size": 5195,
      "approach": "REGEX",
      "riskLevel": "HIGH",
      "riskFactors": [
        "Hardcoded file paths detected",
        "Complex regex patterns: 7",
        "Bulk/generic fixer pattern"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS",
        "COMPLEX_REGEX",
        "BULK_FIXER"
      ]
    },
    {
      "name": "fix-dependencies-mocks",
      "path": "codemods/fix-dependencies-mocks.ts",
      "size": 2700,
      "approach": "AST",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Hardcoded file paths detected"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS"
      ]
    },
    {
      "name": "fix-quotes-to-double",
      "path": "codemods/fix-quotes-to-double.ts",
      "size": 3759,
      "approach": "REGEX",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Hardcoded file paths detected",
        "Hardcoded file paths detected"
      ],
      "hasTest": true,
      "flags": [
        "HARDCODED_PATHS",
        "HARDCODED_PATHS"
      ]
    },
    {
      "name": "fix-ts2322-remaining",
      "path": "codemods/fix-ts2322-remaining.ts",
      "size": 7679,
      "approach": "AST",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Hardcoded file paths detected",
        "TypeScript error fixer"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS",
        "TS_ERROR_FIXER"
      ],
      "consolidationGroup": "ts2322-errors"
    },
    {
      "name": "fix-underscore-prefix",
      "path": "codemods/fix-underscore-prefix.ts",
      "size": 3298,
      "approach": "REGEX",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Variable/unused parameter fixer"
      ],
      "hasTest": false,
      "flags": [
        "VARIABLE_FIXER"
      ],
      "consolidationGroup": "variable-naming"
    },
    {
      "name": "targeted-bulk-fixer",
      "path": "codemods/targeted-bulk-fixer.ts",
      "size": 5146,
      "approach": "AST",
      "riskLevel": "HIGH",
      "riskFactors": [
        "Bulk/generic fixer pattern"
      ],
      "hasTest": false,
      "flags": [
        "BULK_FIXER"
      ],
      "consolidationGroup": "bulk-fixers"
    },
    {
      "name": "fix-ts2322-precise-ast",
      "path": "codemods/fix-ts2322-precise-ast.ts",
      "size": 7094,
      "approach": "AST",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Hardcoded file paths detected",
        "TypeScript error fixer"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS",
        "TS_ERROR_FIXER"
      ],
      "consolidationGroup": "ts2322-errors"
    },
    {
      "name": "fix-bun-compatibility-ast",
      "path": "codemods/fix-bun-compatibility-ast.ts",
      "size": 4181,
      "approach": "AST",
      "riskLevel": "HIGH",
      "riskFactors": [
        "Heuristic pattern matching detected"
      ],
      "hasTest": false,
      "flags": [
        "HEURISTIC_APPROACH"
      ]
    },
    {
      "name": "fix-unused-vars-simple",
      "path": "codemods/fix-unused-vars-simple.ts",
      "size": 4524,
      "approach": "REGEX",
      "riskLevel": "HIGH",
      "riskFactors": [
        "Hardcoded file paths detected",
        "Hardcoded file paths detected",
        "Complex regex patterns: 4",
        "Variable/unused parameter fixer"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS",
        "HARDCODED_PATHS",
        "COMPLEX_REGEX",
        "VARIABLE_FIXER"
      ],
      "consolidationGroup": "unused-variables"
    },
    {
      "name": "fix-ts2322-current-patterns",
      "path": "codemods/fix-ts2322-current-patterns.ts",
      "size": 8369,
      "approach": "AST",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Hardcoded file paths detected",
        "TypeScript error fixer"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS",
        "TS_ERROR_FIXER"
      ],
      "consolidationGroup": "ts2322-errors"
    },
    {
      "name": "fix-explicit-any-comprehensive",
      "path": "codemods/fix-explicit-any-comprehensive.ts",
      "size": 3595,
      "approach": "REGEX",
      "riskLevel": "HIGH",
      "riskFactors": [
        "Complex regex patterns: 19",
        "Bulk/generic fixer pattern"
      ],
      "hasTest": false,
      "flags": [
        "COMPLEX_REGEX",
        "BULK_FIXER"
      ]
    },
    {
      "name": "fix-bun-types-simple-ast",
      "path": "codemods/fix-bun-types-simple-ast.ts",
      "size": 3927,
      "approach": "AST",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Hardcoded file paths detected"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS"
      ]
    },
    {
      "name": "fix-explicit-any",
      "path": "codemods/fix-explicit-any.ts",
      "size": 3617,
      "approach": "HYBRID",
      "riskLevel": "HIGH",
      "riskFactors": [
        "Hardcoded file paths detected",
        "Hardcoded file paths detected",
        "Complex regex patterns: 18"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS",
        "HARDCODED_PATHS",
        "COMPLEX_REGEX"
      ]
    },
    {
      "name": "fix-explicit-any-simple",
      "path": "codemods/fix-explicit-any-simple.ts",
      "size": 4346,
      "approach": "HYBRID",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Complex regex patterns: 4"
      ],
      "hasTest": true,
      "flags": [
        "COMPLEX_REGEX"
      ]
    },
    {
      "name": "fix-ts18048-precise-patterns",
      "path": "codemods/fix-ts18048-precise-patterns.ts",
      "size": 6593,
      "approach": "AST",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Hardcoded file paths detected",
        "TypeScript error fixer"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS",
        "TS_ERROR_FIXER"
      ],
      "consolidationGroup": "typescript-errors"
    },
    {
      "name": "fix-mock-object-properties",
      "path": "codemods/fix-mock-object-properties.ts",
      "size": 3329,
      "approach": "AST",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Hardcoded file paths detected"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS"
      ]
    },
    {
      "name": "fix-buffer-string-issues",
      "path": "codemods/fix-buffer-string-issues.ts",
      "size": 2965,
      "approach": "AST",
      "riskLevel": "LOW",
      "riskFactors": [],
      "hasTest": false,
      "flags": []
    },
    {
      "name": "fix-result-underscore-mismatch",
      "path": "codemods/fix-result-underscore-mismatch.ts",
      "size": 1833,
      "approach": "REGEX",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Variable/unused parameter fixer"
      ],
      "hasTest": false,
      "flags": [
        "VARIABLE_FIXER"
      ],
      "consolidationGroup": "variable-naming"
    },
    {
      "name": "fix-ts2353-object-literals",
      "path": "codemods/fix-ts2353-object-literals.ts",
      "size": 7801,
      "approach": "AST",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Hardcoded file paths detected",
        "TypeScript error fixer"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS",
        "TS_ERROR_FIXER"
      ],
      "consolidationGroup": "typescript-errors"
    },
    {
      "name": "fix-common-undef",
      "path": "codemods/fix-common-undef.ts",
      "size": 4074,
      "approach": "REGEX",
      "riskLevel": "HIGH",
      "riskFactors": [
        "Hardcoded file paths detected",
        "Complex regex patterns: 29"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS",
        "COMPLEX_REGEX"
      ]
    },
    {
      "name": "fix-unused-vars-comprehensive",
      "path": "codemods/fix-unused-vars-comprehensive.ts",
      "size": 5365,
      "approach": "REGEX",
      "riskLevel": "HIGH",
      "riskFactors": [
        "Hardcoded file paths detected",
        "Hardcoded file paths detected",
        "Hardcoded file paths detected",
        "Complex regex patterns: 18",
        "Bulk/generic fixer pattern",
        "Variable/unused parameter fixer"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS",
        "HARDCODED_PATHS",
        "HARDCODED_PATHS",
        "COMPLEX_REGEX",
        "BULK_FIXER",
        "VARIABLE_FIXER"
      ],
      "consolidationGroup": "unused-variables"
    },
    {
      "name": "fix-common-type-issues",
      "path": "codemods/fix-common-type-issues.ts",
      "size": 1,
      "approach": "UNKNOWN",
      "riskLevel": "LOW",
      "riskFactors": [],
      "hasTest": false,
      "flags": []
    },
    {
      "name": "main-source-fixer",
      "path": "codemods/main-source-fixer.ts",
      "size": 5832,
      "approach": "AST",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Hardcoded file paths detected",
        "Hardcoded file paths detected"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS",
        "HARDCODED_PATHS"
      ]
    },
    {
      "name": "eliminate-ts2353-completely",
      "path": "codemods/eliminate-ts2353-completely.ts",
      "size": 4820,
      "approach": "AST",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Hardcoded file paths detected",
        "TypeScript error fixer"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS",
        "TS_ERROR_FIXER"
      ],
      "consolidationGroup": "typescript-errors"
    },
    {
      "name": "fix-mock-function-signatures",
      "path": "codemods/fix-mock-function-signatures.ts",
      "size": 10987,
      "approach": "AST",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Hardcoded file paths detected"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS"
      ]
    },
    {
      "name": "fix-ts2345-argument-types",
      "path": "codemods/fix-ts2345-argument-types.ts",
      "size": 9203,
      "approach": "AST",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Hardcoded file paths detected",
        "TypeScript error fixer"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS",
        "TS_ERROR_FIXER"
      ],
      "consolidationGroup": "ts2345-errors"
    },
    {
      "name": "fix-ts18048-undefined-errors",
      "path": "codemods/fix-ts18048-undefined-errors.ts",
      "size": 6783,
      "approach": "AST",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "TypeScript error fixer"
      ],
      "hasTest": false,
      "flags": [
        "TS_ERROR_FIXER"
      ],
      "consolidationGroup": "typescript-errors"
    },
    {
      "name": "fix-unused-variables-targeted",
      "path": "codemods/fix-unused-variables-targeted.ts",
      "size": 2286,
      "approach": "REGEX",
      "riskLevel": "HIGH",
      "riskFactors": [
        "Hardcoded file paths detected",
        "Hardcoded file paths detected",
        "Complex regex patterns: 7",
        "Variable/unused parameter fixer"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS",
        "HARDCODED_PATHS",
        "COMPLEX_REGEX",
        "VARIABLE_FIXER"
      ],
      "consolidationGroup": "unused-variables"
    },
    {
      "name": "fix-ts2322-ast-based",
      "path": "codemods/fix-ts2322-ast-based.ts",
      "size": 9579,
      "approach": "AST",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "TypeScript error fixer"
      ],
      "hasTest": false,
      "flags": [
        "TS_ERROR_FIXER"
      ],
      "consolidationGroup": "ts2322-errors"
    },
    {
      "name": "fix-mocking-unknown-ast",
      "path": "codemods/fix-mocking-unknown-ast.ts",
      "size": 4854,
      "approach": "AST",
      "riskLevel": "MEDIUM",
      "riskFactors": [
        "Hardcoded file paths detected"
      ],
      "hasTest": false,
      "flags": [
        "HARDCODED_PATHS"
      ]
    }
  ]
}