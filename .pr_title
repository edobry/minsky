feat(#303): implement auto-commit integration for task operations

## Summary

This PR implements complete auto-commit functionality for task operations in the markdown backend, eliminating the need for agents to manually commit and push changes after task status updates, creation, or deletion.

## Changes

### Added

- **Auto-commit utility** (`src/utils/auto-commit.ts`): Robust utility following session approve pattern for automatic git operations
- **Workspace resolver** (`src/utils/workspace-resolver.ts`): Backend-aware workspace resolution using TaskBackendRouter
- **Auto-commit integration**: All task modification operations now automatically commit changes for markdown backend

### Changed

- **All 8 task command functions** updated with new workspace resolution:
  - `listTasksFromParams()`, `getTaskFromParams()`, `getTaskStatusFromParams()`, `getTaskSpecContentFromParams()` - workspace resolution
  - `setTaskStatusFromParams()` - auto-commit for status updates
  - `createTaskFromParams()`, `createTaskFromTitleAndDescription()` - auto-commit for task creation  
  - `deleteTaskFromParams()` - auto-commit for task deletion
- **Test mocks**: Updated all 20 test instances to use new `resolveTaskWorkspacePath` function

### Technical Details

- **Backend Specificity**: Auto-commit only applies to markdown backend, other backends unaffected
- **Error Resilience**: Auto-commit failures do not break task operations (graceful degradation)
- **Conventional Commits**: Generated commit messages follow established format:
  - `chore(#123): update task status TODO → IN-PROGRESS`
  - `feat(#123): create task "New Feature"`
  - `chore(#123): delete task`
- **Performance**: Minimal overhead using simple utility functions
- **Integration**: Uses existing special workspace infrastructure

## Testing

- ✅ **Auto-commit tests**: 3/3 passing
- ✅ **Task command tests**: 20/20 passing  
- ✅ **Integration tested**: All task operations work correctly with auto-commit
- ✅ **Error scenarios**: Git failures handled gracefully

## Agent Benefits

**Before**: Agents had to manually run git commands after task operations
```bash
minsky tasks status set 123 DONE
git add process/tasks.md process/tasks/
git commit -m "chore(#123): update task status"
git push
```

**After**: Agents get automatic commits and pushes
```bash
minsky tasks status set 123 DONE
# ✅ Auto-commits: "chore(#123): update task status TODO → DONE"
# ✅ Auto-pushes to remote
```

## Implementation Status

- ✅ **Phase 1**: Special workspace integration (100% complete)
- ✅ **Phase 2**: Auto-commit utility implementation (100% complete)  
- ✅ **Phase 3**: Task operation integration (100% complete)
- ✅ **Follow-up**: Test coverage and validation (100% complete)

This PR completes Task #303 with comprehensive auto-commit functionality that dramatically simplifies the agent workflow for task operations. 
